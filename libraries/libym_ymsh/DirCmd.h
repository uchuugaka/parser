#ifndef LIBYM_YMSH_DIRCMD_H
#define LIBYM_YMSH_DIRCMD_H

/// @file libym_ymsh/DirCmd.h
/// @brief DirCmd のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2005-2011 Yusuke Matsunaga
/// All rights reserved.


#include "ym_ymsh/YmshCmd.h"


BEGIN_NAMESPACE_YM_YMSH

//////////////////////////////////////////////////////////////////////
/// @class PwdCmd DirCmd.h "DirCmd.h"
/// @brief pwd コマンドのクラス
//////////////////////////////////////////////////////////////////////
class PwdCmd :
  public YmshCmd
{
public:

  /// @brief コンストラクタ
  PwdCmd();

  /// @brief デストラクタ
  virtual
  ~PwdCmd();


public:
  //////////////////////////////////////////////////////////////////////
  // 処理を行うメイン関数
  //////////////////////////////////////////////////////////////////////

  /// @brief コマンドの実行を行う．
  /// @param[in] argv コマンド行の引数のベクタ(空白で切り分けてある)
  /// @return 実行後の状態を表すコードを返す．
  virtual
  int
  exec(const vector<string>& argv);

};


//////////////////////////////////////////////////////////////////////
/// @class CdCmd DirCmd.h "DirCmd.h"
/// @brief cd コマンドのクラス
//////////////////////////////////////////////////////////////////////
class CdCmd :
  public YmshCmd
{
public:

  /// @brief コンストラクタ
  CdCmd();

  /// @brief デストラクタ
  virtual
  ~CdCmd();


public:
  //////////////////////////////////////////////////////////////////////
  // 処理を行うメイン関数
  //////////////////////////////////////////////////////////////////////

  /// @brief コマンドの実行を行う．
  /// @param[in] argv コマンド行の引数のベクタ(空白で切り分けてある)
  /// @return 実行後の状態を表すコードを返す．
  virtual
  int
  exec(const vector<string>& argv);

};


//////////////////////////////////////////////////////////////////////
/// @class MkdirCmd DirCmd.h "DirCmd.h"
/// @brief mkdir コマンドのクラス
//////////////////////////////////////////////////////////////////////
class MkdirCmd :
  public YmshCmd
{
public:

  /// @brief コンストラクタ
  MkdirCmd();

  /// @brief デストラクタ
  virtual
  ~MkdirCmd();


public:
  //////////////////////////////////////////////////////////////////////
  // 処理を行うメイン関数
  //////////////////////////////////////////////////////////////////////

  /// @brief コマンドの実行を行う．
  /// @param[in] argv コマンド行の引数のベクタ(空白で切り分けてある)
  /// @return 実行後の状態を表すコードを返す．
  virtual
  int
  exec(const vector<string>& argv);

};


//////////////////////////////////////////////////////////////////////
/// @class RmdirCmd DirCmd.h "DirCmd.h"
/// @brief rmdir コマンドのクラス
//////////////////////////////////////////////////////////////////////
class RmdirCmd :
  public YmshCmd
{
public:

  /// @brief コンストラクタ
  RmdirCmd();

  /// @brief デストラクタ
  virtual
  ~RmdirCmd();


public:
  //////////////////////////////////////////////////////////////////////
  // 処理を行うメイン関数
  //////////////////////////////////////////////////////////////////////

  /// @brief コマンドの実行を行う．
  /// @param[in] argv コマンド行の引数のベクタ(空白で切り分けてある)
  /// @return 実行後の状態を表すコードを返す．
  virtual
  int
  exec(const vector<string>& argv);

};

END_NAMESPACE_YM_YMSH

#endif // LIBYM_YMSH_DIRCMD_H
