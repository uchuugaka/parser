  {
    size_t node0 = aig2table[0].make_const0();
    aig2table[0].set_root(node0);
  }
  {
    size_t node0 = aig2table[1].make_literal(0, false);
    size_t node1 = aig2table[1].make_literal(1, false);
    size_t node2 = aig2table[1].make_and(node0, true, node1, true);
    aig2table[1].set_root(node2);
  }
  {
    size_t node0 = aig2table[2].make_literal(0, false);
    size_t node1 = aig2table[2].make_literal(1, false);
    size_t node2 = aig2table[2].make_and(node0, false, node1, true);
    aig2table[2].set_root(node2);
  }
  {
    size_t node0 = aig2table[3].make_literal(1, true);
    aig2table[3].set_root(node0);
  }
  {
    size_t node0 = aig2table[4].make_literal(0, false);
    size_t node1 = aig2table[4].make_literal(1, false);
    size_t node2 = aig2table[4].make_and(node0, true, node1, false);
    aig2table[4].set_root(node2);
  }
  {
    size_t node0 = aig2table[5].make_literal(0, true);
    aig2table[5].set_root(node0);
  }
  {
    size_t node0 = aig2table[6].make_literal(0, false);
    size_t node1 = aig2table[6].make_literal(1, false);
    size_t node2 = aig2table[6].make_xor(node0, false, node1, false);
    aig2table[6].set_root(node2);
  }
  {
    size_t node0 = aig2table[7].make_literal(0, false);
    size_t node1 = aig2table[7].make_literal(1, false);
    size_t node2 = aig2table[7].make_or(node0, true, node1, true);
    aig2table[7].set_root(node2);
  }
  {
    size_t node0 = aig2table[8].make_literal(0, false);
    size_t node1 = aig2table[8].make_literal(1, false);
    size_t node2 = aig2table[8].make_and(node0, false, node1, false);
    aig2table[8].set_root(node2);
  }
  {
    size_t node0 = aig2table[9].make_literal(0, false);
    size_t node1 = aig2table[9].make_literal(1, false);
    size_t node2 = aig2table[9].make_xor(node0, false, node1, true);
    aig2table[9].set_root(node2);
  }
  {
    size_t node0 = aig2table[10].make_literal(0, false);
    aig2table[10].set_root(node0);
  }
  {
    size_t node0 = aig2table[11].make_literal(0, false);
    size_t node1 = aig2table[11].make_literal(1, false);
    size_t node2 = aig2table[11].make_or(node0, false, node1, true);
    aig2table[11].set_root(node2);
  }
  {
    size_t node0 = aig2table[12].make_literal(1, false);
    aig2table[12].set_root(node0);
  }
  {
    size_t node0 = aig2table[13].make_literal(0, false);
    size_t node1 = aig2table[13].make_literal(1, false);
    size_t node2 = aig2table[13].make_or(node0, true, node1, false);
    aig2table[13].set_root(node2);
  }
  {
    size_t node0 = aig2table[14].make_literal(0, false);
    size_t node1 = aig2table[14].make_literal(1, false);
    size_t node2 = aig2table[14].make_or(node0, false, node1, false);
    aig2table[14].set_root(node2);
  }
  {
    size_t node0 = aig2table[15].make_const1();
    aig2table[15].set_root(node0);
  }
  {
    size_t node0 = aig3table[0].make_const0();
    aig3table[0].set_root(node0);
  }
  {
    size_t node0 = aig3table[1].make_literal(0, true);
    size_t node1 = aig3table[1].make_literal(1, true);
    size_t node2 = aig3table[1].make_literal(2, true);
    size_t node3 = aig3table[1].make_and(node1, false, node2, false);
    size_t node4 = aig3table[1].make_and(node0, false, node3, false);
    aig3table[1].set_root(node4);
  }
  {
    size_t node0 = aig3table[2].make_literal(0, false);
    size_t node1 = aig3table[2].make_literal(1, true);
    size_t node2 = aig3table[2].make_literal(2, true);
    size_t node3 = aig3table[2].make_and(node1, false, node2, false);
    size_t node4 = aig3table[2].make_and(node0, false, node3, false);
    aig3table[2].set_root(node4);
  }
  {
    size_t node0 = aig3table[3].make_literal(1, true);
    size_t node1 = aig3table[3].make_literal(2, true);
    size_t node2 = aig3table[3].make_and(node0, false, node1, false);
    aig3table[3].set_root(node2);
  }
  {
    size_t node0 = aig3table[4].make_literal(0, true);
    size_t node1 = aig3table[4].make_literal(1, false);
    size_t node2 = aig3table[4].make_literal(2, true);
    size_t node3 = aig3table[4].make_and(node1, false, node2, false);
    size_t node4 = aig3table[4].make_and(node0, false, node3, false);
    aig3table[4].set_root(node4);
  }
  {
    size_t node0 = aig3table[5].make_literal(0, true);
    size_t node1 = aig3table[5].make_literal(2, true);
    size_t node2 = aig3table[5].make_and(node0, false, node1, false);
    aig3table[5].set_root(node2);
  }
  {
    size_t node0 = aig3table[6].make_literal(2, true);
    size_t node1 = aig3table[6].make_literal(0, false);
    size_t node2 = aig3table[6].make_literal(1, false);
    size_t node3 = aig3table[6].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[6].make_and(node0, false, node3, false);
    aig3table[6].set_root(node4);
  }
  {
    size_t node0 = aig3table[7].make_literal(2, true);
    size_t node1 = aig3table[7].make_literal(0, true);
    size_t node2 = aig3table[7].make_literal(1, true);
    size_t node3 = aig3table[7].make_or(node1, false, node2, false);
    size_t node4 = aig3table[7].make_and(node0, false, node3, false);
    aig3table[7].set_root(node4);
  }
  {
    size_t node0 = aig3table[8].make_literal(0, false);
    size_t node1 = aig3table[8].make_literal(1, false);
    size_t node2 = aig3table[8].make_literal(2, true);
    size_t node3 = aig3table[8].make_and(node1, false, node2, false);
    size_t node4 = aig3table[8].make_and(node0, false, node3, false);
    aig3table[8].set_root(node4);
  }
  {
    size_t node0 = aig3table[9].make_literal(2, true);
    size_t node1 = aig3table[9].make_literal(0, true);
    size_t node2 = aig3table[9].make_literal(1, false);
    size_t node3 = aig3table[9].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[9].make_and(node0, false, node3, false);
    aig3table[9].set_root(node4);
  }
  {
    size_t node0 = aig3table[10].make_literal(0, false);
    size_t node1 = aig3table[10].make_literal(2, true);
    size_t node2 = aig3table[10].make_and(node0, false, node1, false);
    aig3table[10].set_root(node2);
  }
  {
    size_t node0 = aig3table[11].make_literal(2, true);
    size_t node1 = aig3table[11].make_literal(0, false);
    size_t node2 = aig3table[11].make_literal(1, true);
    size_t node3 = aig3table[11].make_or(node1, false, node2, false);
    size_t node4 = aig3table[11].make_and(node0, false, node3, false);
    aig3table[11].set_root(node4);
  }
  {
    size_t node0 = aig3table[12].make_literal(1, false);
    size_t node1 = aig3table[12].make_literal(2, true);
    size_t node2 = aig3table[12].make_and(node0, false, node1, false);
    aig3table[12].set_root(node2);
  }
  {
    size_t node0 = aig3table[13].make_literal(2, true);
    size_t node1 = aig3table[13].make_literal(0, true);
    size_t node2 = aig3table[13].make_literal(1, false);
    size_t node3 = aig3table[13].make_or(node1, false, node2, false);
    size_t node4 = aig3table[13].make_and(node0, false, node3, false);
    aig3table[13].set_root(node4);
  }
  {
    size_t node0 = aig3table[14].make_literal(2, true);
    size_t node1 = aig3table[14].make_literal(0, false);
    size_t node2 = aig3table[14].make_literal(1, false);
    size_t node3 = aig3table[14].make_or(node1, false, node2, false);
    size_t node4 = aig3table[14].make_and(node0, false, node3, false);
    aig3table[14].set_root(node4);
  }
  {
    size_t node0 = aig3table[15].make_literal(2, true);
    aig3table[15].set_root(node0);
  }
  {
    size_t node0 = aig3table[16].make_literal(0, true);
    size_t node1 = aig3table[16].make_literal(1, true);
    size_t node2 = aig3table[16].make_literal(2, false);
    size_t node3 = aig3table[16].make_and(node1, false, node2, false);
    size_t node4 = aig3table[16].make_and(node0, false, node3, false);
    aig3table[16].set_root(node4);
  }
  {
    size_t node0 = aig3table[17].make_literal(0, true);
    size_t node1 = aig3table[17].make_literal(1, true);
    size_t node2 = aig3table[17].make_and(node0, false, node1, false);
    aig3table[17].set_root(node2);
  }
  {
    size_t node0 = aig3table[18].make_literal(1, true);
    size_t node1 = aig3table[18].make_literal(0, false);
    size_t node2 = aig3table[18].make_literal(2, false);
    size_t node3 = aig3table[18].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[18].make_and(node0, false, node3, false);
    aig3table[18].set_root(node4);
  }
  {
    size_t node0 = aig3table[19].make_literal(1, true);
    size_t node1 = aig3table[19].make_literal(0, true);
    size_t node2 = aig3table[19].make_literal(2, true);
    size_t node3 = aig3table[19].make_or(node1, false, node2, false);
    size_t node4 = aig3table[19].make_and(node0, false, node3, false);
    aig3table[19].set_root(node4);
  }
  {
    size_t node0 = aig3table[20].make_literal(0, true);
    size_t node1 = aig3table[20].make_literal(1, false);
    size_t node2 = aig3table[20].make_literal(2, false);
    size_t node3 = aig3table[20].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[20].make_and(node0, false, node3, false);
    aig3table[20].set_root(node4);
  }
  {
    size_t node0 = aig3table[21].make_literal(0, true);
    size_t node1 = aig3table[21].make_literal(1, true);
    size_t node2 = aig3table[21].make_literal(2, true);
    size_t node3 = aig3table[21].make_or(node1, false, node2, false);
    size_t node4 = aig3table[21].make_and(node0, false, node3, false);
    aig3table[21].set_root(node4);
  }
  {
    size_t node0 = aig3table[22].make_literal(0, true);
    size_t node1 = aig3table[22].make_literal(1, true);
    size_t node2 = aig3table[22].make_literal(2, false);
    size_t node3 = aig3table[22].make_and(node1, false, node2, false);
    size_t node4 = aig3table[22].make_and(node0, false, node3, false);
    size_t node5 = aig3table[22].make_literal(2, true);
    size_t node6 = aig3table[22].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[22].make_and(node5, false, node6, false);
    size_t node8 = aig3table[22].make_or(node4, false, node7, false);
    aig3table[22].set_root(node8);
  }
  {
    size_t node0 = aig3table[23].make_literal(0, true);
    size_t node1 = aig3table[23].make_literal(1, true);
    size_t node2 = aig3table[23].make_and(node0, false, node1, false);
    size_t node3 = aig3table[23].make_literal(2, true);
    size_t node4 = aig3table[23].make_or(node0, false, node1, false);
    size_t node5 = aig3table[23].make_and(node3, false, node4, false);
    size_t node6 = aig3table[23].make_or(node2, false, node5, false);
    aig3table[23].set_root(node6);
  }
  {
    size_t node0 = aig3table[24].make_literal(0, true);
    size_t node1 = aig3table[24].make_literal(1, true);
    size_t node2 = aig3table[24].make_literal(2, false);
    size_t node3 = aig3table[24].make_and(node1, false, node2, false);
    size_t node4 = aig3table[24].make_and(node0, false, node3, false);
    size_t node5 = aig3table[24].make_literal(0, false);
    size_t node6 = aig3table[24].make_literal(1, false);
    size_t node7 = aig3table[24].make_literal(2, true);
    size_t node8 = aig3table[24].make_and(node6, false, node7, false);
    size_t node9 = aig3table[24].make_and(node5, false, node8, false);
    size_t node10 = aig3table[24].make_or(node4, false, node9, false);
    aig3table[24].set_root(node10);
  }
  {
    size_t node0 = aig3table[25].make_literal(0, true);
    size_t node1 = aig3table[25].make_literal(1, true);
    size_t node2 = aig3table[25].make_and(node0, false, node1, false);
    size_t node3 = aig3table[25].make_literal(0, false);
    size_t node4 = aig3table[25].make_literal(1, false);
    size_t node5 = aig3table[25].make_literal(2, true);
    size_t node6 = aig3table[25].make_and(node4, false, node5, false);
    size_t node7 = aig3table[25].make_and(node3, false, node6, false);
    size_t node8 = aig3table[25].make_or(node2, false, node7, false);
    aig3table[25].set_root(node8);
  }
  {
    size_t node0 = aig3table[26].make_literal(0, false);
    size_t node1 = aig3table[26].make_literal(2, true);
    size_t node2 = aig3table[26].make_and(node0, false, node1, false);
    size_t node3 = aig3table[26].make_literal(0, true);
    size_t node4 = aig3table[26].make_literal(2, false);
    size_t node5 = aig3table[26].make_literal(1, true);
    size_t node6 = aig3table[26].make_and(node4, false, node5, false);
    size_t node7 = aig3table[26].make_and(node3, false, node6, false);
    size_t node8 = aig3table[26].make_or(node2, false, node7, false);
    aig3table[26].set_root(node8);
  }
  {
    size_t node0 = aig3table[27].make_literal(1, true);
    size_t node1 = aig3table[27].make_literal(0, true);
    size_t node2 = aig3table[27].make_and(node0, false, node1, false);
    size_t node3 = aig3table[27].make_literal(2, true);
    size_t node4 = aig3table[27].make_literal(0, false);
    size_t node5 = aig3table[27].make_and(node3, false, node4, false);
    size_t node6 = aig3table[27].make_or(node2, false, node5, false);
    aig3table[27].set_root(node6);
  }
  {
    size_t node0 = aig3table[28].make_literal(1, false);
    size_t node1 = aig3table[28].make_literal(2, true);
    size_t node2 = aig3table[28].make_and(node0, false, node1, false);
    size_t node3 = aig3table[28].make_literal(1, true);
    size_t node4 = aig3table[28].make_literal(2, false);
    size_t node5 = aig3table[28].make_literal(0, true);
    size_t node6 = aig3table[28].make_and(node4, false, node5, false);
    size_t node7 = aig3table[28].make_and(node3, false, node6, false);
    size_t node8 = aig3table[28].make_or(node2, false, node7, false);
    aig3table[28].set_root(node8);
  }
  {
    size_t node0 = aig3table[29].make_literal(0, true);
    size_t node1 = aig3table[29].make_literal(1, true);
    size_t node2 = aig3table[29].make_and(node0, false, node1, false);
    size_t node3 = aig3table[29].make_literal(2, true);
    size_t node4 = aig3table[29].make_literal(1, false);
    size_t node5 = aig3table[29].make_and(node3, false, node4, false);
    size_t node6 = aig3table[29].make_or(node2, false, node5, false);
    aig3table[29].set_root(node6);
  }
  {
    size_t node0 = aig3table[30].make_literal(2, true);
    size_t node1 = aig3table[30].make_literal(0, true);
    size_t node2 = aig3table[30].make_literal(1, true);
    size_t node3 = aig3table[30].make_and(node1, false, node2, false);
    size_t node4 = aig3table[30].make_xor(node0, false, node3, false);
    aig3table[30].set_root(node4);
  }
  {
    size_t node0 = aig3table[31].make_literal(2, true);
    size_t node1 = aig3table[31].make_literal(0, true);
    size_t node2 = aig3table[31].make_literal(1, true);
    size_t node3 = aig3table[31].make_and(node1, false, node2, false);
    size_t node4 = aig3table[31].make_or(node0, false, node3, false);
    aig3table[31].set_root(node4);
  }
  {
    size_t node0 = aig3table[32].make_literal(0, false);
    size_t node1 = aig3table[32].make_literal(1, true);
    size_t node2 = aig3table[32].make_literal(2, false);
    size_t node3 = aig3table[32].make_and(node1, false, node2, false);
    size_t node4 = aig3table[32].make_and(node0, false, node3, false);
    aig3table[32].set_root(node4);
  }
  {
    size_t node0 = aig3table[33].make_literal(1, true);
    size_t node1 = aig3table[33].make_literal(0, true);
    size_t node2 = aig3table[33].make_literal(2, false);
    size_t node3 = aig3table[33].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[33].make_and(node0, false, node3, false);
    aig3table[33].set_root(node4);
  }
  {
    size_t node0 = aig3table[34].make_literal(0, false);
    size_t node1 = aig3table[34].make_literal(1, true);
    size_t node2 = aig3table[34].make_and(node0, false, node1, false);
    aig3table[34].set_root(node2);
  }
  {
    size_t node0 = aig3table[35].make_literal(1, true);
    size_t node1 = aig3table[35].make_literal(0, false);
    size_t node2 = aig3table[35].make_literal(2, true);
    size_t node3 = aig3table[35].make_or(node1, false, node2, false);
    size_t node4 = aig3table[35].make_and(node0, false, node3, false);
    aig3table[35].set_root(node4);
  }
  {
    size_t node0 = aig3table[36].make_literal(0, true);
    size_t node1 = aig3table[36].make_literal(1, false);
    size_t node2 = aig3table[36].make_literal(2, true);
    size_t node3 = aig3table[36].make_and(node1, false, node2, false);
    size_t node4 = aig3table[36].make_and(node0, false, node3, false);
    size_t node5 = aig3table[36].make_literal(0, false);
    size_t node6 = aig3table[36].make_literal(1, true);
    size_t node7 = aig3table[36].make_literal(2, false);
    size_t node8 = aig3table[36].make_and(node6, false, node7, false);
    size_t node9 = aig3table[36].make_and(node5, false, node8, false);
    size_t node10 = aig3table[36].make_or(node4, false, node9, false);
    aig3table[36].set_root(node10);
  }
  {
    size_t node0 = aig3table[37].make_literal(0, true);
    size_t node1 = aig3table[37].make_literal(2, true);
    size_t node2 = aig3table[37].make_and(node0, false, node1, false);
    size_t node3 = aig3table[37].make_literal(0, false);
    size_t node4 = aig3table[37].make_literal(2, false);
    size_t node5 = aig3table[37].make_literal(1, true);
    size_t node6 = aig3table[37].make_and(node4, false, node5, false);
    size_t node7 = aig3table[37].make_and(node3, false, node6, false);
    size_t node8 = aig3table[37].make_or(node2, false, node7, false);
    aig3table[37].set_root(node8);
  }
  {
    size_t node0 = aig3table[38].make_literal(0, false);
    size_t node1 = aig3table[38].make_literal(1, true);
    size_t node2 = aig3table[38].make_and(node0, false, node1, false);
    size_t node3 = aig3table[38].make_literal(0, true);
    size_t node4 = aig3table[38].make_literal(1, false);
    size_t node5 = aig3table[38].make_literal(2, true);
    size_t node6 = aig3table[38].make_and(node4, false, node5, false);
    size_t node7 = aig3table[38].make_and(node3, false, node6, false);
    size_t node8 = aig3table[38].make_or(node2, false, node7, false);
    aig3table[38].set_root(node8);
  }
  {
    size_t node0 = aig3table[39].make_literal(1, true);
    size_t node1 = aig3table[39].make_literal(0, false);
    size_t node2 = aig3table[39].make_and(node0, false, node1, false);
    size_t node3 = aig3table[39].make_literal(2, true);
    size_t node4 = aig3table[39].make_literal(0, true);
    size_t node5 = aig3table[39].make_and(node3, false, node4, false);
    size_t node6 = aig3table[39].make_or(node2, false, node5, false);
    aig3table[39].set_root(node6);
  }
  {
    size_t node0 = aig3table[40].make_literal(0, false);
    size_t node1 = aig3table[40].make_literal(1, false);
    size_t node2 = aig3table[40].make_literal(2, false);
    size_t node3 = aig3table[40].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[40].make_and(node0, false, node3, false);
    aig3table[40].set_root(node4);
  }
  {
    size_t node0 = aig3table[41].make_literal(0, false);
    size_t node1 = aig3table[41].make_literal(1, true);
    size_t node2 = aig3table[41].make_literal(2, false);
    size_t node3 = aig3table[41].make_and(node1, false, node2, false);
    size_t node4 = aig3table[41].make_and(node0, false, node3, false);
    size_t node5 = aig3table[41].make_literal(2, true);
    size_t node6 = aig3table[41].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[41].make_and(node5, false, node6, false);
    size_t node8 = aig3table[41].make_or(node4, false, node7, false);
    aig3table[41].set_root(node8);
  }
  {
    size_t node0 = aig3table[42].make_literal(0, false);
    size_t node1 = aig3table[42].make_literal(1, true);
    size_t node2 = aig3table[42].make_literal(2, true);
    size_t node3 = aig3table[42].make_or(node1, false, node2, false);
    size_t node4 = aig3table[42].make_and(node0, false, node3, false);
    aig3table[42].set_root(node4);
  }
  {
    size_t node0 = aig3table[43].make_literal(0, false);
    size_t node1 = aig3table[43].make_literal(1, true);
    size_t node2 = aig3table[43].make_and(node0, false, node1, false);
    size_t node3 = aig3table[43].make_literal(2, true);
    size_t node4 = aig3table[43].make_or(node0, false, node1, false);
    size_t node5 = aig3table[43].make_and(node3, false, node4, false);
    size_t node6 = aig3table[43].make_or(node2, false, node5, false);
    aig3table[43].set_root(node6);
  }
  {
    size_t node0 = aig3table[44].make_literal(1, false);
    size_t node1 = aig3table[44].make_literal(2, true);
    size_t node2 = aig3table[44].make_and(node0, false, node1, false);
    size_t node3 = aig3table[44].make_literal(1, true);
    size_t node4 = aig3table[44].make_literal(2, false);
    size_t node5 = aig3table[44].make_literal(0, false);
    size_t node6 = aig3table[44].make_and(node4, false, node5, false);
    size_t node7 = aig3table[44].make_and(node3, false, node6, false);
    size_t node8 = aig3table[44].make_or(node2, false, node7, false);
    aig3table[44].set_root(node8);
  }
  {
    size_t node0 = aig3table[45].make_literal(2, true);
    size_t node1 = aig3table[45].make_literal(0, false);
    size_t node2 = aig3table[45].make_literal(1, true);
    size_t node3 = aig3table[45].make_and(node1, false, node2, false);
    size_t node4 = aig3table[45].make_xor(node0, false, node3, false);
    aig3table[45].set_root(node4);
  }
  {
    size_t node0 = aig3table[46].make_literal(0, false);
    size_t node1 = aig3table[46].make_literal(1, true);
    size_t node2 = aig3table[46].make_and(node0, false, node1, false);
    size_t node3 = aig3table[46].make_literal(2, true);
    size_t node4 = aig3table[46].make_literal(1, false);
    size_t node5 = aig3table[46].make_and(node3, false, node4, false);
    size_t node6 = aig3table[46].make_or(node2, false, node5, false);
    aig3table[46].set_root(node6);
  }
  {
    size_t node0 = aig3table[47].make_literal(2, true);
    size_t node1 = aig3table[47].make_literal(0, false);
    size_t node2 = aig3table[47].make_literal(1, true);
    size_t node3 = aig3table[47].make_and(node1, false, node2, false);
    size_t node4 = aig3table[47].make_or(node0, false, node3, false);
    aig3table[47].set_root(node4);
  }
  {
    size_t node0 = aig3table[48].make_literal(1, true);
    size_t node1 = aig3table[48].make_literal(2, false);
    size_t node2 = aig3table[48].make_and(node0, false, node1, false);
    aig3table[48].set_root(node2);
  }
  {
    size_t node0 = aig3table[49].make_literal(1, true);
    size_t node1 = aig3table[49].make_literal(0, true);
    size_t node2 = aig3table[49].make_literal(2, false);
    size_t node3 = aig3table[49].make_or(node1, false, node2, false);
    size_t node4 = aig3table[49].make_and(node0, false, node3, false);
    aig3table[49].set_root(node4);
  }
  {
    size_t node0 = aig3table[50].make_literal(1, true);
    size_t node1 = aig3table[50].make_literal(0, false);
    size_t node2 = aig3table[50].make_literal(2, false);
    size_t node3 = aig3table[50].make_or(node1, false, node2, false);
    size_t node4 = aig3table[50].make_and(node0, false, node3, false);
    aig3table[50].set_root(node4);
  }
  {
    size_t node0 = aig3table[51].make_literal(1, true);
    aig3table[51].set_root(node0);
  }
  {
    size_t node0 = aig3table[52].make_literal(1, true);
    size_t node1 = aig3table[52].make_literal(2, false);
    size_t node2 = aig3table[52].make_and(node0, false, node1, false);
    size_t node3 = aig3table[52].make_literal(1, false);
    size_t node4 = aig3table[52].make_literal(2, true);
    size_t node5 = aig3table[52].make_literal(0, true);
    size_t node6 = aig3table[52].make_and(node4, false, node5, false);
    size_t node7 = aig3table[52].make_and(node3, false, node6, false);
    size_t node8 = aig3table[52].make_or(node2, false, node7, false);
    aig3table[52].set_root(node8);
  }
  {
    size_t node0 = aig3table[53].make_literal(0, true);
    size_t node1 = aig3table[53].make_literal(2, true);
    size_t node2 = aig3table[53].make_and(node0, false, node1, false);
    size_t node3 = aig3table[53].make_literal(1, true);
    size_t node4 = aig3table[53].make_literal(2, false);
    size_t node5 = aig3table[53].make_and(node3, false, node4, false);
    size_t node6 = aig3table[53].make_or(node2, false, node5, false);
    aig3table[53].set_root(node6);
  }
  {
    size_t node0 = aig3table[54].make_literal(1, true);
    size_t node1 = aig3table[54].make_literal(0, true);
    size_t node2 = aig3table[54].make_literal(2, true);
    size_t node3 = aig3table[54].make_and(node1, false, node2, false);
    size_t node4 = aig3table[54].make_xor(node0, false, node3, false);
    aig3table[54].set_root(node4);
  }
  {
    size_t node0 = aig3table[55].make_literal(1, true);
    size_t node1 = aig3table[55].make_literal(0, true);
    size_t node2 = aig3table[55].make_literal(2, true);
    size_t node3 = aig3table[55].make_and(node1, false, node2, false);
    size_t node4 = aig3table[55].make_or(node0, false, node3, false);
    aig3table[55].set_root(node4);
  }
  {
    size_t node0 = aig3table[56].make_literal(1, true);
    size_t node1 = aig3table[56].make_literal(2, false);
    size_t node2 = aig3table[56].make_and(node0, false, node1, false);
    size_t node3 = aig3table[56].make_literal(1, false);
    size_t node4 = aig3table[56].make_literal(2, true);
    size_t node5 = aig3table[56].make_literal(0, false);
    size_t node6 = aig3table[56].make_and(node4, false, node5, false);
    size_t node7 = aig3table[56].make_and(node3, false, node6, false);
    size_t node8 = aig3table[56].make_or(node2, false, node7, false);
    aig3table[56].set_root(node8);
  }
  {
    size_t node0 = aig3table[57].make_literal(1, true);
    size_t node1 = aig3table[57].make_literal(0, false);
    size_t node2 = aig3table[57].make_literal(2, true);
    size_t node3 = aig3table[57].make_and(node1, false, node2, false);
    size_t node4 = aig3table[57].make_xor(node0, false, node3, false);
    aig3table[57].set_root(node4);
  }
  {
    size_t node0 = aig3table[58].make_literal(0, false);
    size_t node1 = aig3table[58].make_literal(2, true);
    size_t node2 = aig3table[58].make_and(node0, false, node1, false);
    size_t node3 = aig3table[58].make_literal(1, true);
    size_t node4 = aig3table[58].make_literal(2, false);
    size_t node5 = aig3table[58].make_and(node3, false, node4, false);
    size_t node6 = aig3table[58].make_or(node2, false, node5, false);
    aig3table[58].set_root(node6);
  }
  {
    size_t node0 = aig3table[59].make_literal(1, true);
    size_t node1 = aig3table[59].make_literal(0, false);
    size_t node2 = aig3table[59].make_literal(2, true);
    size_t node3 = aig3table[59].make_and(node1, false, node2, false);
    size_t node4 = aig3table[59].make_or(node0, false, node3, false);
    aig3table[59].set_root(node4);
  }
  {
    size_t node0 = aig3table[60].make_literal(1, false);
    size_t node1 = aig3table[60].make_literal(2, false);
    size_t node2 = aig3table[60].make_xor(node0, false, node1, false);
    aig3table[60].set_root(node2);
  }
  {
    size_t node0 = aig3table[61].make_literal(1, true);
    size_t node1 = aig3table[61].make_literal(2, true);
    size_t node2 = aig3table[61].make_or(node0, false, node1, false);
    size_t node3 = aig3table[61].make_literal(1, false);
    size_t node4 = aig3table[61].make_literal(2, false);
    size_t node5 = aig3table[61].make_literal(0, true);
    size_t node6 = aig3table[61].make_or(node4, false, node5, false);
    size_t node7 = aig3table[61].make_or(node3, false, node6, false);
    size_t node8 = aig3table[61].make_and(node2, false, node7, false);
    aig3table[61].set_root(node8);
  }
  {
    size_t node0 = aig3table[62].make_literal(1, true);
    size_t node1 = aig3table[62].make_literal(2, true);
    size_t node2 = aig3table[62].make_or(node0, false, node1, false);
    size_t node3 = aig3table[62].make_literal(1, false);
    size_t node4 = aig3table[62].make_literal(2, false);
    size_t node5 = aig3table[62].make_literal(0, false);
    size_t node6 = aig3table[62].make_or(node4, false, node5, false);
    size_t node7 = aig3table[62].make_or(node3, false, node6, false);
    size_t node8 = aig3table[62].make_and(node2, false, node7, false);
    aig3table[62].set_root(node8);
  }
  {
    size_t node0 = aig3table[63].make_literal(1, true);
    size_t node1 = aig3table[63].make_literal(2, true);
    size_t node2 = aig3table[63].make_or(node0, false, node1, false);
    aig3table[63].set_root(node2);
  }
  {
    size_t node0 = aig3table[64].make_literal(0, true);
    size_t node1 = aig3table[64].make_literal(1, false);
    size_t node2 = aig3table[64].make_literal(2, false);
    size_t node3 = aig3table[64].make_and(node1, false, node2, false);
    size_t node4 = aig3table[64].make_and(node0, false, node3, false);
    aig3table[64].set_root(node4);
  }
  {
    size_t node0 = aig3table[65].make_literal(0, true);
    size_t node1 = aig3table[65].make_literal(1, true);
    size_t node2 = aig3table[65].make_literal(2, false);
    size_t node3 = aig3table[65].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[65].make_and(node0, false, node3, false);
    aig3table[65].set_root(node4);
  }
  {
    size_t node0 = aig3table[66].make_literal(0, true);
    size_t node1 = aig3table[66].make_literal(1, false);
    size_t node2 = aig3table[66].make_literal(2, false);
    size_t node3 = aig3table[66].make_and(node1, false, node2, false);
    size_t node4 = aig3table[66].make_and(node0, false, node3, false);
    size_t node5 = aig3table[66].make_literal(0, false);
    size_t node6 = aig3table[66].make_literal(1, true);
    size_t node7 = aig3table[66].make_literal(2, true);
    size_t node8 = aig3table[66].make_and(node6, false, node7, false);
    size_t node9 = aig3table[66].make_and(node5, false, node8, false);
    size_t node10 = aig3table[66].make_or(node4, false, node9, false);
    aig3table[66].set_root(node10);
  }
  {
    size_t node0 = aig3table[67].make_literal(1, true);
    size_t node1 = aig3table[67].make_literal(2, true);
    size_t node2 = aig3table[67].make_and(node0, false, node1, false);
    size_t node3 = aig3table[67].make_literal(1, false);
    size_t node4 = aig3table[67].make_literal(2, false);
    size_t node5 = aig3table[67].make_literal(0, true);
    size_t node6 = aig3table[67].make_and(node4, false, node5, false);
    size_t node7 = aig3table[67].make_and(node3, false, node6, false);
    size_t node8 = aig3table[67].make_or(node2, false, node7, false);
    aig3table[67].set_root(node8);
  }
  {
    size_t node0 = aig3table[68].make_literal(0, true);
    size_t node1 = aig3table[68].make_literal(1, false);
    size_t node2 = aig3table[68].make_and(node0, false, node1, false);
    aig3table[68].set_root(node2);
  }
  {
    size_t node0 = aig3table[69].make_literal(0, true);
    size_t node1 = aig3table[69].make_literal(1, false);
    size_t node2 = aig3table[69].make_literal(2, true);
    size_t node3 = aig3table[69].make_or(node1, false, node2, false);
    size_t node4 = aig3table[69].make_and(node0, false, node3, false);
    aig3table[69].set_root(node4);
  }
  {
    size_t node0 = aig3table[70].make_literal(0, true);
    size_t node1 = aig3table[70].make_literal(1, false);
    size_t node2 = aig3table[70].make_and(node0, false, node1, false);
    size_t node3 = aig3table[70].make_literal(0, false);
    size_t node4 = aig3table[70].make_literal(1, true);
    size_t node5 = aig3table[70].make_literal(2, true);
    size_t node6 = aig3table[70].make_and(node4, false, node5, false);
    size_t node7 = aig3table[70].make_and(node3, false, node6, false);
    size_t node8 = aig3table[70].make_or(node2, false, node7, false);
    aig3table[70].set_root(node8);
  }
  {
    size_t node0 = aig3table[71].make_literal(0, true);
    size_t node1 = aig3table[71].make_literal(1, false);
    size_t node2 = aig3table[71].make_and(node0, false, node1, false);
    size_t node3 = aig3table[71].make_literal(2, true);
    size_t node4 = aig3table[71].make_literal(1, true);
    size_t node5 = aig3table[71].make_and(node3, false, node4, false);
    size_t node6 = aig3table[71].make_or(node2, false, node5, false);
    aig3table[71].set_root(node6);
  }
  {
    size_t node0 = aig3table[72].make_literal(1, false);
    size_t node1 = aig3table[72].make_literal(0, false);
    size_t node2 = aig3table[72].make_literal(2, false);
    size_t node3 = aig3table[72].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[72].make_and(node0, false, node3, false);
    aig3table[72].set_root(node4);
  }
  {
    size_t node0 = aig3table[73].make_literal(0, true);
    size_t node1 = aig3table[73].make_literal(1, false);
    size_t node2 = aig3table[73].make_literal(2, false);
    size_t node3 = aig3table[73].make_and(node1, false, node2, false);
    size_t node4 = aig3table[73].make_and(node0, false, node3, false);
    size_t node5 = aig3table[73].make_literal(2, true);
    size_t node6 = aig3table[73].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[73].make_and(node5, false, node6, false);
    size_t node8 = aig3table[73].make_or(node4, false, node7, false);
    aig3table[73].set_root(node8);
  }
  {
    size_t node0 = aig3table[74].make_literal(0, false);
    size_t node1 = aig3table[74].make_literal(2, true);
    size_t node2 = aig3table[74].make_and(node0, false, node1, false);
    size_t node3 = aig3table[74].make_literal(0, true);
    size_t node4 = aig3table[74].make_literal(2, false);
    size_t node5 = aig3table[74].make_literal(1, false);
    size_t node6 = aig3table[74].make_and(node4, false, node5, false);
    size_t node7 = aig3table[74].make_and(node3, false, node6, false);
    size_t node8 = aig3table[74].make_or(node2, false, node7, false);
    aig3table[74].set_root(node8);
  }
  {
    size_t node0 = aig3table[75].make_literal(2, true);
    size_t node1 = aig3table[75].make_literal(0, true);
    size_t node2 = aig3table[75].make_literal(1, false);
    size_t node3 = aig3table[75].make_and(node1, false, node2, false);
    size_t node4 = aig3table[75].make_xor(node0, false, node3, false);
    aig3table[75].set_root(node4);
  }
  {
    size_t node0 = aig3table[76].make_literal(1, false);
    size_t node1 = aig3table[76].make_literal(0, true);
    size_t node2 = aig3table[76].make_literal(2, true);
    size_t node3 = aig3table[76].make_or(node1, false, node2, false);
    size_t node4 = aig3table[76].make_and(node0, false, node3, false);
    aig3table[76].set_root(node4);
  }
  {
    size_t node0 = aig3table[77].make_literal(0, true);
    size_t node1 = aig3table[77].make_literal(1, false);
    size_t node2 = aig3table[77].make_and(node0, false, node1, false);
    size_t node3 = aig3table[77].make_literal(2, true);
    size_t node4 = aig3table[77].make_or(node0, false, node1, false);
    size_t node5 = aig3table[77].make_and(node3, false, node4, false);
    size_t node6 = aig3table[77].make_or(node2, false, node5, false);
    aig3table[77].set_root(node6);
  }
  {
    size_t node0 = aig3table[78].make_literal(1, false);
    size_t node1 = aig3table[78].make_literal(0, true);
    size_t node2 = aig3table[78].make_and(node0, false, node1, false);
    size_t node3 = aig3table[78].make_literal(2, true);
    size_t node4 = aig3table[78].make_literal(0, false);
    size_t node5 = aig3table[78].make_and(node3, false, node4, false);
    size_t node6 = aig3table[78].make_or(node2, false, node5, false);
    aig3table[78].set_root(node6);
  }
  {
    size_t node0 = aig3table[79].make_literal(2, true);
    size_t node1 = aig3table[79].make_literal(0, true);
    size_t node2 = aig3table[79].make_literal(1, false);
    size_t node3 = aig3table[79].make_and(node1, false, node2, false);
    size_t node4 = aig3table[79].make_or(node0, false, node3, false);
    aig3table[79].set_root(node4);
  }
  {
    size_t node0 = aig3table[80].make_literal(0, true);
    size_t node1 = aig3table[80].make_literal(2, false);
    size_t node2 = aig3table[80].make_and(node0, false, node1, false);
    aig3table[80].set_root(node2);
  }
  {
    size_t node0 = aig3table[81].make_literal(0, true);
    size_t node1 = aig3table[81].make_literal(1, true);
    size_t node2 = aig3table[81].make_literal(2, false);
    size_t node3 = aig3table[81].make_or(node1, false, node2, false);
    size_t node4 = aig3table[81].make_and(node0, false, node3, false);
    aig3table[81].set_root(node4);
  }
  {
    size_t node0 = aig3table[82].make_literal(0, true);
    size_t node1 = aig3table[82].make_literal(2, false);
    size_t node2 = aig3table[82].make_and(node0, false, node1, false);
    size_t node3 = aig3table[82].make_literal(0, false);
    size_t node4 = aig3table[82].make_literal(2, true);
    size_t node5 = aig3table[82].make_literal(1, true);
    size_t node6 = aig3table[82].make_and(node4, false, node5, false);
    size_t node7 = aig3table[82].make_and(node3, false, node6, false);
    size_t node8 = aig3table[82].make_or(node2, false, node7, false);
    aig3table[82].set_root(node8);
  }
  {
    size_t node0 = aig3table[83].make_literal(0, true);
    size_t node1 = aig3table[83].make_literal(2, false);
    size_t node2 = aig3table[83].make_and(node0, false, node1, false);
    size_t node3 = aig3table[83].make_literal(1, true);
    size_t node4 = aig3table[83].make_literal(2, true);
    size_t node5 = aig3table[83].make_and(node3, false, node4, false);
    size_t node6 = aig3table[83].make_or(node2, false, node5, false);
    aig3table[83].set_root(node6);
  }
  {
    size_t node0 = aig3table[84].make_literal(0, true);
    size_t node1 = aig3table[84].make_literal(1, false);
    size_t node2 = aig3table[84].make_literal(2, false);
    size_t node3 = aig3table[84].make_or(node1, false, node2, false);
    size_t node4 = aig3table[84].make_and(node0, false, node3, false);
    aig3table[84].set_root(node4);
  }
  {
    size_t node0 = aig3table[85].make_literal(0, true);
    aig3table[85].set_root(node0);
  }
  {
    size_t node0 = aig3table[86].make_literal(0, true);
    size_t node1 = aig3table[86].make_literal(1, true);
    size_t node2 = aig3table[86].make_literal(2, true);
    size_t node3 = aig3table[86].make_and(node1, false, node2, false);
    size_t node4 = aig3table[86].make_xor(node0, false, node3, false);
    aig3table[86].set_root(node4);
  }
  {
    size_t node0 = aig3table[87].make_literal(0, true);
    size_t node1 = aig3table[87].make_literal(1, true);
    size_t node2 = aig3table[87].make_literal(2, true);
    size_t node3 = aig3table[87].make_and(node1, false, node2, false);
    size_t node4 = aig3table[87].make_or(node0, false, node3, false);
    aig3table[87].set_root(node4);
  }
  {
    size_t node0 = aig3table[88].make_literal(0, true);
    size_t node1 = aig3table[88].make_literal(2, false);
    size_t node2 = aig3table[88].make_and(node0, false, node1, false);
    size_t node3 = aig3table[88].make_literal(0, false);
    size_t node4 = aig3table[88].make_literal(2, true);
    size_t node5 = aig3table[88].make_literal(1, false);
    size_t node6 = aig3table[88].make_and(node4, false, node5, false);
    size_t node7 = aig3table[88].make_and(node3, false, node6, false);
    size_t node8 = aig3table[88].make_or(node2, false, node7, false);
    aig3table[88].set_root(node8);
  }
  {
    size_t node0 = aig3table[89].make_literal(0, true);
    size_t node1 = aig3table[89].make_literal(1, false);
    size_t node2 = aig3table[89].make_literal(2, true);
    size_t node3 = aig3table[89].make_and(node1, false, node2, false);
    size_t node4 = aig3table[89].make_xor(node0, false, node3, false);
    aig3table[89].set_root(node4);
  }
  {
    size_t node0 = aig3table[90].make_literal(0, false);
    size_t node1 = aig3table[90].make_literal(2, false);
    size_t node2 = aig3table[90].make_xor(node0, false, node1, false);
    aig3table[90].set_root(node2);
  }
  {
    size_t node0 = aig3table[91].make_literal(0, true);
    size_t node1 = aig3table[91].make_literal(2, true);
    size_t node2 = aig3table[91].make_or(node0, false, node1, false);
    size_t node3 = aig3table[91].make_literal(0, false);
    size_t node4 = aig3table[91].make_literal(2, false);
    size_t node5 = aig3table[91].make_literal(1, true);
    size_t node6 = aig3table[91].make_or(node4, false, node5, false);
    size_t node7 = aig3table[91].make_or(node3, false, node6, false);
    size_t node8 = aig3table[91].make_and(node2, false, node7, false);
    aig3table[91].set_root(node8);
  }
  {
    size_t node0 = aig3table[92].make_literal(0, true);
    size_t node1 = aig3table[92].make_literal(2, false);
    size_t node2 = aig3table[92].make_and(node0, false, node1, false);
    size_t node3 = aig3table[92].make_literal(1, false);
    size_t node4 = aig3table[92].make_literal(2, true);
    size_t node5 = aig3table[92].make_and(node3, false, node4, false);
    size_t node6 = aig3table[92].make_or(node2, false, node5, false);
    aig3table[92].set_root(node6);
  }
  {
    size_t node0 = aig3table[93].make_literal(0, true);
    size_t node1 = aig3table[93].make_literal(1, false);
    size_t node2 = aig3table[93].make_literal(2, true);
    size_t node3 = aig3table[93].make_and(node1, false, node2, false);
    size_t node4 = aig3table[93].make_or(node0, false, node3, false);
    aig3table[93].set_root(node4);
  }
  {
    size_t node0 = aig3table[94].make_literal(0, true);
    size_t node1 = aig3table[94].make_literal(2, true);
    size_t node2 = aig3table[94].make_or(node0, false, node1, false);
    size_t node3 = aig3table[94].make_literal(0, false);
    size_t node4 = aig3table[94].make_literal(2, false);
    size_t node5 = aig3table[94].make_literal(1, false);
    size_t node6 = aig3table[94].make_or(node4, false, node5, false);
    size_t node7 = aig3table[94].make_or(node3, false, node6, false);
    size_t node8 = aig3table[94].make_and(node2, false, node7, false);
    aig3table[94].set_root(node8);
  }
  {
    size_t node0 = aig3table[95].make_literal(0, true);
    size_t node1 = aig3table[95].make_literal(2, true);
    size_t node2 = aig3table[95].make_or(node0, false, node1, false);
    aig3table[95].set_root(node2);
  }
  {
    size_t node0 = aig3table[96].make_literal(2, false);
    size_t node1 = aig3table[96].make_literal(0, false);
    size_t node2 = aig3table[96].make_literal(1, false);
    size_t node3 = aig3table[96].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[96].make_and(node0, false, node3, false);
    aig3table[96].set_root(node4);
  }
  {
    size_t node0 = aig3table[97].make_literal(0, true);
    size_t node1 = aig3table[97].make_literal(1, true);
    size_t node2 = aig3table[97].make_literal(2, true);
    size_t node3 = aig3table[97].make_and(node1, false, node2, false);
    size_t node4 = aig3table[97].make_and(node0, false, node3, false);
    size_t node5 = aig3table[97].make_literal(2, false);
    size_t node6 = aig3table[97].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[97].make_and(node5, false, node6, false);
    size_t node8 = aig3table[97].make_or(node4, false, node7, false);
    aig3table[97].set_root(node8);
  }
  {
    size_t node0 = aig3table[98].make_literal(0, false);
    size_t node1 = aig3table[98].make_literal(1, true);
    size_t node2 = aig3table[98].make_and(node0, false, node1, false);
    size_t node3 = aig3table[98].make_literal(0, true);
    size_t node4 = aig3table[98].make_literal(1, false);
    size_t node5 = aig3table[98].make_literal(2, false);
    size_t node6 = aig3table[98].make_and(node4, false, node5, false);
    size_t node7 = aig3table[98].make_and(node3, false, node6, false);
    size_t node8 = aig3table[98].make_or(node2, false, node7, false);
    aig3table[98].set_root(node8);
  }
  {
    size_t node0 = aig3table[99].make_literal(1, true);
    size_t node1 = aig3table[99].make_literal(0, true);
    size_t node2 = aig3table[99].make_literal(2, false);
    size_t node3 = aig3table[99].make_and(node1, false, node2, false);
    size_t node4 = aig3table[99].make_xor(node0, false, node3, false);
    aig3table[99].set_root(node4);
  }
  {
    size_t node0 = aig3table[100].make_literal(0, true);
    size_t node1 = aig3table[100].make_literal(1, false);
    size_t node2 = aig3table[100].make_and(node0, false, node1, false);
    size_t node3 = aig3table[100].make_literal(0, false);
    size_t node4 = aig3table[100].make_literal(1, true);
    size_t node5 = aig3table[100].make_literal(2, false);
    size_t node6 = aig3table[100].make_and(node4, false, node5, false);
    size_t node7 = aig3table[100].make_and(node3, false, node6, false);
    size_t node8 = aig3table[100].make_or(node2, false, node7, false);
    aig3table[100].set_root(node8);
  }
  {
    size_t node0 = aig3table[101].make_literal(0, true);
    size_t node1 = aig3table[101].make_literal(1, true);
    size_t node2 = aig3table[101].make_literal(2, false);
    size_t node3 = aig3table[101].make_and(node1, false, node2, false);
    size_t node4 = aig3table[101].make_xor(node0, false, node3, false);
    aig3table[101].set_root(node4);
  }
  {
    size_t node0 = aig3table[102].make_literal(0, false);
    size_t node1 = aig3table[102].make_literal(1, false);
    size_t node2 = aig3table[102].make_xor(node0, false, node1, false);
    aig3table[102].set_root(node2);
  }
  {
    size_t node0 = aig3table[103].make_literal(0, true);
    size_t node1 = aig3table[103].make_literal(1, true);
    size_t node2 = aig3table[103].make_or(node0, false, node1, false);
    size_t node3 = aig3table[103].make_literal(0, false);
    size_t node4 = aig3table[103].make_literal(1, false);
    size_t node5 = aig3table[103].make_literal(2, true);
    size_t node6 = aig3table[103].make_or(node4, false, node5, false);
    size_t node7 = aig3table[103].make_or(node3, false, node6, false);
    size_t node8 = aig3table[103].make_and(node2, false, node7, false);
    aig3table[103].set_root(node8);
  }
  {
    size_t node0 = aig3table[104].make_literal(0, false);
    size_t node1 = aig3table[104].make_literal(1, false);
    size_t node2 = aig3table[104].make_literal(2, true);
    size_t node3 = aig3table[104].make_and(node1, false, node2, false);
    size_t node4 = aig3table[104].make_and(node0, false, node3, false);
    size_t node5 = aig3table[104].make_literal(2, false);
    size_t node6 = aig3table[104].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[104].make_and(node5, false, node6, false);
    size_t node8 = aig3table[104].make_or(node4, false, node7, false);
    aig3table[104].set_root(node8);
  }
  {
    size_t node0 = aig3table[105].make_literal(0, true);
    size_t node1 = aig3table[105].make_literal(1, false);
    size_t node2 = aig3table[105].make_literal(2, false);
    size_t node3 = aig3table[105].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[105].make_xor(node0, false, node3, false);
    aig3table[105].set_root(node4);
  }
  {
    size_t node0 = aig3table[106].make_literal(0, false);
    size_t node1 = aig3table[106].make_literal(1, false);
    size_t node2 = aig3table[106].make_literal(2, false);
    size_t node3 = aig3table[106].make_and(node1, false, node2, false);
    size_t node4 = aig3table[106].make_xor(node0, false, node3, false);
    aig3table[106].set_root(node4);
  }
  {
    size_t node0 = aig3table[107].make_literal(0, false);
    size_t node1 = aig3table[107].make_literal(1, true);
    size_t node2 = aig3table[107].make_literal(2, false);
    size_t node3 = aig3table[107].make_or(node1, false, node2, false);
    size_t node4 = aig3table[107].make_or(node0, false, node3, false);
    size_t node5 = aig3table[107].make_literal(2, true);
    size_t node6 = aig3table[107].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[107].make_or(node5, false, node6, false);
    size_t node8 = aig3table[107].make_and(node4, false, node7, false);
    aig3table[107].set_root(node8);
  }
  {
    size_t node0 = aig3table[108].make_literal(1, false);
    size_t node1 = aig3table[108].make_literal(0, false);
    size_t node2 = aig3table[108].make_literal(2, false);
    size_t node3 = aig3table[108].make_and(node1, false, node2, false);
    size_t node4 = aig3table[108].make_xor(node0, false, node3, false);
    aig3table[108].set_root(node4);
  }
  {
    size_t node0 = aig3table[109].make_literal(0, true);
    size_t node1 = aig3table[109].make_literal(1, false);
    size_t node2 = aig3table[109].make_literal(2, false);
    size_t node3 = aig3table[109].make_or(node1, false, node2, false);
    size_t node4 = aig3table[109].make_or(node0, false, node3, false);
    size_t node5 = aig3table[109].make_literal(2, true);
    size_t node6 = aig3table[109].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[109].make_or(node5, false, node6, false);
    size_t node8 = aig3table[109].make_and(node4, false, node7, false);
    aig3table[109].set_root(node8);
  }
  {
    size_t node0 = aig3table[110].make_literal(0, false);
    size_t node1 = aig3table[110].make_literal(1, false);
    size_t node2 = aig3table[110].make_or(node0, false, node1, false);
    size_t node3 = aig3table[110].make_literal(0, true);
    size_t node4 = aig3table[110].make_literal(1, true);
    size_t node5 = aig3table[110].make_literal(2, true);
    size_t node6 = aig3table[110].make_or(node4, false, node5, false);
    size_t node7 = aig3table[110].make_or(node3, false, node6, false);
    size_t node8 = aig3table[110].make_and(node2, false, node7, false);
    aig3table[110].set_root(node8);
  }
  {
    size_t node0 = aig3table[111].make_literal(2, true);
    size_t node1 = aig3table[111].make_literal(0, false);
    size_t node2 = aig3table[111].make_literal(1, true);
    size_t node3 = aig3table[111].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[111].make_or(node0, false, node3, false);
    aig3table[111].set_root(node4);
  }
  {
    size_t node0 = aig3table[112].make_literal(2, false);
    size_t node1 = aig3table[112].make_literal(0, true);
    size_t node2 = aig3table[112].make_literal(1, true);
    size_t node3 = aig3table[112].make_or(node1, false, node2, false);
    size_t node4 = aig3table[112].make_and(node0, false, node3, false);
    aig3table[112].set_root(node4);
  }
  {
    size_t node0 = aig3table[113].make_literal(0, true);
    size_t node1 = aig3table[113].make_literal(1, true);
    size_t node2 = aig3table[113].make_and(node0, false, node1, false);
    size_t node3 = aig3table[113].make_literal(2, false);
    size_t node4 = aig3table[113].make_or(node0, false, node1, false);
    size_t node5 = aig3table[113].make_and(node3, false, node4, false);
    size_t node6 = aig3table[113].make_or(node2, false, node5, false);
    aig3table[113].set_root(node6);
  }
  {
    size_t node0 = aig3table[114].make_literal(1, true);
    size_t node1 = aig3table[114].make_literal(0, false);
    size_t node2 = aig3table[114].make_and(node0, false, node1, false);
    size_t node3 = aig3table[114].make_literal(2, false);
    size_t node4 = aig3table[114].make_literal(0, true);
    size_t node5 = aig3table[114].make_and(node3, false, node4, false);
    size_t node6 = aig3table[114].make_or(node2, false, node5, false);
    aig3table[114].set_root(node6);
  }
  {
    size_t node0 = aig3table[115].make_literal(1, true);
    size_t node1 = aig3table[115].make_literal(0, true);
    size_t node2 = aig3table[115].make_literal(2, false);
    size_t node3 = aig3table[115].make_and(node1, false, node2, false);
    size_t node4 = aig3table[115].make_or(node0, false, node3, false);
    aig3table[115].set_root(node4);
  }
  {
    size_t node0 = aig3table[116].make_literal(0, true);
    size_t node1 = aig3table[116].make_literal(1, false);
    size_t node2 = aig3table[116].make_and(node0, false, node1, false);
    size_t node3 = aig3table[116].make_literal(2, false);
    size_t node4 = aig3table[116].make_literal(1, true);
    size_t node5 = aig3table[116].make_and(node3, false, node4, false);
    size_t node6 = aig3table[116].make_or(node2, false, node5, false);
    aig3table[116].set_root(node6);
  }
  {
    size_t node0 = aig3table[117].make_literal(0, true);
    size_t node1 = aig3table[117].make_literal(1, true);
    size_t node2 = aig3table[117].make_literal(2, false);
    size_t node3 = aig3table[117].make_and(node1, false, node2, false);
    size_t node4 = aig3table[117].make_or(node0, false, node3, false);
    aig3table[117].set_root(node4);
  }
  {
    size_t node0 = aig3table[118].make_literal(0, true);
    size_t node1 = aig3table[118].make_literal(1, true);
    size_t node2 = aig3table[118].make_or(node0, false, node1, false);
    size_t node3 = aig3table[118].make_literal(0, false);
    size_t node4 = aig3table[118].make_literal(1, false);
    size_t node5 = aig3table[118].make_literal(2, false);
    size_t node6 = aig3table[118].make_or(node4, false, node5, false);
    size_t node7 = aig3table[118].make_or(node3, false, node6, false);
    size_t node8 = aig3table[118].make_and(node2, false, node7, false);
    aig3table[118].set_root(node8);
  }
  {
    size_t node0 = aig3table[119].make_literal(0, true);
    size_t node1 = aig3table[119].make_literal(1, true);
    size_t node2 = aig3table[119].make_or(node0, false, node1, false);
    aig3table[119].set_root(node2);
  }
  {
    size_t node0 = aig3table[120].make_literal(2, false);
    size_t node1 = aig3table[120].make_literal(0, false);
    size_t node2 = aig3table[120].make_literal(1, false);
    size_t node3 = aig3table[120].make_and(node1, false, node2, false);
    size_t node4 = aig3table[120].make_xor(node0, false, node3, false);
    aig3table[120].set_root(node4);
  }
  {
    size_t node0 = aig3table[121].make_literal(0, true);
    size_t node1 = aig3table[121].make_literal(1, true);
    size_t node2 = aig3table[121].make_literal(2, true);
    size_t node3 = aig3table[121].make_or(node1, false, node2, false);
    size_t node4 = aig3table[121].make_or(node0, false, node3, false);
    size_t node5 = aig3table[121].make_literal(2, false);
    size_t node6 = aig3table[121].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[121].make_or(node5, false, node6, false);
    size_t node8 = aig3table[121].make_and(node4, false, node7, false);
    aig3table[121].set_root(node8);
  }
  {
    size_t node0 = aig3table[122].make_literal(0, false);
    size_t node1 = aig3table[122].make_literal(2, false);
    size_t node2 = aig3table[122].make_or(node0, false, node1, false);
    size_t node3 = aig3table[122].make_literal(0, true);
    size_t node4 = aig3table[122].make_literal(2, true);
    size_t node5 = aig3table[122].make_literal(1, true);
    size_t node6 = aig3table[122].make_or(node4, false, node5, false);
    size_t node7 = aig3table[122].make_or(node3, false, node6, false);
    size_t node8 = aig3table[122].make_and(node2, false, node7, false);
    aig3table[122].set_root(node8);
  }
  {
    size_t node0 = aig3table[123].make_literal(1, true);
    size_t node1 = aig3table[123].make_literal(0, false);
    size_t node2 = aig3table[123].make_literal(2, true);
    size_t node3 = aig3table[123].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[123].make_or(node0, false, node3, false);
    aig3table[123].set_root(node4);
  }
  {
    size_t node0 = aig3table[124].make_literal(1, false);
    size_t node1 = aig3table[124].make_literal(2, false);
    size_t node2 = aig3table[124].make_or(node0, false, node1, false);
    size_t node3 = aig3table[124].make_literal(1, true);
    size_t node4 = aig3table[124].make_literal(2, true);
    size_t node5 = aig3table[124].make_literal(0, true);
    size_t node6 = aig3table[124].make_or(node4, false, node5, false);
    size_t node7 = aig3table[124].make_or(node3, false, node6, false);
    size_t node8 = aig3table[124].make_and(node2, false, node7, false);
    aig3table[124].set_root(node8);
  }
  {
    size_t node0 = aig3table[125].make_literal(0, true);
    size_t node1 = aig3table[125].make_literal(1, false);
    size_t node2 = aig3table[125].make_literal(2, true);
    size_t node3 = aig3table[125].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[125].make_or(node0, false, node3, false);
    aig3table[125].set_root(node4);
  }
  {
    size_t node0 = aig3table[126].make_literal(0, false);
    size_t node1 = aig3table[126].make_literal(1, false);
    size_t node2 = aig3table[126].make_literal(2, false);
    size_t node3 = aig3table[126].make_or(node1, false, node2, false);
    size_t node4 = aig3table[126].make_or(node0, false, node3, false);
    size_t node5 = aig3table[126].make_literal(0, true);
    size_t node6 = aig3table[126].make_literal(1, true);
    size_t node7 = aig3table[126].make_literal(2, true);
    size_t node8 = aig3table[126].make_or(node6, false, node7, false);
    size_t node9 = aig3table[126].make_or(node5, false, node8, false);
    size_t node10 = aig3table[126].make_and(node4, false, node9, false);
    aig3table[126].set_root(node10);
  }
  {
    size_t node0 = aig3table[127].make_literal(0, true);
    size_t node1 = aig3table[127].make_literal(1, true);
    size_t node2 = aig3table[127].make_literal(2, true);
    size_t node3 = aig3table[127].make_or(node1, false, node2, false);
    size_t node4 = aig3table[127].make_or(node0, false, node3, false);
    aig3table[127].set_root(node4);
  }
  {
    size_t node0 = aig3table[128].make_literal(0, false);
    size_t node1 = aig3table[128].make_literal(1, false);
    size_t node2 = aig3table[128].make_literal(2, false);
    size_t node3 = aig3table[128].make_and(node1, false, node2, false);
    size_t node4 = aig3table[128].make_and(node0, false, node3, false);
    aig3table[128].set_root(node4);
  }
  {
    size_t node0 = aig3table[129].make_literal(0, true);
    size_t node1 = aig3table[129].make_literal(1, true);
    size_t node2 = aig3table[129].make_literal(2, true);
    size_t node3 = aig3table[129].make_and(node1, false, node2, false);
    size_t node4 = aig3table[129].make_and(node0, false, node3, false);
    size_t node5 = aig3table[129].make_literal(0, false);
    size_t node6 = aig3table[129].make_literal(1, false);
    size_t node7 = aig3table[129].make_literal(2, false);
    size_t node8 = aig3table[129].make_and(node6, false, node7, false);
    size_t node9 = aig3table[129].make_and(node5, false, node8, false);
    size_t node10 = aig3table[129].make_or(node4, false, node9, false);
    aig3table[129].set_root(node10);
  }
  {
    size_t node0 = aig3table[130].make_literal(0, false);
    size_t node1 = aig3table[130].make_literal(1, true);
    size_t node2 = aig3table[130].make_literal(2, false);
    size_t node3 = aig3table[130].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[130].make_and(node0, false, node3, false);
    aig3table[130].set_root(node4);
  }
  {
    size_t node0 = aig3table[131].make_literal(1, true);
    size_t node1 = aig3table[131].make_literal(2, true);
    size_t node2 = aig3table[131].make_and(node0, false, node1, false);
    size_t node3 = aig3table[131].make_literal(1, false);
    size_t node4 = aig3table[131].make_literal(2, false);
    size_t node5 = aig3table[131].make_literal(0, false);
    size_t node6 = aig3table[131].make_and(node4, false, node5, false);
    size_t node7 = aig3table[131].make_and(node3, false, node6, false);
    size_t node8 = aig3table[131].make_or(node2, false, node7, false);
    aig3table[131].set_root(node8);
  }
  {
    size_t node0 = aig3table[132].make_literal(1, false);
    size_t node1 = aig3table[132].make_literal(0, true);
    size_t node2 = aig3table[132].make_literal(2, false);
    size_t node3 = aig3table[132].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[132].make_and(node0, false, node3, false);
    aig3table[132].set_root(node4);
  }
  {
    size_t node0 = aig3table[133].make_literal(0, true);
    size_t node1 = aig3table[133].make_literal(2, true);
    size_t node2 = aig3table[133].make_and(node0, false, node1, false);
    size_t node3 = aig3table[133].make_literal(0, false);
    size_t node4 = aig3table[133].make_literal(2, false);
    size_t node5 = aig3table[133].make_literal(1, false);
    size_t node6 = aig3table[133].make_and(node4, false, node5, false);
    size_t node7 = aig3table[133].make_and(node3, false, node6, false);
    size_t node8 = aig3table[133].make_or(node2, false, node7, false);
    aig3table[133].set_root(node8);
  }
  {
    size_t node0 = aig3table[134].make_literal(0, false);
    size_t node1 = aig3table[134].make_literal(1, false);
    size_t node2 = aig3table[134].make_literal(2, false);
    size_t node3 = aig3table[134].make_and(node1, false, node2, false);
    size_t node4 = aig3table[134].make_and(node0, false, node3, false);
    size_t node5 = aig3table[134].make_literal(2, true);
    size_t node6 = aig3table[134].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[134].make_and(node5, false, node6, false);
    size_t node8 = aig3table[134].make_or(node4, false, node7, false);
    aig3table[134].set_root(node8);
  }
  {
    size_t node0 = aig3table[135].make_literal(2, true);
    size_t node1 = aig3table[135].make_literal(0, false);
    size_t node2 = aig3table[135].make_literal(1, false);
    size_t node3 = aig3table[135].make_and(node1, false, node2, false);
    size_t node4 = aig3table[135].make_xor(node0, false, node3, false);
    aig3table[135].set_root(node4);
  }
  {
    size_t node0 = aig3table[136].make_literal(0, false);
    size_t node1 = aig3table[136].make_literal(1, false);
    size_t node2 = aig3table[136].make_and(node0, false, node1, false);
    aig3table[136].set_root(node2);
  }
  {
    size_t node0 = aig3table[137].make_literal(0, false);
    size_t node1 = aig3table[137].make_literal(1, false);
    size_t node2 = aig3table[137].make_and(node0, false, node1, false);
    size_t node3 = aig3table[137].make_literal(0, true);
    size_t node4 = aig3table[137].make_literal(1, true);
    size_t node5 = aig3table[137].make_literal(2, true);
    size_t node6 = aig3table[137].make_and(node4, false, node5, false);
    size_t node7 = aig3table[137].make_and(node3, false, node6, false);
    size_t node8 = aig3table[137].make_or(node2, false, node7, false);
    aig3table[137].set_root(node8);
  }
  {
    size_t node0 = aig3table[138].make_literal(0, false);
    size_t node1 = aig3table[138].make_literal(1, false);
    size_t node2 = aig3table[138].make_literal(2, true);
    size_t node3 = aig3table[138].make_or(node1, false, node2, false);
    size_t node4 = aig3table[138].make_and(node0, false, node3, false);
    aig3table[138].set_root(node4);
  }
  {
    size_t node0 = aig3table[139].make_literal(0, false);
    size_t node1 = aig3table[139].make_literal(1, false);
    size_t node2 = aig3table[139].make_and(node0, false, node1, false);
    size_t node3 = aig3table[139].make_literal(2, true);
    size_t node4 = aig3table[139].make_literal(1, true);
    size_t node5 = aig3table[139].make_and(node3, false, node4, false);
    size_t node6 = aig3table[139].make_or(node2, false, node5, false);
    aig3table[139].set_root(node6);
  }
  {
    size_t node0 = aig3table[140].make_literal(1, false);
    size_t node1 = aig3table[140].make_literal(0, false);
    size_t node2 = aig3table[140].make_literal(2, true);
    size_t node3 = aig3table[140].make_or(node1, false, node2, false);
    size_t node4 = aig3table[140].make_and(node0, false, node3, false);
    aig3table[140].set_root(node4);
  }
  {
    size_t node0 = aig3table[141].make_literal(1, false);
    size_t node1 = aig3table[141].make_literal(0, false);
    size_t node2 = aig3table[141].make_and(node0, false, node1, false);
    size_t node3 = aig3table[141].make_literal(2, true);
    size_t node4 = aig3table[141].make_literal(0, true);
    size_t node5 = aig3table[141].make_and(node3, false, node4, false);
    size_t node6 = aig3table[141].make_or(node2, false, node5, false);
    aig3table[141].set_root(node6);
  }
  {
    size_t node0 = aig3table[142].make_literal(0, false);
    size_t node1 = aig3table[142].make_literal(1, false);
    size_t node2 = aig3table[142].make_and(node0, false, node1, false);
    size_t node3 = aig3table[142].make_literal(2, true);
    size_t node4 = aig3table[142].make_or(node0, false, node1, false);
    size_t node5 = aig3table[142].make_and(node3, false, node4, false);
    size_t node6 = aig3table[142].make_or(node2, false, node5, false);
    aig3table[142].set_root(node6);
  }
  {
    size_t node0 = aig3table[143].make_literal(2, true);
    size_t node1 = aig3table[143].make_literal(0, false);
    size_t node2 = aig3table[143].make_literal(1, false);
    size_t node3 = aig3table[143].make_and(node1, false, node2, false);
    size_t node4 = aig3table[143].make_or(node0, false, node3, false);
    aig3table[143].set_root(node4);
  }
  {
    size_t node0 = aig3table[144].make_literal(2, false);
    size_t node1 = aig3table[144].make_literal(0, true);
    size_t node2 = aig3table[144].make_literal(1, false);
    size_t node3 = aig3table[144].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[144].make_and(node0, false, node3, false);
    aig3table[144].set_root(node4);
  }
  {
    size_t node0 = aig3table[145].make_literal(0, true);
    size_t node1 = aig3table[145].make_literal(1, true);
    size_t node2 = aig3table[145].make_and(node0, false, node1, false);
    size_t node3 = aig3table[145].make_literal(0, false);
    size_t node4 = aig3table[145].make_literal(1, false);
    size_t node5 = aig3table[145].make_literal(2, false);
    size_t node6 = aig3table[145].make_and(node4, false, node5, false);
    size_t node7 = aig3table[145].make_and(node3, false, node6, false);
    size_t node8 = aig3table[145].make_or(node2, false, node7, false);
    aig3table[145].set_root(node8);
  }
  {
    size_t node0 = aig3table[146].make_literal(0, false);
    size_t node1 = aig3table[146].make_literal(1, true);
    size_t node2 = aig3table[146].make_literal(2, true);
    size_t node3 = aig3table[146].make_and(node1, false, node2, false);
    size_t node4 = aig3table[146].make_and(node0, false, node3, false);
    size_t node5 = aig3table[146].make_literal(2, false);
    size_t node6 = aig3table[146].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[146].make_and(node5, false, node6, false);
    size_t node8 = aig3table[146].make_or(node4, false, node7, false);
    aig3table[146].set_root(node8);
  }
  {
    size_t node0 = aig3table[147].make_literal(1, true);
    size_t node1 = aig3table[147].make_literal(0, false);
    size_t node2 = aig3table[147].make_literal(2, false);
    size_t node3 = aig3table[147].make_and(node1, false, node2, false);
    size_t node4 = aig3table[147].make_xor(node0, false, node3, false);
    aig3table[147].set_root(node4);
  }
  {
    size_t node0 = aig3table[148].make_literal(0, true);
    size_t node1 = aig3table[148].make_literal(1, false);
    size_t node2 = aig3table[148].make_literal(2, true);
    size_t node3 = aig3table[148].make_and(node1, false, node2, false);
    size_t node4 = aig3table[148].make_and(node0, false, node3, false);
    size_t node5 = aig3table[148].make_literal(2, false);
    size_t node6 = aig3table[148].make_xor(node0, false, node1, false);
    size_t node7 = aig3table[148].make_and(node5, false, node6, false);
    size_t node8 = aig3table[148].make_or(node4, false, node7, false);
    aig3table[148].set_root(node8);
  }
  {
    size_t node0 = aig3table[149].make_literal(0, true);
    size_t node1 = aig3table[149].make_literal(1, false);
    size_t node2 = aig3table[149].make_literal(2, false);
    size_t node3 = aig3table[149].make_and(node1, false, node2, false);
    size_t node4 = aig3table[149].make_xor(node0, false, node3, false);
    aig3table[149].set_root(node4);
  }
  {
    size_t node0 = aig3table[150].make_literal(0, false);
    size_t node1 = aig3table[150].make_literal(1, false);
    size_t node2 = aig3table[150].make_literal(2, false);
    size_t node3 = aig3table[150].make_xor(node1, false, node2, false);
    size_t node4 = aig3table[150].make_xor(node0, false, node3, false);
    aig3table[150].set_root(node4);
  }
  {
    size_t node0 = aig3table[151].make_literal(0, true);
    size_t node1 = aig3table[151].make_literal(1, true);
    size_t node2 = aig3table[151].make_literal(2, false);
    size_t node3 = aig3table[151].make_or(node1, false, node2, false);
    size_t node4 = aig3table[151].make_or(node0, false, node3, false);
    size_t node5 = aig3table[151].make_literal(2, true);
    size_t node6 = aig3table[151].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[151].make_or(node5, false, node6, false);
    size_t node8 = aig3table[151].make_and(node4, false, node7, false);
    aig3table[151].set_root(node8);
  }
  {
    size_t node0 = aig3table[152].make_literal(0, false);
    size_t node1 = aig3table[152].make_literal(1, false);
    size_t node2 = aig3table[152].make_and(node0, false, node1, false);
    size_t node3 = aig3table[152].make_literal(0, true);
    size_t node4 = aig3table[152].make_literal(1, true);
    size_t node5 = aig3table[152].make_literal(2, false);
    size_t node6 = aig3table[152].make_and(node4, false, node5, false);
    size_t node7 = aig3table[152].make_and(node3, false, node6, false);
    size_t node8 = aig3table[152].make_or(node2, false, node7, false);
    aig3table[152].set_root(node8);
  }
  {
    size_t node0 = aig3table[153].make_literal(0, true);
    size_t node1 = aig3table[153].make_literal(1, false);
    size_t node2 = aig3table[153].make_xor(node0, false, node1, false);
    aig3table[153].set_root(node2);
  }
  {
    size_t node0 = aig3table[154].make_literal(0, false);
    size_t node1 = aig3table[154].make_literal(1, true);
    size_t node2 = aig3table[154].make_literal(2, false);
    size_t node3 = aig3table[154].make_and(node1, false, node2, false);
    size_t node4 = aig3table[154].make_xor(node0, false, node3, false);
    aig3table[154].set_root(node4);
  }
  {
    size_t node0 = aig3table[155].make_literal(0, false);
    size_t node1 = aig3table[155].make_literal(1, true);
    size_t node2 = aig3table[155].make_or(node0, false, node1, false);
    size_t node3 = aig3table[155].make_literal(0, true);
    size_t node4 = aig3table[155].make_literal(1, false);
    size_t node5 = aig3table[155].make_literal(2, true);
    size_t node6 = aig3table[155].make_or(node4, false, node5, false);
    size_t node7 = aig3table[155].make_or(node3, false, node6, false);
    size_t node8 = aig3table[155].make_and(node2, false, node7, false);
    aig3table[155].set_root(node8);
  }
  {
    size_t node0 = aig3table[156].make_literal(1, false);
    size_t node1 = aig3table[156].make_literal(0, true);
    size_t node2 = aig3table[156].make_literal(2, false);
    size_t node3 = aig3table[156].make_and(node1, false, node2, false);
    size_t node4 = aig3table[156].make_xor(node0, false, node3, false);
    aig3table[156].set_root(node4);
  }
  {
    size_t node0 = aig3table[157].make_literal(0, true);
    size_t node1 = aig3table[157].make_literal(1, false);
    size_t node2 = aig3table[157].make_or(node0, false, node1, false);
    size_t node3 = aig3table[157].make_literal(0, false);
    size_t node4 = aig3table[157].make_literal(1, true);
    size_t node5 = aig3table[157].make_literal(2, true);
    size_t node6 = aig3table[157].make_or(node4, false, node5, false);
    size_t node7 = aig3table[157].make_or(node3, false, node6, false);
    size_t node8 = aig3table[157].make_and(node2, false, node7, false);
    aig3table[157].set_root(node8);
  }
  {
    size_t node0 = aig3table[158].make_literal(0, false);
    size_t node1 = aig3table[158].make_literal(1, false);
    size_t node2 = aig3table[158].make_literal(2, false);
    size_t node3 = aig3table[158].make_or(node1, false, node2, false);
    size_t node4 = aig3table[158].make_or(node0, false, node3, false);
    size_t node5 = aig3table[158].make_literal(2, true);
    size_t node6 = aig3table[158].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[158].make_or(node5, false, node6, false);
    size_t node8 = aig3table[158].make_and(node4, false, node7, false);
    aig3table[158].set_root(node8);
  }
  {
    size_t node0 = aig3table[159].make_literal(2, true);
    size_t node1 = aig3table[159].make_literal(0, true);
    size_t node2 = aig3table[159].make_literal(1, true);
    size_t node3 = aig3table[159].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[159].make_or(node0, false, node3, false);
    aig3table[159].set_root(node4);
  }
  {
    size_t node0 = aig3table[160].make_literal(0, false);
    size_t node1 = aig3table[160].make_literal(2, false);
    size_t node2 = aig3table[160].make_and(node0, false, node1, false);
    aig3table[160].set_root(node2);
  }
  {
    size_t node0 = aig3table[161].make_literal(0, false);
    size_t node1 = aig3table[161].make_literal(2, false);
    size_t node2 = aig3table[161].make_and(node0, false, node1, false);
    size_t node3 = aig3table[161].make_literal(0, true);
    size_t node4 = aig3table[161].make_literal(2, true);
    size_t node5 = aig3table[161].make_literal(1, true);
    size_t node6 = aig3table[161].make_and(node4, false, node5, false);
    size_t node7 = aig3table[161].make_and(node3, false, node6, false);
    size_t node8 = aig3table[161].make_or(node2, false, node7, false);
    aig3table[161].set_root(node8);
  }
  {
    size_t node0 = aig3table[162].make_literal(0, false);
    size_t node1 = aig3table[162].make_literal(1, true);
    size_t node2 = aig3table[162].make_literal(2, false);
    size_t node3 = aig3table[162].make_or(node1, false, node2, false);
    size_t node4 = aig3table[162].make_and(node0, false, node3, false);
    aig3table[162].set_root(node4);
  }
  {
    size_t node0 = aig3table[163].make_literal(0, false);
    size_t node1 = aig3table[163].make_literal(2, false);
    size_t node2 = aig3table[163].make_and(node0, false, node1, false);
    size_t node3 = aig3table[163].make_literal(1, true);
    size_t node4 = aig3table[163].make_literal(2, true);
    size_t node5 = aig3table[163].make_and(node3, false, node4, false);
    size_t node6 = aig3table[163].make_or(node2, false, node5, false);
    aig3table[163].set_root(node6);
  }
  {
    size_t node0 = aig3table[164].make_literal(0, false);
    size_t node1 = aig3table[164].make_literal(2, false);
    size_t node2 = aig3table[164].make_and(node0, false, node1, false);
    size_t node3 = aig3table[164].make_literal(0, true);
    size_t node4 = aig3table[164].make_literal(2, true);
    size_t node5 = aig3table[164].make_literal(1, false);
    size_t node6 = aig3table[164].make_and(node4, false, node5, false);
    size_t node7 = aig3table[164].make_and(node3, false, node6, false);
    size_t node8 = aig3table[164].make_or(node2, false, node7, false);
    aig3table[164].set_root(node8);
  }
  {
    size_t node0 = aig3table[165].make_literal(0, true);
    size_t node1 = aig3table[165].make_literal(2, false);
    size_t node2 = aig3table[165].make_xor(node0, false, node1, false);
    aig3table[165].set_root(node2);
  }
  {
    size_t node0 = aig3table[166].make_literal(0, false);
    size_t node1 = aig3table[166].make_literal(1, false);
    size_t node2 = aig3table[166].make_literal(2, true);
    size_t node3 = aig3table[166].make_and(node1, false, node2, false);
    size_t node4 = aig3table[166].make_xor(node0, false, node3, false);
    aig3table[166].set_root(node4);
  }
  {
    size_t node0 = aig3table[167].make_literal(0, false);
    size_t node1 = aig3table[167].make_literal(2, true);
    size_t node2 = aig3table[167].make_or(node0, false, node1, false);
    size_t node3 = aig3table[167].make_literal(0, true);
    size_t node4 = aig3table[167].make_literal(2, false);
    size_t node5 = aig3table[167].make_literal(1, true);
    size_t node6 = aig3table[167].make_or(node4, false, node5, false);
    size_t node7 = aig3table[167].make_or(node3, false, node6, false);
    size_t node8 = aig3table[167].make_and(node2, false, node7, false);
    aig3table[167].set_root(node8);
  }
  {
    size_t node0 = aig3table[168].make_literal(0, false);
    size_t node1 = aig3table[168].make_literal(1, false);
    size_t node2 = aig3table[168].make_literal(2, false);
    size_t node3 = aig3table[168].make_or(node1, false, node2, false);
    size_t node4 = aig3table[168].make_and(node0, false, node3, false);
    aig3table[168].set_root(node4);
  }
  {
    size_t node0 = aig3table[169].make_literal(0, false);
    size_t node1 = aig3table[169].make_literal(1, true);
    size_t node2 = aig3table[169].make_literal(2, true);
    size_t node3 = aig3table[169].make_and(node1, false, node2, false);
    size_t node4 = aig3table[169].make_xor(node0, false, node3, false);
    aig3table[169].set_root(node4);
  }
  {
    size_t node0 = aig3table[170].make_literal(0, false);
    aig3table[170].set_root(node0);
  }
  {
    size_t node0 = aig3table[171].make_literal(0, false);
    size_t node1 = aig3table[171].make_literal(1, true);
    size_t node2 = aig3table[171].make_literal(2, true);
    size_t node3 = aig3table[171].make_and(node1, false, node2, false);
    size_t node4 = aig3table[171].make_or(node0, false, node3, false);
    aig3table[171].set_root(node4);
  }
  {
    size_t node0 = aig3table[172].make_literal(0, false);
    size_t node1 = aig3table[172].make_literal(2, false);
    size_t node2 = aig3table[172].make_and(node0, false, node1, false);
    size_t node3 = aig3table[172].make_literal(1, false);
    size_t node4 = aig3table[172].make_literal(2, true);
    size_t node5 = aig3table[172].make_and(node3, false, node4, false);
    size_t node6 = aig3table[172].make_or(node2, false, node5, false);
    aig3table[172].set_root(node6);
  }
  {
    size_t node0 = aig3table[173].make_literal(0, false);
    size_t node1 = aig3table[173].make_literal(2, true);
    size_t node2 = aig3table[173].make_or(node0, false, node1, false);
    size_t node3 = aig3table[173].make_literal(0, true);
    size_t node4 = aig3table[173].make_literal(2, false);
    size_t node5 = aig3table[173].make_literal(1, false);
    size_t node6 = aig3table[173].make_or(node4, false, node5, false);
    size_t node7 = aig3table[173].make_or(node3, false, node6, false);
    size_t node8 = aig3table[173].make_and(node2, false, node7, false);
    aig3table[173].set_root(node8);
  }
  {
    size_t node0 = aig3table[174].make_literal(0, false);
    size_t node1 = aig3table[174].make_literal(1, false);
    size_t node2 = aig3table[174].make_literal(2, true);
    size_t node3 = aig3table[174].make_and(node1, false, node2, false);
    size_t node4 = aig3table[174].make_or(node0, false, node3, false);
    aig3table[174].set_root(node4);
  }
  {
    size_t node0 = aig3table[175].make_literal(0, false);
    size_t node1 = aig3table[175].make_literal(2, true);
    size_t node2 = aig3table[175].make_or(node0, false, node1, false);
    aig3table[175].set_root(node2);
  }
  {
    size_t node0 = aig3table[176].make_literal(2, false);
    size_t node1 = aig3table[176].make_literal(0, false);
    size_t node2 = aig3table[176].make_literal(1, true);
    size_t node3 = aig3table[176].make_or(node1, false, node2, false);
    size_t node4 = aig3table[176].make_and(node0, false, node3, false);
    aig3table[176].set_root(node4);
  }
  {
    size_t node0 = aig3table[177].make_literal(1, true);
    size_t node1 = aig3table[177].make_literal(0, true);
    size_t node2 = aig3table[177].make_and(node0, false, node1, false);
    size_t node3 = aig3table[177].make_literal(2, false);
    size_t node4 = aig3table[177].make_literal(0, false);
    size_t node5 = aig3table[177].make_and(node3, false, node4, false);
    size_t node6 = aig3table[177].make_or(node2, false, node5, false);
    aig3table[177].set_root(node6);
  }
  {
    size_t node0 = aig3table[178].make_literal(0, false);
    size_t node1 = aig3table[178].make_literal(1, true);
    size_t node2 = aig3table[178].make_and(node0, false, node1, false);
    size_t node3 = aig3table[178].make_literal(2, false);
    size_t node4 = aig3table[178].make_or(node0, false, node1, false);
    size_t node5 = aig3table[178].make_and(node3, false, node4, false);
    size_t node6 = aig3table[178].make_or(node2, false, node5, false);
    aig3table[178].set_root(node6);
  }
  {
    size_t node0 = aig3table[179].make_literal(1, true);
    size_t node1 = aig3table[179].make_literal(0, false);
    size_t node2 = aig3table[179].make_literal(2, false);
    size_t node3 = aig3table[179].make_and(node1, false, node2, false);
    size_t node4 = aig3table[179].make_or(node0, false, node3, false);
    aig3table[179].set_root(node4);
  }
  {
    size_t node0 = aig3table[180].make_literal(2, false);
    size_t node1 = aig3table[180].make_literal(0, true);
    size_t node2 = aig3table[180].make_literal(1, false);
    size_t node3 = aig3table[180].make_and(node1, false, node2, false);
    size_t node4 = aig3table[180].make_xor(node0, false, node3, false);
    aig3table[180].set_root(node4);
  }
  {
    size_t node0 = aig3table[181].make_literal(0, true);
    size_t node1 = aig3table[181].make_literal(2, false);
    size_t node2 = aig3table[181].make_or(node0, false, node1, false);
    size_t node3 = aig3table[181].make_literal(0, false);
    size_t node4 = aig3table[181].make_literal(2, true);
    size_t node5 = aig3table[181].make_literal(1, true);
    size_t node6 = aig3table[181].make_or(node4, false, node5, false);
    size_t node7 = aig3table[181].make_or(node3, false, node6, false);
    size_t node8 = aig3table[181].make_and(node2, false, node7, false);
    aig3table[181].set_root(node8);
  }
  {
    size_t node0 = aig3table[182].make_literal(0, false);
    size_t node1 = aig3table[182].make_literal(1, true);
    size_t node2 = aig3table[182].make_literal(2, true);
    size_t node3 = aig3table[182].make_or(node1, false, node2, false);
    size_t node4 = aig3table[182].make_or(node0, false, node3, false);
    size_t node5 = aig3table[182].make_literal(2, false);
    size_t node6 = aig3table[182].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[182].make_or(node5, false, node6, false);
    size_t node8 = aig3table[182].make_and(node4, false, node7, false);
    aig3table[182].set_root(node8);
  }
  {
    size_t node0 = aig3table[183].make_literal(1, true);
    size_t node1 = aig3table[183].make_literal(0, true);
    size_t node2 = aig3table[183].make_literal(2, true);
    size_t node3 = aig3table[183].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[183].make_or(node0, false, node3, false);
    aig3table[183].set_root(node4);
  }
  {
    size_t node0 = aig3table[184].make_literal(0, false);
    size_t node1 = aig3table[184].make_literal(1, false);
    size_t node2 = aig3table[184].make_and(node0, false, node1, false);
    size_t node3 = aig3table[184].make_literal(2, false);
    size_t node4 = aig3table[184].make_literal(1, true);
    size_t node5 = aig3table[184].make_and(node3, false, node4, false);
    size_t node6 = aig3table[184].make_or(node2, false, node5, false);
    aig3table[184].set_root(node6);
  }
  {
    size_t node0 = aig3table[185].make_literal(0, false);
    size_t node1 = aig3table[185].make_literal(1, true);
    size_t node2 = aig3table[185].make_or(node0, false, node1, false);
    size_t node3 = aig3table[185].make_literal(0, true);
    size_t node4 = aig3table[185].make_literal(1, false);
    size_t node5 = aig3table[185].make_literal(2, false);
    size_t node6 = aig3table[185].make_or(node4, false, node5, false);
    size_t node7 = aig3table[185].make_or(node3, false, node6, false);
    size_t node8 = aig3table[185].make_and(node2, false, node7, false);
    aig3table[185].set_root(node8);
  }
  {
    size_t node0 = aig3table[186].make_literal(0, false);
    size_t node1 = aig3table[186].make_literal(1, true);
    size_t node2 = aig3table[186].make_literal(2, false);
    size_t node3 = aig3table[186].make_and(node1, false, node2, false);
    size_t node4 = aig3table[186].make_or(node0, false, node3, false);
    aig3table[186].set_root(node4);
  }
  {
    size_t node0 = aig3table[187].make_literal(0, false);
    size_t node1 = aig3table[187].make_literal(1, true);
    size_t node2 = aig3table[187].make_or(node0, false, node1, false);
    aig3table[187].set_root(node2);
  }
  {
    size_t node0 = aig3table[188].make_literal(1, false);
    size_t node1 = aig3table[188].make_literal(2, false);
    size_t node2 = aig3table[188].make_or(node0, false, node1, false);
    size_t node3 = aig3table[188].make_literal(1, true);
    size_t node4 = aig3table[188].make_literal(2, true);
    size_t node5 = aig3table[188].make_literal(0, false);
    size_t node6 = aig3table[188].make_or(node4, false, node5, false);
    size_t node7 = aig3table[188].make_or(node3, false, node6, false);
    size_t node8 = aig3table[188].make_and(node2, false, node7, false);
    aig3table[188].set_root(node8);
  }
  {
    size_t node0 = aig3table[189].make_literal(0, false);
    size_t node1 = aig3table[189].make_literal(1, true);
    size_t node2 = aig3table[189].make_literal(2, true);
    size_t node3 = aig3table[189].make_or(node1, false, node2, false);
    size_t node4 = aig3table[189].make_or(node0, false, node3, false);
    size_t node5 = aig3table[189].make_literal(0, true);
    size_t node6 = aig3table[189].make_literal(1, false);
    size_t node7 = aig3table[189].make_literal(2, false);
    size_t node8 = aig3table[189].make_or(node6, false, node7, false);
    size_t node9 = aig3table[189].make_or(node5, false, node8, false);
    size_t node10 = aig3table[189].make_and(node4, false, node9, false);
    aig3table[189].set_root(node10);
  }
  {
    size_t node0 = aig3table[190].make_literal(0, false);
    size_t node1 = aig3table[190].make_literal(1, false);
    size_t node2 = aig3table[190].make_literal(2, true);
    size_t node3 = aig3table[190].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[190].make_or(node0, false, node3, false);
    aig3table[190].set_root(node4);
  }
  {
    size_t node0 = aig3table[191].make_literal(0, false);
    size_t node1 = aig3table[191].make_literal(1, true);
    size_t node2 = aig3table[191].make_literal(2, true);
    size_t node3 = aig3table[191].make_or(node1, false, node2, false);
    size_t node4 = aig3table[191].make_or(node0, false, node3, false);
    aig3table[191].set_root(node4);
  }
  {
    size_t node0 = aig3table[192].make_literal(1, false);
    size_t node1 = aig3table[192].make_literal(2, false);
    size_t node2 = aig3table[192].make_and(node0, false, node1, false);
    aig3table[192].set_root(node2);
  }
  {
    size_t node0 = aig3table[193].make_literal(1, false);
    size_t node1 = aig3table[193].make_literal(2, false);
    size_t node2 = aig3table[193].make_and(node0, false, node1, false);
    size_t node3 = aig3table[193].make_literal(1, true);
    size_t node4 = aig3table[193].make_literal(2, true);
    size_t node5 = aig3table[193].make_literal(0, true);
    size_t node6 = aig3table[193].make_and(node4, false, node5, false);
    size_t node7 = aig3table[193].make_and(node3, false, node6, false);
    size_t node8 = aig3table[193].make_or(node2, false, node7, false);
    aig3table[193].set_root(node8);
  }
  {
    size_t node0 = aig3table[194].make_literal(1, false);
    size_t node1 = aig3table[194].make_literal(2, false);
    size_t node2 = aig3table[194].make_and(node0, false, node1, false);
    size_t node3 = aig3table[194].make_literal(1, true);
    size_t node4 = aig3table[194].make_literal(2, true);
    size_t node5 = aig3table[194].make_literal(0, false);
    size_t node6 = aig3table[194].make_and(node4, false, node5, false);
    size_t node7 = aig3table[194].make_and(node3, false, node6, false);
    size_t node8 = aig3table[194].make_or(node2, false, node7, false);
    aig3table[194].set_root(node8);
  }
  {
    size_t node0 = aig3table[195].make_literal(1, true);
    size_t node1 = aig3table[195].make_literal(2, false);
    size_t node2 = aig3table[195].make_xor(node0, false, node1, false);
    aig3table[195].set_root(node2);
  }
  {
    size_t node0 = aig3table[196].make_literal(1, false);
    size_t node1 = aig3table[196].make_literal(0, true);
    size_t node2 = aig3table[196].make_literal(2, false);
    size_t node3 = aig3table[196].make_or(node1, false, node2, false);
    size_t node4 = aig3table[196].make_and(node0, false, node3, false);
    aig3table[196].set_root(node4);
  }
  {
    size_t node0 = aig3table[197].make_literal(0, true);
    size_t node1 = aig3table[197].make_literal(2, true);
    size_t node2 = aig3table[197].make_and(node0, false, node1, false);
    size_t node3 = aig3table[197].make_literal(1, false);
    size_t node4 = aig3table[197].make_literal(2, false);
    size_t node5 = aig3table[197].make_and(node3, false, node4, false);
    size_t node6 = aig3table[197].make_or(node2, false, node5, false);
    aig3table[197].set_root(node6);
  }
  {
    size_t node0 = aig3table[198].make_literal(1, false);
    size_t node1 = aig3table[198].make_literal(0, false);
    size_t node2 = aig3table[198].make_literal(2, true);
    size_t node3 = aig3table[198].make_and(node1, false, node2, false);
    size_t node4 = aig3table[198].make_xor(node0, false, node3, false);
    aig3table[198].set_root(node4);
  }
  {
    size_t node0 = aig3table[199].make_literal(1, false);
    size_t node1 = aig3table[199].make_literal(2, true);
    size_t node2 = aig3table[199].make_or(node0, false, node1, false);
    size_t node3 = aig3table[199].make_literal(1, true);
    size_t node4 = aig3table[199].make_literal(2, false);
    size_t node5 = aig3table[199].make_literal(0, true);
    size_t node6 = aig3table[199].make_or(node4, false, node5, false);
    size_t node7 = aig3table[199].make_or(node3, false, node6, false);
    size_t node8 = aig3table[199].make_and(node2, false, node7, false);
    aig3table[199].set_root(node8);
  }
  {
    size_t node0 = aig3table[200].make_literal(1, false);
    size_t node1 = aig3table[200].make_literal(0, false);
    size_t node2 = aig3table[200].make_literal(2, false);
    size_t node3 = aig3table[200].make_or(node1, false, node2, false);
    size_t node4 = aig3table[200].make_and(node0, false, node3, false);
    aig3table[200].set_root(node4);
  }
  {
    size_t node0 = aig3table[201].make_literal(1, false);
    size_t node1 = aig3table[201].make_literal(0, true);
    size_t node2 = aig3table[201].make_literal(2, true);
    size_t node3 = aig3table[201].make_and(node1, false, node2, false);
    size_t node4 = aig3table[201].make_xor(node0, false, node3, false);
    aig3table[201].set_root(node4);
  }
  {
    size_t node0 = aig3table[202].make_literal(0, false);
    size_t node1 = aig3table[202].make_literal(2, true);
    size_t node2 = aig3table[202].make_and(node0, false, node1, false);
    size_t node3 = aig3table[202].make_literal(1, false);
    size_t node4 = aig3table[202].make_literal(2, false);
    size_t node5 = aig3table[202].make_and(node3, false, node4, false);
    size_t node6 = aig3table[202].make_or(node2, false, node5, false);
    aig3table[202].set_root(node6);
  }
  {
    size_t node0 = aig3table[203].make_literal(1, false);
    size_t node1 = aig3table[203].make_literal(2, true);
    size_t node2 = aig3table[203].make_or(node0, false, node1, false);
    size_t node3 = aig3table[203].make_literal(1, true);
    size_t node4 = aig3table[203].make_literal(2, false);
    size_t node5 = aig3table[203].make_literal(0, false);
    size_t node6 = aig3table[203].make_or(node4, false, node5, false);
    size_t node7 = aig3table[203].make_or(node3, false, node6, false);
    size_t node8 = aig3table[203].make_and(node2, false, node7, false);
    aig3table[203].set_root(node8);
  }
  {
    size_t node0 = aig3table[204].make_literal(1, false);
    aig3table[204].set_root(node0);
  }
  {
    size_t node0 = aig3table[205].make_literal(1, false);
    size_t node1 = aig3table[205].make_literal(0, true);
    size_t node2 = aig3table[205].make_literal(2, true);
    size_t node3 = aig3table[205].make_and(node1, false, node2, false);
    size_t node4 = aig3table[205].make_or(node0, false, node3, false);
    aig3table[205].set_root(node4);
  }
  {
    size_t node0 = aig3table[206].make_literal(1, false);
    size_t node1 = aig3table[206].make_literal(0, false);
    size_t node2 = aig3table[206].make_literal(2, true);
    size_t node3 = aig3table[206].make_and(node1, false, node2, false);
    size_t node4 = aig3table[206].make_or(node0, false, node3, false);
    aig3table[206].set_root(node4);
  }
  {
    size_t node0 = aig3table[207].make_literal(1, false);
    size_t node1 = aig3table[207].make_literal(2, true);
    size_t node2 = aig3table[207].make_or(node0, false, node1, false);
    aig3table[207].set_root(node2);
  }
  {
    size_t node0 = aig3table[208].make_literal(2, false);
    size_t node1 = aig3table[208].make_literal(0, true);
    size_t node2 = aig3table[208].make_literal(1, false);
    size_t node3 = aig3table[208].make_or(node1, false, node2, false);
    size_t node4 = aig3table[208].make_and(node0, false, node3, false);
    aig3table[208].set_root(node4);
  }
  {
    size_t node0 = aig3table[209].make_literal(0, true);
    size_t node1 = aig3table[209].make_literal(1, true);
    size_t node2 = aig3table[209].make_and(node0, false, node1, false);
    size_t node3 = aig3table[209].make_literal(2, false);
    size_t node4 = aig3table[209].make_literal(1, false);
    size_t node5 = aig3table[209].make_and(node3, false, node4, false);
    size_t node6 = aig3table[209].make_or(node2, false, node5, false);
    aig3table[209].set_root(node6);
  }
  {
    size_t node0 = aig3table[210].make_literal(2, false);
    size_t node1 = aig3table[210].make_literal(0, false);
    size_t node2 = aig3table[210].make_literal(1, true);
    size_t node3 = aig3table[210].make_and(node1, false, node2, false);
    size_t node4 = aig3table[210].make_xor(node0, false, node3, false);
    aig3table[210].set_root(node4);
  }
  {
    size_t node0 = aig3table[211].make_literal(1, true);
    size_t node1 = aig3table[211].make_literal(2, false);
    size_t node2 = aig3table[211].make_or(node0, false, node1, false);
    size_t node3 = aig3table[211].make_literal(1, false);
    size_t node4 = aig3table[211].make_literal(2, true);
    size_t node5 = aig3table[211].make_literal(0, true);
    size_t node6 = aig3table[211].make_or(node4, false, node5, false);
    size_t node7 = aig3table[211].make_or(node3, false, node6, false);
    size_t node8 = aig3table[211].make_and(node2, false, node7, false);
    aig3table[211].set_root(node8);
  }
  {
    size_t node0 = aig3table[212].make_literal(0, true);
    size_t node1 = aig3table[212].make_literal(1, false);
    size_t node2 = aig3table[212].make_and(node0, false, node1, false);
    size_t node3 = aig3table[212].make_literal(2, false);
    size_t node4 = aig3table[212].make_or(node0, false, node1, false);
    size_t node5 = aig3table[212].make_and(node3, false, node4, false);
    size_t node6 = aig3table[212].make_or(node2, false, node5, false);
    aig3table[212].set_root(node6);
  }
  {
    size_t node0 = aig3table[213].make_literal(0, true);
    size_t node1 = aig3table[213].make_literal(1, false);
    size_t node2 = aig3table[213].make_literal(2, false);
    size_t node3 = aig3table[213].make_and(node1, false, node2, false);
    size_t node4 = aig3table[213].make_or(node0, false, node3, false);
    aig3table[213].set_root(node4);
  }
  {
    size_t node0 = aig3table[214].make_literal(0, true);
    size_t node1 = aig3table[214].make_literal(1, false);
    size_t node2 = aig3table[214].make_literal(2, true);
    size_t node3 = aig3table[214].make_or(node1, false, node2, false);
    size_t node4 = aig3table[214].make_or(node0, false, node3, false);
    size_t node5 = aig3table[214].make_literal(2, false);
    size_t node6 = aig3table[214].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[214].make_or(node5, false, node6, false);
    size_t node8 = aig3table[214].make_and(node4, false, node7, false);
    aig3table[214].set_root(node8);
  }
  {
    size_t node0 = aig3table[215].make_literal(0, true);
    size_t node1 = aig3table[215].make_literal(1, true);
    size_t node2 = aig3table[215].make_literal(2, true);
    size_t node3 = aig3table[215].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[215].make_or(node0, false, node3, false);
    aig3table[215].set_root(node4);
  }
  {
    size_t node0 = aig3table[216].make_literal(1, false);
    size_t node1 = aig3table[216].make_literal(0, false);
    size_t node2 = aig3table[216].make_and(node0, false, node1, false);
    size_t node3 = aig3table[216].make_literal(2, false);
    size_t node4 = aig3table[216].make_literal(0, true);
    size_t node5 = aig3table[216].make_and(node3, false, node4, false);
    size_t node6 = aig3table[216].make_or(node2, false, node5, false);
    aig3table[216].set_root(node6);
  }
  {
    size_t node0 = aig3table[217].make_literal(0, true);
    size_t node1 = aig3table[217].make_literal(1, false);
    size_t node2 = aig3table[217].make_or(node0, false, node1, false);
    size_t node3 = aig3table[217].make_literal(0, false);
    size_t node4 = aig3table[217].make_literal(1, true);
    size_t node5 = aig3table[217].make_literal(2, false);
    size_t node6 = aig3table[217].make_or(node4, false, node5, false);
    size_t node7 = aig3table[217].make_or(node3, false, node6, false);
    size_t node8 = aig3table[217].make_and(node2, false, node7, false);
    aig3table[217].set_root(node8);
  }
  {
    size_t node0 = aig3table[218].make_literal(0, false);
    size_t node1 = aig3table[218].make_literal(2, false);
    size_t node2 = aig3table[218].make_or(node0, false, node1, false);
    size_t node3 = aig3table[218].make_literal(0, true);
    size_t node4 = aig3table[218].make_literal(2, true);
    size_t node5 = aig3table[218].make_literal(1, false);
    size_t node6 = aig3table[218].make_or(node4, false, node5, false);
    size_t node7 = aig3table[218].make_or(node3, false, node6, false);
    size_t node8 = aig3table[218].make_and(node2, false, node7, false);
    aig3table[218].set_root(node8);
  }
  {
    size_t node0 = aig3table[219].make_literal(0, false);
    size_t node1 = aig3table[219].make_literal(1, true);
    size_t node2 = aig3table[219].make_literal(2, false);
    size_t node3 = aig3table[219].make_or(node1, false, node2, false);
    size_t node4 = aig3table[219].make_or(node0, false, node3, false);
    size_t node5 = aig3table[219].make_literal(0, true);
    size_t node6 = aig3table[219].make_literal(1, false);
    size_t node7 = aig3table[219].make_literal(2, true);
    size_t node8 = aig3table[219].make_or(node6, false, node7, false);
    size_t node9 = aig3table[219].make_or(node5, false, node8, false);
    size_t node10 = aig3table[219].make_and(node4, false, node9, false);
    aig3table[219].set_root(node10);
  }
  {
    size_t node0 = aig3table[220].make_literal(1, false);
    size_t node1 = aig3table[220].make_literal(0, true);
    size_t node2 = aig3table[220].make_literal(2, false);
    size_t node3 = aig3table[220].make_and(node1, false, node2, false);
    size_t node4 = aig3table[220].make_or(node0, false, node3, false);
    aig3table[220].set_root(node4);
  }
  {
    size_t node0 = aig3table[221].make_literal(0, true);
    size_t node1 = aig3table[221].make_literal(1, false);
    size_t node2 = aig3table[221].make_or(node0, false, node1, false);
    aig3table[221].set_root(node2);
  }
  {
    size_t node0 = aig3table[222].make_literal(1, false);
    size_t node1 = aig3table[222].make_literal(0, false);
    size_t node2 = aig3table[222].make_literal(2, true);
    size_t node3 = aig3table[222].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[222].make_or(node0, false, node3, false);
    aig3table[222].set_root(node4);
  }
  {
    size_t node0 = aig3table[223].make_literal(0, true);
    size_t node1 = aig3table[223].make_literal(1, false);
    size_t node2 = aig3table[223].make_literal(2, true);
    size_t node3 = aig3table[223].make_or(node1, false, node2, false);
    size_t node4 = aig3table[223].make_or(node0, false, node3, false);
    aig3table[223].set_root(node4);
  }
  {
    size_t node0 = aig3table[224].make_literal(2, false);
    size_t node1 = aig3table[224].make_literal(0, false);
    size_t node2 = aig3table[224].make_literal(1, false);
    size_t node3 = aig3table[224].make_or(node1, false, node2, false);
    size_t node4 = aig3table[224].make_and(node0, false, node3, false);
    aig3table[224].set_root(node4);
  }
  {
    size_t node0 = aig3table[225].make_literal(2, false);
    size_t node1 = aig3table[225].make_literal(0, true);
    size_t node2 = aig3table[225].make_literal(1, true);
    size_t node3 = aig3table[225].make_and(node1, false, node2, false);
    size_t node4 = aig3table[225].make_xor(node0, false, node3, false);
    aig3table[225].set_root(node4);
  }
  {
    size_t node0 = aig3table[226].make_literal(0, false);
    size_t node1 = aig3table[226].make_literal(1, true);
    size_t node2 = aig3table[226].make_and(node0, false, node1, false);
    size_t node3 = aig3table[226].make_literal(2, false);
    size_t node4 = aig3table[226].make_literal(1, false);
    size_t node5 = aig3table[226].make_and(node3, false, node4, false);
    size_t node6 = aig3table[226].make_or(node2, false, node5, false);
    aig3table[226].set_root(node6);
  }
  {
    size_t node0 = aig3table[227].make_literal(1, true);
    size_t node1 = aig3table[227].make_literal(2, false);
    size_t node2 = aig3table[227].make_or(node0, false, node1, false);
    size_t node3 = aig3table[227].make_literal(1, false);
    size_t node4 = aig3table[227].make_literal(2, true);
    size_t node5 = aig3table[227].make_literal(0, false);
    size_t node6 = aig3table[227].make_or(node4, false, node5, false);
    size_t node7 = aig3table[227].make_or(node3, false, node6, false);
    size_t node8 = aig3table[227].make_and(node2, false, node7, false);
    aig3table[227].set_root(node8);
  }
  {
    size_t node0 = aig3table[228].make_literal(1, false);
    size_t node1 = aig3table[228].make_literal(0, true);
    size_t node2 = aig3table[228].make_and(node0, false, node1, false);
    size_t node3 = aig3table[228].make_literal(2, false);
    size_t node4 = aig3table[228].make_literal(0, false);
    size_t node5 = aig3table[228].make_and(node3, false, node4, false);
    size_t node6 = aig3table[228].make_or(node2, false, node5, false);
    aig3table[228].set_root(node6);
  }
  {
    size_t node0 = aig3table[229].make_literal(0, true);
    size_t node1 = aig3table[229].make_literal(2, false);
    size_t node2 = aig3table[229].make_or(node0, false, node1, false);
    size_t node3 = aig3table[229].make_literal(0, false);
    size_t node4 = aig3table[229].make_literal(2, true);
    size_t node5 = aig3table[229].make_literal(1, false);
    size_t node6 = aig3table[229].make_or(node4, false, node5, false);
    size_t node7 = aig3table[229].make_or(node3, false, node6, false);
    size_t node8 = aig3table[229].make_and(node2, false, node7, false);
    aig3table[229].set_root(node8);
  }
  {
    size_t node0 = aig3table[230].make_literal(0, false);
    size_t node1 = aig3table[230].make_literal(1, false);
    size_t node2 = aig3table[230].make_or(node0, false, node1, false);
    size_t node3 = aig3table[230].make_literal(0, true);
    size_t node4 = aig3table[230].make_literal(1, true);
    size_t node5 = aig3table[230].make_literal(2, false);
    size_t node6 = aig3table[230].make_or(node4, false, node5, false);
    size_t node7 = aig3table[230].make_or(node3, false, node6, false);
    size_t node8 = aig3table[230].make_and(node2, false, node7, false);
    aig3table[230].set_root(node8);
  }
  {
    size_t node0 = aig3table[231].make_literal(0, false);
    size_t node1 = aig3table[231].make_literal(1, false);
    size_t node2 = aig3table[231].make_literal(2, true);
    size_t node3 = aig3table[231].make_or(node1, false, node2, false);
    size_t node4 = aig3table[231].make_or(node0, false, node3, false);
    size_t node5 = aig3table[231].make_literal(0, true);
    size_t node6 = aig3table[231].make_literal(1, true);
    size_t node7 = aig3table[231].make_literal(2, false);
    size_t node8 = aig3table[231].make_or(node6, false, node7, false);
    size_t node9 = aig3table[231].make_or(node5, false, node8, false);
    size_t node10 = aig3table[231].make_and(node4, false, node9, false);
    aig3table[231].set_root(node10);
  }
  {
    size_t node0 = aig3table[232].make_literal(0, false);
    size_t node1 = aig3table[232].make_literal(1, false);
    size_t node2 = aig3table[232].make_and(node0, false, node1, false);
    size_t node3 = aig3table[232].make_literal(2, false);
    size_t node4 = aig3table[232].make_or(node0, false, node1, false);
    size_t node5 = aig3table[232].make_and(node3, false, node4, false);
    size_t node6 = aig3table[232].make_or(node2, false, node5, false);
    aig3table[232].set_root(node6);
  }
  {
    size_t node0 = aig3table[233].make_literal(0, false);
    size_t node1 = aig3table[233].make_literal(1, false);
    size_t node2 = aig3table[233].make_literal(2, true);
    size_t node3 = aig3table[233].make_or(node1, false, node2, false);
    size_t node4 = aig3table[233].make_or(node0, false, node3, false);
    size_t node5 = aig3table[233].make_literal(2, false);
    size_t node6 = aig3table[233].make_xor(node0, true, node1, false);
    size_t node7 = aig3table[233].make_or(node5, false, node6, false);
    size_t node8 = aig3table[233].make_and(node4, false, node7, false);
    aig3table[233].set_root(node8);
  }
  {
    size_t node0 = aig3table[234].make_literal(0, false);
    size_t node1 = aig3table[234].make_literal(1, false);
    size_t node2 = aig3table[234].make_literal(2, false);
    size_t node3 = aig3table[234].make_and(node1, false, node2, false);
    size_t node4 = aig3table[234].make_or(node0, false, node3, false);
    aig3table[234].set_root(node4);
  }
  {
    size_t node0 = aig3table[235].make_literal(0, false);
    size_t node1 = aig3table[235].make_literal(1, true);
    size_t node2 = aig3table[235].make_literal(2, true);
    size_t node3 = aig3table[235].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[235].make_or(node0, false, node3, false);
    aig3table[235].set_root(node4);
  }
  {
    size_t node0 = aig3table[236].make_literal(1, false);
    size_t node1 = aig3table[236].make_literal(0, false);
    size_t node2 = aig3table[236].make_literal(2, false);
    size_t node3 = aig3table[236].make_and(node1, false, node2, false);
    size_t node4 = aig3table[236].make_or(node0, false, node3, false);
    aig3table[236].set_root(node4);
  }
  {
    size_t node0 = aig3table[237].make_literal(1, false);
    size_t node1 = aig3table[237].make_literal(0, true);
    size_t node2 = aig3table[237].make_literal(2, true);
    size_t node3 = aig3table[237].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[237].make_or(node0, false, node3, false);
    aig3table[237].set_root(node4);
  }
  {
    size_t node0 = aig3table[238].make_literal(0, false);
    size_t node1 = aig3table[238].make_literal(1, false);
    size_t node2 = aig3table[238].make_or(node0, false, node1, false);
    aig3table[238].set_root(node2);
  }
  {
    size_t node0 = aig3table[239].make_literal(0, false);
    size_t node1 = aig3table[239].make_literal(1, false);
    size_t node2 = aig3table[239].make_literal(2, true);
    size_t node3 = aig3table[239].make_or(node1, false, node2, false);
    size_t node4 = aig3table[239].make_or(node0, false, node3, false);
    aig3table[239].set_root(node4);
  }
  {
    size_t node0 = aig3table[240].make_literal(2, false);
    aig3table[240].set_root(node0);
  }
  {
    size_t node0 = aig3table[241].make_literal(2, false);
    size_t node1 = aig3table[241].make_literal(0, true);
    size_t node2 = aig3table[241].make_literal(1, true);
    size_t node3 = aig3table[241].make_and(node1, false, node2, false);
    size_t node4 = aig3table[241].make_or(node0, false, node3, false);
    aig3table[241].set_root(node4);
  }
  {
    size_t node0 = aig3table[242].make_literal(2, false);
    size_t node1 = aig3table[242].make_literal(0, false);
    size_t node2 = aig3table[242].make_literal(1, true);
    size_t node3 = aig3table[242].make_and(node1, false, node2, false);
    size_t node4 = aig3table[242].make_or(node0, false, node3, false);
    aig3table[242].set_root(node4);
  }
  {
    size_t node0 = aig3table[243].make_literal(1, true);
    size_t node1 = aig3table[243].make_literal(2, false);
    size_t node2 = aig3table[243].make_or(node0, false, node1, false);
    aig3table[243].set_root(node2);
  }
  {
    size_t node0 = aig3table[244].make_literal(2, false);
    size_t node1 = aig3table[244].make_literal(0, true);
    size_t node2 = aig3table[244].make_literal(1, false);
    size_t node3 = aig3table[244].make_and(node1, false, node2, false);
    size_t node4 = aig3table[244].make_or(node0, false, node3, false);
    aig3table[244].set_root(node4);
  }
  {
    size_t node0 = aig3table[245].make_literal(0, true);
    size_t node1 = aig3table[245].make_literal(2, false);
    size_t node2 = aig3table[245].make_or(node0, false, node1, false);
    aig3table[245].set_root(node2);
  }
  {
    size_t node0 = aig3table[246].make_literal(2, false);
    size_t node1 = aig3table[246].make_literal(0, false);
    size_t node2 = aig3table[246].make_literal(1, true);
    size_t node3 = aig3table[246].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[246].make_or(node0, false, node3, false);
    aig3table[246].set_root(node4);
  }
  {
    size_t node0 = aig3table[247].make_literal(0, true);
    size_t node1 = aig3table[247].make_literal(1, true);
    size_t node2 = aig3table[247].make_literal(2, false);
    size_t node3 = aig3table[247].make_or(node1, false, node2, false);
    size_t node4 = aig3table[247].make_or(node0, false, node3, false);
    aig3table[247].set_root(node4);
  }
  {
    size_t node0 = aig3table[248].make_literal(2, false);
    size_t node1 = aig3table[248].make_literal(0, false);
    size_t node2 = aig3table[248].make_literal(1, false);
    size_t node3 = aig3table[248].make_and(node1, false, node2, false);
    size_t node4 = aig3table[248].make_or(node0, false, node3, false);
    aig3table[248].set_root(node4);
  }
  {
    size_t node0 = aig3table[249].make_literal(2, false);
    size_t node1 = aig3table[249].make_literal(0, true);
    size_t node2 = aig3table[249].make_literal(1, true);
    size_t node3 = aig3table[249].make_xor(node1, true, node2, false);
    size_t node4 = aig3table[249].make_or(node0, false, node3, false);
    aig3table[249].set_root(node4);
  }
  {
    size_t node0 = aig3table[250].make_literal(0, false);
    size_t node1 = aig3table[250].make_literal(2, false);
    size_t node2 = aig3table[250].make_or(node0, false, node1, false);
    aig3table[250].set_root(node2);
  }
  {
    size_t node0 = aig3table[251].make_literal(0, false);
    size_t node1 = aig3table[251].make_literal(1, true);
    size_t node2 = aig3table[251].make_literal(2, false);
    size_t node3 = aig3table[251].make_or(node1, false, node2, false);
    size_t node4 = aig3table[251].make_or(node0, false, node3, false);
    aig3table[251].set_root(node4);
  }
  {
    size_t node0 = aig3table[252].make_literal(1, false);
    size_t node1 = aig3table[252].make_literal(2, false);
    size_t node2 = aig3table[252].make_or(node0, false, node1, false);
    aig3table[252].set_root(node2);
  }
  {
    size_t node0 = aig3table[253].make_literal(0, true);
    size_t node1 = aig3table[253].make_literal(1, false);
    size_t node2 = aig3table[253].make_literal(2, false);
    size_t node3 = aig3table[253].make_or(node1, false, node2, false);
    size_t node4 = aig3table[253].make_or(node0, false, node3, false);
    aig3table[253].set_root(node4);
  }
  {
    size_t node0 = aig3table[254].make_literal(0, false);
    size_t node1 = aig3table[254].make_literal(1, false);
    size_t node2 = aig3table[254].make_literal(2, false);
    size_t node3 = aig3table[254].make_or(node1, false, node2, false);
    size_t node4 = aig3table[254].make_or(node0, false, node3, false);
    aig3table[254].set_root(node4);
  }
  {
    size_t node0 = aig3table[255].make_const1();
    aig3table[255].set_root(node0);
  }
  {
    size_t node0 = aig4table[0].make_const0();
    aig4table[0].set_root(node0);
  }
  {
    size_t node0 = aig4table[1].make_literal(0, false);
    size_t node1 = aig4table[1].make_literal(1, true);
    size_t node2 = aig4table[1].make_literal(2, true);
    size_t node3 = aig4table[1].make_and(node1, false, node2, false);
    size_t node4 = aig4table[1].make_and(node0, false, node3, false);
    size_t node5 = aig4table[1].make_literal(1, false);
    size_t node6 = aig4table[1].make_literal(2, false);
    size_t node7 = aig4table[1].make_literal(3, false);
    size_t node8 = aig4table[1].make_or(node0, false, node7, false);
    size_t node9 = aig4table[1].make_and(node6, false, node8, false);
    size_t node10 = aig4table[1].make_and(node5, false, node9, false);
    size_t node11 = aig4table[1].make_or(node4, false, node10, false);
    aig4table[1].set_root(node11);
  }
  {
    size_t node0 = aig4table[2].make_literal(0, false);
    size_t node1 = aig4table[2].make_literal(1, false);
    size_t node2 = aig4table[2].make_literal(2, false);
    size_t node3 = aig4table[2].make_literal(3, false);
    size_t node4 = aig4table[2].make_or(node2, false, node3, false);
    size_t node5 = aig4table[2].make_and(node1, false, node4, false);
    size_t node6 = aig4table[2].make_and(node0, false, node5, false);
    size_t node7 = aig4table[2].make_or(node0, false, node1, false);
    size_t node8 = aig4table[2].make_and(node3, false, node7, false);
    size_t node9 = aig4table[2].make_and(node2, false, node8, false);
    size_t node10 = aig4table[2].make_or(node6, false, node9, false);
    aig4table[2].set_root(node10);
  }
  {
    size_t node0 = aig4table[3].make_literal(0, false);
    size_t node1 = aig4table[3].make_literal(1, false);
    size_t node2 = aig4table[3].make_literal(3, false);
    size_t node3 = aig4table[3].make_xor(node1, false, node2, false);
    size_t node4 = aig4table[3].make_and(node0, false, node3, false);
    size_t node5 = aig4table[3].make_literal(0, true);
    size_t node6 = aig4table[3].make_literal(2, false);
    size_t node7 = aig4table[3].make_and(node1, false, node6, false);
    size_t node8 = aig4table[3].make_and(node5, false, node7, false);
    size_t node9 = aig4table[3].make_or(node4, false, node8, false);
    aig4table[3].set_root(node9);
  }
  {
    size_t node0 = aig4table[4].make_literal(0, false);
    size_t node1 = aig4table[4].make_literal(1, false);
    size_t node2 = aig4table[4].make_literal(2, true);
    size_t node3 = aig4table[4].make_literal(3, true);
    size_t node4 = aig4table[4].make_and(node2, false, node3, false);
    size_t node5 = aig4table[4].make_and(node1, true, node4, false);
    size_t node6 = aig4table[4].make_and(node0, true, node5, false);
    size_t node7 = aig4table[4].make_and(node1, false, node4, true);
    size_t node8 = aig4table[4].make_and(node0, false, node7, false);
    size_t node9 = aig4table[4].make_or(node6, false, node8, false);
    size_t node10 = aig4table[4].make_literal(2, false);
    size_t node11 = aig4table[4].make_literal(3, false);
    size_t node12 = aig4table[4].make_or(node0, false, node1, false);
    size_t node13 = aig4table[4].make_and(node11, false, node12, false);
    size_t node14 = aig4table[4].make_and(node10, false, node13, false);
    size_t node15 = aig4table[4].make_or(node9, false, node14, false);
    aig4table[4].set_root(node15);
  }
  {
    size_t node0 = aig4table[5].make_literal(0, false);
    size_t node1 = aig4table[5].make_literal(1, false);
    size_t node2 = aig4table[5].make_literal(2, true);
    size_t node3 = aig4table[5].make_literal(3, true);
    size_t node4 = aig4table[5].make_and(node2, false, node3, false);
    size_t node5 = aig4table[5].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[5].make_and(node0, false, node5, false);
    size_t node7 = aig4table[5].make_literal(2, false);
    size_t node8 = aig4table[5].make_literal(3, false);
    size_t node9 = aig4table[5].make_or(node0, false, node1, false);
    size_t node10 = aig4table[5].make_and(node8, false, node9, false);
    size_t node11 = aig4table[5].make_and(node7, false, node10, false);
    size_t node12 = aig4table[5].make_or(node6, false, node11, false);
    aig4table[5].set_root(node12);
  }
  {
    size_t node0 = aig4table[6].make_literal(1, false);
    size_t node1 = aig4table[6].make_literal(2, true);
    size_t node2 = aig4table[6].make_literal(3, true);
    size_t node3 = aig4table[6].make_and(node1, false, node2, false);
    size_t node4 = aig4table[6].make_and(node0, true, node3, false);
    size_t node5 = aig4table[6].make_literal(0, false);
    size_t node6 = aig4table[6].make_and(node3, true, node5, false);
    size_t node7 = aig4table[6].make_and(node0, false, node6, false);
    size_t node8 = aig4table[6].make_or(node4, false, node7, false);
    size_t node9 = aig4table[6].make_literal(2, false);
    size_t node10 = aig4table[6].make_literal(3, false);
    size_t node11 = aig4table[6].make_or(node5, false, node0, false);
    size_t node12 = aig4table[6].make_and(node10, false, node11, false);
    size_t node13 = aig4table[6].make_and(node9, false, node12, false);
    size_t node14 = aig4table[6].make_or(node8, false, node13, false);
    aig4table[6].set_root(node14);
  }
  {
    size_t node0 = aig4table[7].make_literal(2, true);
    size_t node1 = aig4table[7].make_literal(3, true);
    size_t node2 = aig4table[7].make_literal(0, false);
    size_t node3 = aig4table[7].make_literal(1, false);
    size_t node4 = aig4table[7].make_or(node2, false, node3, false);
    size_t node5 = aig4table[7].make_and(node1, false, node4, false);
    size_t node6 = aig4table[7].make_and(node0, false, node5, false);
    size_t node7 = aig4table[7].make_and(node2, false, node3, false);
    size_t node8 = aig4table[7].make_literal(2, false);
    size_t node9 = aig4table[7].make_literal(3, false);
    size_t node10 = aig4table[7].make_and(node8, false, node9, false);
    size_t node11 = aig4table[7].make_and(node10, false, node4, false);
    size_t node12 = aig4table[7].make_or(node7, false, node11, false);
    size_t node13 = aig4table[7].make_xor(node6, false, node12, false);
    aig4table[7].set_root(node13);
  }
  {
    size_t node0 = aig4table[8].make_literal(0, false);
    size_t node1 = aig4table[8].make_literal(1, false);
    size_t node2 = aig4table[8].make_or(node0, false, node1, false);
    size_t node3 = aig4table[8].make_literal(2, false);
    size_t node4 = aig4table[8].make_literal(3, false);
    size_t node5 = aig4table[8].make_or(node3, false, node4, false);
    size_t node6 = aig4table[8].make_and(node2, false, node5, false);
    size_t node7 = aig4table[8].make_literal(2, true);
    size_t node8 = aig4table[8].make_literal(3, true);
    size_t node9 = aig4table[8].make_and(node0, false, node1, false);
    size_t node10 = aig4table[8].make_or(node8, false, node9, false);
    size_t node11 = aig4table[8].make_or(node7, false, node10, false);
    size_t node12 = aig4table[8].make_and(node6, false, node11, false);
    aig4table[8].set_root(node12);
  }
  {
    size_t node0 = aig4table[9].make_literal(0, false);
    size_t node1 = aig4table[9].make_literal(2, true);
    size_t node2 = aig4table[9].make_literal(1, false);
    size_t node3 = aig4table[9].make_literal(3, false);
    size_t node4 = aig4table[9].make_or(node2, false, node3, false);
    size_t node5 = aig4table[9].make_and(node1, false, node4, false);
    size_t node6 = aig4table[9].make_and(node0, false, node5, false);
    size_t node7 = aig4table[9].make_literal(2, false);
    size_t node8 = aig4table[9].make_xor(node0, false, node2, false);
    size_t node9 = aig4table[9].make_and(node7, false, node8, false);
    size_t node10 = aig4table[9].make_or(node6, false, node9, false);
    aig4table[9].set_root(node10);
  }
  {
    size_t node0 = aig4table[10].make_literal(0, false);
    size_t node1 = aig4table[10].make_literal(1, false);
    size_t node2 = aig4table[10].make_literal(2, false);
    size_t node3 = aig4table[10].make_literal(3, false);
    size_t node4 = aig4table[10].make_and(node2, false, node3, false);
    size_t node5 = aig4table[10].make_and(node0, false, node1, false);
    size_t node6 = aig4table[10].make_or(node0, false, node1, false);
    size_t node7 = aig4table[10].make_and(node4, false, node6, false);
    size_t node8 = aig4table[10].make_or(node5, false, node7, false);
    aig4table[10].set_root(node8);
  }
  {
    size_t node0 = aig4table[11].make_literal(2, false);
    size_t node1 = aig4table[11].make_literal(3, false);
    size_t node2 = aig4table[11].make_literal(0, true);
    size_t node3 = aig4table[11].make_literal(1, true);
    size_t node4 = aig4table[11].make_and(node2, false, node3, false);
    size_t node5 = aig4table[11].make_and(node1, true, node4, false);
    size_t node6 = aig4table[11].make_and(node0, true, node5, false);
    size_t node7 = aig4table[11].make_and(node1, false, node4, true);
    size_t node8 = aig4table[11].make_and(node0, false, node7, false);
    size_t node9 = aig4table[11].make_or(node6, false, node8, false);
    size_t node10 = aig4table[11].make_literal(0, false);
    size_t node11 = aig4table[11].make_literal(1, false);
    size_t node12 = aig4table[11].make_and(node10, false, node11, false);
    size_t node13 = aig4table[11].make_or(node9, false, node12, false);
    aig4table[11].set_root(node13);
  }
  {
    size_t node0 = aig4table[12].make_literal(0, false);
    size_t node1 = aig4table[12].make_literal(1, false);
    size_t node2 = aig4table[12].make_literal(2, false);
    size_t node3 = aig4table[12].make_and(node1, false, node2, false);
    size_t node4 = aig4table[12].make_xor(node0, false, node3, false);
    aig4table[12].set_root(node4);
  }
  {
    size_t node0 = aig4table[13].make_literal(0, false);
    size_t node1 = aig4table[13].make_literal(3, false);
    size_t node2 = aig4table[13].make_literal(1, false);
    size_t node3 = aig4table[13].make_literal(2, false);
    size_t node4 = aig4table[13].make_or(node2, false, node3, false);
    size_t node5 = aig4table[13].make_and(node1, false, node4, false);
    size_t node6 = aig4table[13].make_xor(node0, false, node5, false);
    aig4table[13].set_root(node6);
  }
  {
    size_t node0 = aig4table[14].make_literal(0, false);
    size_t node1 = aig4table[14].make_literal(1, false);
    size_t node2 = aig4table[14].make_literal(2, true);
    size_t node3 = aig4table[14].make_literal(3, true);
    size_t node4 = aig4table[14].make_and(node2, false, node3, false);
    size_t node5 = aig4table[14].make_or(node1, false, node4, false);
    size_t node6 = aig4table[14].make_and(node0, false, node5, false);
    size_t node7 = aig4table[14].make_literal(2, false);
    size_t node8 = aig4table[14].make_literal(3, false);
    size_t node9 = aig4table[14].make_or(node0, false, node1, false);
    size_t node10 = aig4table[14].make_and(node8, false, node9, false);
    size_t node11 = aig4table[14].make_and(node7, false, node10, false);
    size_t node12 = aig4table[14].make_or(node6, false, node11, false);
    aig4table[14].set_root(node12);
  }
  {
    size_t node0 = aig4table[15].make_literal(0, false);
    size_t node1 = aig4table[15].make_literal(1, false);
    size_t node2 = aig4table[15].make_literal(2, false);
    size_t node3 = aig4table[15].make_literal(3, false);
    size_t node4 = aig4table[15].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[15].make_and(node0, false, node1, false);
    size_t node6 = aig4table[15].make_or(node0, false, node1, false);
    size_t node7 = aig4table[15].make_and(node4, false, node6, false);
    size_t node8 = aig4table[15].make_or(node5, false, node7, false);
    aig4table[15].set_root(node8);
  }
  {
    size_t node0 = aig4table[16].make_literal(0, false);
    size_t node1 = aig4table[16].make_literal(1, false);
    size_t node2 = aig4table[16].make_and(node0, false, node1, false);
    size_t node3 = aig4table[16].make_literal(2, false);
    size_t node4 = aig4table[16].make_literal(3, true);
    size_t node5 = aig4table[16].make_and(node0, false, node4, false);
    size_t node6 = aig4table[16].make_literal(3, false);
    size_t node7 = aig4table[16].make_and(node1, false, node6, false);
    size_t node8 = aig4table[16].make_or(node5, false, node7, false);
    size_t node9 = aig4table[16].make_and(node3, false, node8, false);
    size_t node10 = aig4table[16].make_or(node2, false, node9, false);
    aig4table[16].set_root(node10);
  }
  {
    size_t node0 = aig4table[17].make_literal(0, false);
    size_t node1 = aig4table[17].make_literal(1, false);
    size_t node2 = aig4table[17].make_and(node0, false, node1, false);
    size_t node3 = aig4table[17].make_literal(2, false);
    size_t node4 = aig4table[17].make_literal(3, false);
    size_t node5 = aig4table[17].make_literal(0, true);
    size_t node6 = aig4table[17].make_literal(1, true);
    size_t node7 = aig4table[17].make_and(node5, false, node6, false);
    size_t node8 = aig4table[17].make_xor(node4, false, node7, false);
    size_t node9 = aig4table[17].make_and(node3, false, node8, false);
    size_t node10 = aig4table[17].make_or(node2, false, node9, false);
    aig4table[17].set_root(node10);
  }
  {
    size_t node0 = aig4table[18].make_literal(0, false);
    size_t node1 = aig4table[18].make_literal(1, false);
    size_t node2 = aig4table[18].make_literal(2, false);
    size_t node3 = aig4table[18].make_literal(3, false);
    size_t node4 = aig4table[18].make_or(node2, false, node3, false);
    size_t node5 = aig4table[18].make_or(node1, false, node4, false);
    size_t node6 = aig4table[18].make_literal(1, true);
    size_t node7 = aig4table[18].make_literal(2, true);
    size_t node8 = aig4table[18].make_literal(3, true);
    size_t node9 = aig4table[18].make_or(node7, false, node8, false);
    size_t node10 = aig4table[18].make_or(node6, false, node9, false);
    size_t node11 = aig4table[18].make_and(node5, false, node10, false);
    size_t node12 = aig4table[18].make_and(node0, false, node11, false);
    aig4table[18].set_root(node12);
  }
  {
    size_t node0 = aig4table[19].make_literal(0, false);
    size_t node1 = aig4table[19].make_literal(1, true);
    size_t node2 = aig4table[19].make_literal(2, false);
    size_t node3 = aig4table[19].make_literal(3, true);
    size_t node4 = aig4table[19].make_or(node2, false, node3, false);
    size_t node5 = aig4table[19].make_and(node1, false, node4, false);
    size_t node6 = aig4table[19].make_and(node0, false, node5, false);
    size_t node7 = aig4table[19].make_literal(2, true);
    size_t node8 = aig4table[19].make_literal(0, true);
    size_t node9 = aig4table[19].make_literal(3, false);
    size_t node10 = aig4table[19].make_and(node8, false, node9, false);
    size_t node11 = aig4table[19].make_and(node7, true, node10, false);
    size_t node12 = aig4table[19].make_literal(1, false);
    size_t node13 = aig4table[19].make_and(node10, true, node12, false);
    size_t node14 = aig4table[19].make_and(node7, false, node13, false);
    size_t node15 = aig4table[19].make_or(node11, false, node14, false);
    size_t node16 = aig4table[19].make_or(node6, false, node15, false);
    aig4table[19].set_root(node16);
  }
  {
    size_t node0 = aig4table[20].make_literal(0, false);
    size_t node1 = aig4table[20].make_literal(1, false);
    size_t node2 = aig4table[20].make_literal(3, true);
    size_t node3 = aig4table[20].make_and(node1, false, node2, false);
    size_t node4 = aig4table[20].make_literal(2, true);
    size_t node5 = aig4table[20].make_literal(3, false);
    size_t node6 = aig4table[20].make_and(node4, false, node5, false);
    size_t node7 = aig4table[20].make_or(node3, false, node6, false);
    size_t node8 = aig4table[20].make_and(node0, false, node7, false);
    size_t node9 = aig4table[20].make_literal(0, true);
    size_t node10 = aig4table[20].make_literal(2, false);
    size_t node11 = aig4table[20].make_literal(1, true);
    size_t node12 = aig4table[20].make_xor(node11, false, node5, false);
    size_t node13 = aig4table[20].make_and(node10, false, node12, false);
    size_t node14 = aig4table[20].make_and(node9, false, node13, false);
    size_t node15 = aig4table[20].make_or(node8, false, node14, false);
    aig4table[20].set_root(node15);
  }
  {
    size_t node0 = aig4table[21].make_literal(0, false);
    size_t node1 = aig4table[21].make_literal(1, false);
    size_t node2 = aig4table[21].make_literal(2, true);
    size_t node3 = aig4table[21].make_literal(3, false);
    size_t node4 = aig4table[21].make_or(node2, false, node3, false);
    size_t node5 = aig4table[21].make_and(node1, false, node4, false);
    size_t node6 = aig4table[21].make_and(node0, false, node5, false);
    size_t node7 = aig4table[21].make_literal(0, true);
    size_t node8 = aig4table[21].make_literal(1, true);
    size_t node9 = aig4table[21].make_literal(2, false);
    size_t node10 = aig4table[21].make_and(node8, false, node9, false);
    size_t node11 = aig4table[21].make_and(node7, false, node10, false);
    size_t node12 = aig4table[21].make_or(node6, false, node11, false);
    aig4table[21].set_root(node12);
  }
  {
    size_t node0 = aig4table[22].make_literal(0, false);
    size_t node1 = aig4table[22].make_literal(1, false);
    size_t node2 = aig4table[22].make_or(node0, false, node1, false);
    size_t node3 = aig4table[22].make_literal(2, true);
    size_t node4 = aig4table[22].make_literal(0, true);
    size_t node5 = aig4table[22].make_literal(3, false);
    size_t node6 = aig4table[22].make_or(node4, false, node5, false);
    size_t node7 = aig4table[22].make_literal(1, true);
    size_t node8 = aig4table[22].make_literal(3, true);
    size_t node9 = aig4table[22].make_or(node7, false, node8, false);
    size_t node10 = aig4table[22].make_and(node6, false, node9, false);
    size_t node11 = aig4table[22].make_xor(node3, true, node10, false);
    size_t node12 = aig4table[22].make_and(node2, false, node11, false);
    aig4table[22].set_root(node12);
  }
  {
    size_t node0 = aig4table[23].make_literal(0, false);
    size_t node1 = aig4table[23].make_literal(1, false);
    size_t node2 = aig4table[23].make_literal(2, false);
    size_t node3 = aig4table[23].make_xor(node1, false, node2, false);
    size_t node4 = aig4table[23].make_xor(node0, false, node3, false);
    aig4table[23].set_root(node4);
  }
  {
    size_t node0 = aig4table[24].make_literal(0, false);
    size_t node1 = aig4table[24].make_literal(3, true);
    size_t node2 = aig4table[24].make_literal(1, true);
    size_t node3 = aig4table[24].make_literal(2, true);
    size_t node4 = aig4table[24].make_and(node2, false, node3, false);
    size_t node5 = aig4table[24].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[24].make_and(node0, false, node5, false);
    size_t node7 = aig4table[24].make_literal(1, false);
    size_t node8 = aig4table[24].make_literal(2, false);
    size_t node9 = aig4table[24].make_literal(3, false);
    size_t node10 = aig4table[24].make_and(node8, false, node9, false);
    size_t node11 = aig4table[24].make_and(node7, false, node10, false);
    size_t node12 = aig4table[24].make_or(node6, false, node11, false);
    aig4table[24].set_root(node12);
  }
  {
    size_t node0 = aig4table[25].make_literal(0, false);
    size_t node1 = aig4table[25].make_literal(1, false);
    size_t node2 = aig4table[25].make_and(node0, false, node1, false);
    size_t node3 = aig4table[25].make_literal(2, false);
    size_t node4 = aig4table[25].make_literal(3, false);
    size_t node5 = aig4table[25].make_and(node1, false, node4, false);
    size_t node6 = aig4table[25].make_or(node0, false, node5, false);
    size_t node7 = aig4table[25].make_and(node3, false, node6, false);
    size_t node8 = aig4table[25].make_or(node2, false, node7, false);
    aig4table[25].set_root(node8);
  }
  {
    size_t node0 = aig4table[26].make_literal(0, false);
    size_t node1 = aig4table[26].make_literal(2, false);
    size_t node2 = aig4table[26].make_literal(3, false);
    size_t node3 = aig4table[26].make_or(node1, false, node2, false);
    size_t node4 = aig4table[26].make_or(node0, false, node3, false);
    size_t node5 = aig4table[26].make_literal(3, true);
    size_t node6 = aig4table[26].make_literal(1, true);
    size_t node7 = aig4table[26].make_or(node6, false, node0, false);
    size_t node8 = aig4table[26].make_literal(2, true);
    size_t node9 = aig4table[26].make_literal(0, true);
    size_t node10 = aig4table[26].make_or(node8, false, node9, false);
    size_t node11 = aig4table[26].make_and(node7, false, node10, false);
    size_t node12 = aig4table[26].make_xor(node5, true, node11, false);
    size_t node13 = aig4table[26].make_and(node4, false, node12, false);
    aig4table[26].set_root(node13);
  }
  {
    size_t node0 = aig4table[27].make_literal(1, false);
    size_t node1 = aig4table[27].make_literal(0, true);
    size_t node2 = aig4table[27].make_literal(3, false);
    size_t node3 = aig4table[27].make_and(node1, false, node2, false);
    size_t node4 = aig4table[27].make_or(node0, false, node3, false);
    size_t node5 = aig4table[27].make_literal(0, false);
    size_t node6 = aig4table[27].make_literal(1, true);
    size_t node7 = aig4table[27].make_or(node5, false, node6, false);
    size_t node8 = aig4table[27].make_literal(2, false);
    size_t node9 = aig4table[27].make_literal(3, true);
    size_t node10 = aig4table[27].make_or(node8, false, node9, false);
    size_t node11 = aig4table[27].make_and(node7, false, node10, false);
    size_t node12 = aig4table[27].make_and(node4, false, node11, false);
    aig4table[27].set_root(node12);
  }
  {
    size_t node0 = aig4table[28].make_literal(0, false);
    size_t node1 = aig4table[28].make_literal(1, false);
    size_t node2 = aig4table[28].make_literal(3, true);
    size_t node3 = aig4table[28].make_or(node1, false, node2, false);
    size_t node4 = aig4table[28].make_and(node0, false, node3, false);
    size_t node5 = aig4table[28].make_literal(2, false);
    size_t node6 = aig4table[28].make_literal(3, false);
    size_t node7 = aig4table[28].make_or(node0, false, node1, false);
    size_t node8 = aig4table[28].make_and(node6, false, node7, false);
    size_t node9 = aig4table[28].make_and(node5, false, node8, false);
    size_t node10 = aig4table[28].make_or(node4, false, node9, false);
    aig4table[28].set_root(node10);
  }
  {
    size_t node0 = aig4table[29].make_literal(0, false);
    size_t node1 = aig4table[29].make_literal(1, false);
    size_t node2 = aig4table[29].make_literal(2, false);
    size_t node3 = aig4table[29].make_literal(3, false);
    size_t node4 = aig4table[29].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[29].make_and(node0, false, node4, false);
    size_t node6 = aig4table[29].make_and(node4, true, node1, false);
    size_t node7 = aig4table[29].make_and(node0, true, node6, false);
    size_t node8 = aig4table[29].make_or(node5, false, node7, false);
    aig4table[29].set_root(node8);
  }
  {
    size_t node0 = aig4table[30].make_literal(0, false);
    size_t node1 = aig4table[30].make_literal(2, false);
    size_t node2 = aig4table[30].make_literal(3, false);
    size_t node3 = aig4table[30].make_or(node1, true, node2, true);
    size_t node4 = aig4table[30].make_literal(1, false);
    size_t node5 = aig4table[30].make_or(node2, false, node4, false);
    size_t node6 = aig4table[30].make_or(node1, false, node5, false);
    size_t node7 = aig4table[30].make_and(node3, false, node6, false);
    size_t node8 = aig4table[30].make_and(node0, false, node7, false);
    size_t node9 = aig4table[30].make_and(node7, true, node4, false);
    size_t node10 = aig4table[30].make_and(node0, true, node9, false);
    size_t node11 = aig4table[30].make_or(node8, false, node10, false);
    aig4table[30].set_root(node11);
  }
  {
    size_t node0 = aig4table[31].make_literal(0, false);
    size_t node1 = aig4table[31].make_literal(3, false);
    size_t node2 = aig4table[31].make_literal(1, false);
    size_t node3 = aig4table[31].make_literal(2, false);
    size_t node4 = aig4table[31].make_and(node2, false, node3, false);
    size_t node5 = aig4table[31].make_and(node1, true, node4, false);
    size_t node6 = aig4table[31].make_and(node4, true, node0, false);
    size_t node7 = aig4table[31].make_and(node1, false, node6, false);
    size_t node8 = aig4table[31].make_or(node5, false, node7, false);
    aig4table[31].set_root(node8);
  }
  {
    size_t node0 = aig4table[32].make_literal(0, true);
    size_t node1 = aig4table[32].make_literal(1, false);
    size_t node2 = aig4table[32].make_literal(3, true);
    size_t node3 = aig4table[32].make_and(node1, false, node2, false);
    size_t node4 = aig4table[32].make_and(node0, false, node3, false);
    size_t node5 = aig4table[32].make_literal(0, false);
    size_t node6 = aig4table[32].make_literal(3, false);
    size_t node7 = aig4table[32].make_literal(1, true);
    size_t node8 = aig4table[32].make_literal(2, false);
    size_t node9 = aig4table[32].make_and(node7, false, node8, false);
    size_t node10 = aig4table[32].make_or(node6, false, node9, false);
    size_t node11 = aig4table[32].make_and(node5, false, node10, false);
    size_t node12 = aig4table[32].make_or(node4, false, node11, false);
    aig4table[32].set_root(node12);
  }
  {
    size_t node0 = aig4table[33].make_literal(0, false);
    size_t node1 = aig4table[33].make_literal(1, false);
    size_t node2 = aig4table[33].make_literal(2, false);
    size_t node3 = aig4table[33].make_literal(3, false);
    size_t node4 = aig4table[33].make_and(node2, false, node3, false);
    size_t node5 = aig4table[33].make_and(node1, true, node4, false);
    size_t node6 = aig4table[33].make_and(node0, true, node5, false);
    size_t node7 = aig4table[33].make_and(node1, false, node4, true);
    size_t node8 = aig4table[33].make_and(node0, false, node7, false);
    size_t node9 = aig4table[33].make_or(node6, false, node8, false);
    aig4table[33].set_root(node9);
  }
  {
    size_t node0 = aig4table[34].make_literal(0, false);
    size_t node1 = aig4table[34].make_literal(3, false);
    size_t node2 = aig4table[34].make_literal(1, false);
    size_t node3 = aig4table[34].make_literal(2, false);
    size_t node4 = aig4table[34].make_xor(node2, true, node3, false);
    size_t node5 = aig4table[34].make_and(node1, true, node4, false);
    size_t node6 = aig4table[34].make_and(node0, false, node5, true);
    size_t node7 = aig4table[34].make_and(node5, false, node2, false);
    size_t node8 = aig4table[34].make_and(node0, true, node7, false);
    size_t node9 = aig4table[34].make_or(node6, false, node8, false);
    aig4table[34].set_root(node9);
  }
  {
    size_t node0 = aig4table[35].make_literal(0, false);
    size_t node1 = aig4table[35].make_literal(1, false);
    size_t node2 = aig4table[35].make_literal(3, true);
    size_t node3 = aig4table[35].make_and(node1, false, node2, false);
    size_t node4 = aig4table[35].make_and(node0, false, node3, false);
    size_t node5 = aig4table[35].make_literal(2, false);
    size_t node6 = aig4table[35].make_literal(3, false);
    size_t node7 = aig4table[35].make_and(node6, false, node1, true);
    size_t node8 = aig4table[35].make_xor(node5, true, node7, false);
    size_t node9 = aig4table[35].make_and(node0, false, node8, true);
    size_t node10 = aig4table[35].make_and(node8, false, node6, false);
    size_t node11 = aig4table[35].make_and(node0, true, node10, false);
    size_t node12 = aig4table[35].make_or(node9, false, node11, false);
    size_t node13 = aig4table[35].make_or(node4, false, node12, false);
    aig4table[35].set_root(node13);
  }
  {
    size_t node0 = aig4table[36].make_literal(0, false);
    size_t node1 = aig4table[36].make_literal(3, false);
    size_t node2 = aig4table[36].make_literal(1, false);
    size_t node3 = aig4table[36].make_literal(2, false);
    size_t node4 = aig4table[36].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[36].make_and(node1, false, node4, false);
    size_t node6 = aig4table[36].make_xor(node0, false, node5, false);
    aig4table[36].set_root(node6);
  }
  {
    size_t node0 = aig4table[37].make_literal(0, false);
    size_t node1 = aig4table[37].make_literal(3, false);
    size_t node2 = aig4table[37].make_or(node0, false, node1, false);
    size_t node3 = aig4table[37].make_literal(1, false);
    size_t node4 = aig4table[37].make_literal(2, false);
    size_t node5 = aig4table[37].make_or(node3, false, node4, false);
    size_t node6 = aig4table[37].make_and(node2, false, node5, false);
    size_t node7 = aig4table[37].make_literal(1, true);
    size_t node8 = aig4table[37].make_literal(2, true);
    size_t node9 = aig4table[37].make_or(node7, false, node8, false);
    size_t node10 = aig4table[37].make_or(node0, false, node9, false);
    size_t node11 = aig4table[37].make_and(node6, false, node10, false);
    aig4table[37].set_root(node11);
  }
  {
    size_t node0 = aig4table[38].make_literal(1, false);
    size_t node1 = aig4table[38].make_literal(2, true);
    size_t node2 = aig4table[38].make_literal(3, false);
    size_t node3 = aig4table[38].make_xor(node1, false, node2, false);
    size_t node4 = aig4table[38].make_and(node0, false, node3, false);
    size_t node5 = aig4table[38].make_literal(0, false);
    size_t node6 = aig4table[38].make_literal(2, false);
    size_t node7 = aig4table[38].make_literal(1, true);
    size_t node8 = aig4table[38].make_and(node7, false, node2, false);
    size_t node9 = aig4table[38].make_or(node6, false, node8, false);
    size_t node10 = aig4table[38].make_and(node5, false, node9, false);
    size_t node11 = aig4table[38].make_or(node4, false, node10, false);
    aig4table[38].set_root(node11);
  }
  {
    size_t node0 = aig4table[39].make_literal(0, false);
    size_t node1 = aig4table[39].make_literal(3, true);
    size_t node2 = aig4table[39].make_literal(1, false);
    size_t node3 = aig4table[39].make_literal(2, false);
    size_t node4 = aig4table[39].make_or(node2, false, node3, false);
    size_t node5 = aig4table[39].make_and(node1, false, node4, false);
    size_t node6 = aig4table[39].make_and(node0, false, node5, false);
    size_t node7 = aig4table[39].make_literal(3, false);
    size_t node8 = aig4table[39].make_and(node2, false, node3, false);
    size_t node9 = aig4table[39].make_xor(node0, false, node8, false);
    size_t node10 = aig4table[39].make_and(node7, false, node9, false);
    size_t node11 = aig4table[39].make_or(node6, false, node10, false);
    aig4table[39].set_root(node11);
  }
  {
    size_t node0 = aig4table[40].make_literal(0, false);
    size_t node1 = aig4table[40].make_literal(1, true);
    size_t node2 = aig4table[40].make_literal(2, true);
    size_t node3 = aig4table[40].make_literal(3, true);
    size_t node4 = aig4table[40].make_and(node2, false, node3, false);
    size_t node5 = aig4table[40].make_and(node1, false, node4, false);
    size_t node6 = aig4table[40].make_literal(1, false);
    size_t node7 = aig4table[40].make_literal(2, false);
    size_t node8 = aig4table[40].make_literal(3, false);
    size_t node9 = aig4table[40].make_and(node7, false, node8, false);
    size_t node10 = aig4table[40].make_and(node6, false, node9, false);
    size_t node11 = aig4table[40].make_or(node5, false, node10, false);
    size_t node12 = aig4table[40].make_xor(node0, false, node11, false);
    aig4table[40].set_root(node12);
  }
  {
    size_t node0 = aig4table[41].make_literal(0, false);
    size_t node1 = aig4table[41].make_literal(1, false);
    size_t node2 = aig4table[41].make_literal(2, false);
    size_t node3 = aig4table[41].make_literal(3, false);
    size_t node4 = aig4table[41].make_and(node2, false, node3, false);
    size_t node5 = aig4table[41].make_and(node1, false, node4, false);
    size_t node6 = aig4table[41].make_xor(node0, false, node5, false);
    aig4table[41].set_root(node6);
  }
  {
    size_t node0 = aig4table[42].make_literal(2, false);
    size_t node1 = aig4table[42].make_literal(3, false);
    size_t node2 = aig4table[42].make_literal(0, false);
    size_t node3 = aig4table[42].make_literal(1, false);
    size_t node4 = aig4table[42].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[42].make_xor(node0, false, node1, false);
    size_t node6 = aig4table[42].make_and(node4, false, node5, false);
    aig4table[42].set_root(node6);
  }
  {
    size_t node0 = aig4table[43].make_literal(3, false);
    size_t node1 = aig4table[43].make_literal(0, true);
    size_t node2 = aig4table[43].make_literal(1, true);
    size_t node3 = aig4table[43].make_or(node1, false, node2, false);
    size_t node4 = aig4table[43].make_or(node0, false, node3, true);
    size_t node5 = aig4table[43].make_literal(2, true);
    size_t node6 = aig4table[43].make_or(node5, false, node3, false);
    size_t node7 = aig4table[43].make_and(node4, false, node6, false);
    size_t node8 = aig4table[43].make_literal(3, true);
    size_t node9 = aig4table[43].make_literal(2, false);
    size_t node10 = aig4table[43].make_literal(0, false);
    size_t node11 = aig4table[43].make_literal(1, false);
    size_t node12 = aig4table[43].make_or(node10, false, node11, false);
    size_t node13 = aig4table[43].make_and(node9, false, node12, false);
    size_t node14 = aig4table[43].make_or(node8, false, node13, false);
    size_t node15 = aig4table[43].make_and(node7, false, node14, false);
    aig4table[43].set_root(node15);
  }
  {
    size_t node0 = aig4table[44].make_literal(0, false);
    size_t node1 = aig4table[44].make_literal(2, true);
    size_t node2 = aig4table[44].make_literal(1, true);
    size_t node3 = aig4table[44].make_literal(3, false);
    size_t node4 = aig4table[44].make_or(node2, false, node3, false);
    size_t node5 = aig4table[44].make_and(node1, false, node4, false);
    size_t node6 = aig4table[44].make_and(node0, false, node5, false);
    size_t node7 = aig4table[44].make_literal(1, false);
    size_t node8 = aig4table[44].make_literal(2, false);
    size_t node9 = aig4table[44].make_literal(0, true);
    size_t node10 = aig4table[44].make_literal(3, true);
    size_t node11 = aig4table[44].make_or(node9, false, node10, false);
    size_t node12 = aig4table[44].make_and(node8, false, node11, false);
    size_t node13 = aig4table[44].make_and(node7, false, node12, false);
    size_t node14 = aig4table[44].make_or(node6, false, node13, false);
    aig4table[44].set_root(node14);
  }
  {
    size_t node0 = aig4table[45].make_literal(3, true);
    size_t node1 = aig4table[45].make_literal(0, false);
    size_t node2 = aig4table[45].make_literal(2, false);
    size_t node3 = aig4table[45].make_and(node1, false, node2, false);
    size_t node4 = aig4table[45].make_literal(1, false);
    size_t node5 = aig4table[45].make_literal(2, true);
    size_t node6 = aig4table[45].make_and(node4, false, node5, false);
    size_t node7 = aig4table[45].make_or(node3, false, node6, false);
    size_t node8 = aig4table[45].make_and(node0, false, node7, false);
    size_t node9 = aig4table[45].make_literal(3, false);
    size_t node10 = aig4table[45].make_and(node4, false, node2, false);
    size_t node11 = aig4table[45].make_xor(node1, false, node10, false);
    size_t node12 = aig4table[45].make_and(node9, false, node11, false);
    size_t node13 = aig4table[45].make_or(node8, false, node12, false);
    aig4table[45].set_root(node13);
  }
  {
    size_t node0 = aig4table[46].make_literal(0, false);
    size_t node1 = aig4table[46].make_literal(2, true);
    size_t node2 = aig4table[46].make_literal(1, false);
    size_t node3 = aig4table[46].make_literal(3, false);
    size_t node4 = aig4table[46].make_or(node2, false, node3, false);
    size_t node5 = aig4table[46].make_and(node1, false, node4, false);
    size_t node6 = aig4table[46].make_and(node0, false, node5, false);
    size_t node7 = aig4table[46].make_literal(2, false);
    size_t node8 = aig4table[46].make_literal(3, true);
    size_t node9 = aig4table[46].make_and(node0, false, node8, false);
    size_t node10 = aig4table[46].make_xor(node2, false, node9, false);
    size_t node11 = aig4table[46].make_and(node7, false, node10, false);
    size_t node12 = aig4table[46].make_or(node6, false, node11, false);
    aig4table[46].set_root(node12);
  }
  {
    size_t node0 = aig4table[47].make_literal(1, false);
    size_t node1 = aig4table[47].make_literal(0, false);
    size_t node2 = aig4table[47].make_literal(3, false);
    size_t node3 = aig4table[47].make_and(node1, false, node2, false);
    size_t node4 = aig4table[47].make_literal(2, true);
    size_t node5 = aig4table[47].make_literal(3, true);
    size_t node6 = aig4table[47].make_and(node4, false, node5, false);
    size_t node7 = aig4table[47].make_or(node3, false, node6, false);
    size_t node8 = aig4table[47].make_and(node0, false, node7, false);
    size_t node9 = aig4table[47].make_literal(1, true);
    size_t node10 = aig4table[47].make_literal(2, false);
    size_t node11 = aig4table[47].make_or(node1, false, node2, false);
    size_t node12 = aig4table[47].make_and(node10, false, node11, false);
    size_t node13 = aig4table[47].make_and(node9, false, node12, false);
    size_t node14 = aig4table[47].make_or(node8, false, node13, false);
    aig4table[47].set_root(node14);
  }
  {
    size_t node0 = aig4table[48].make_literal(0, false);
    size_t node1 = aig4table[48].make_literal(2, true);
    size_t node2 = aig4table[48].make_literal(3, true);
    size_t node3 = aig4table[48].make_and(node1, false, node2, false);
    size_t node4 = aig4table[48].make_and(node0, false, node3, false);
    size_t node5 = aig4table[48].make_literal(0, true);
    size_t node6 = aig4table[48].make_literal(1, true);
    size_t node7 = aig4table[48].make_or(node5, false, node6, false);
    size_t node8 = aig4table[48].make_literal(1, false);
    size_t node9 = aig4table[48].make_literal(3, false);
    size_t node10 = aig4table[48].make_or(node8, false, node9, false);
    size_t node11 = aig4table[48].make_literal(2, false);
    size_t node12 = aig4table[48].make_or(node0, false, node11, false);
    size_t node13 = aig4table[48].make_or(node12, false, node9, true);
    size_t node14 = aig4table[48].make_and(node10, false, node13, false);
    size_t node15 = aig4table[48].make_and(node7, false, node14, false);
    size_t node16 = aig4table[48].make_or(node4, false, node15, false);
    aig4table[48].set_root(node16);
  }
  {
    size_t node0 = aig4table[49].make_literal(0, false);
    size_t node1 = aig4table[49].make_literal(1, false);
    size_t node2 = aig4table[49].make_literal(2, false);
    size_t node3 = aig4table[49].make_and(node1, false, node2, false);
    size_t node4 = aig4table[49].make_and(node0, false, node3, false);
    size_t node5 = aig4table[49].make_literal(0, true);
    size_t node6 = aig4table[49].make_literal(1, true);
    size_t node7 = aig4table[49].make_literal(2, true);
    size_t node8 = aig4table[49].make_literal(3, false);
    size_t node9 = aig4table[49].make_and(node7, false, node8, false);
    size_t node10 = aig4table[49].make_and(node6, false, node9, false);
    size_t node11 = aig4table[49].make_and(node5, false, node10, false);
    size_t node12 = aig4table[49].make_or(node4, false, node11, false);
    aig4table[49].set_root(node12);
  }
  {
    size_t node0 = aig4table[50].make_literal(0, true);
    size_t node1 = aig4table[50].make_literal(1, true);
    size_t node2 = aig4table[50].make_literal(2, true);
    size_t node3 = aig4table[50].make_and(node1, false, node2, false);
    size_t node4 = aig4table[50].make_and(node0, false, node3, false);
    size_t node5 = aig4table[50].make_literal(0, false);
    size_t node6 = aig4table[50].make_literal(1, false);
    size_t node7 = aig4table[50].make_literal(2, false);
    size_t node8 = aig4table[50].make_and(node6, false, node7, false);
    size_t node9 = aig4table[50].make_and(node5, false, node8, false);
    size_t node10 = aig4table[50].make_or(node4, false, node9, false);
    aig4table[50].set_root(node10);
  }
  {
    size_t node0 = aig4table[51].make_literal(0, false);
    size_t node1 = aig4table[51].make_literal(1, false);
    size_t node2 = aig4table[51].make_literal(2, false);
    size_t node3 = aig4table[51].make_literal(3, false);
    size_t node4 = aig4table[51].make_and(node2, false, node3, false);
    size_t node5 = aig4table[51].make_and(node1, false, node4, false);
    size_t node6 = aig4table[51].make_and(node0, false, node5, false);
    aig4table[51].set_root(node6);
  }
  {
    size_t node0 = aig4table[52].make_literal(0, true);
    size_t node1 = aig4table[52].make_literal(1, true);
    size_t node2 = aig4table[52].make_literal(2, true);
    size_t node3 = aig4table[52].make_literal(3, true);
    size_t node4 = aig4table[52].make_and(node2, false, node3, false);
    size_t node5 = aig4table[52].make_and(node1, false, node4, false);
    size_t node6 = aig4table[52].make_and(node0, false, node5, false);
    size_t node7 = aig4table[52].make_literal(0, false);
    size_t node8 = aig4table[52].make_literal(1, false);
    size_t node9 = aig4table[52].make_literal(2, false);
    size_t node10 = aig4table[52].make_literal(3, false);
    size_t node11 = aig4table[52].make_and(node9, false, node10, false);
    size_t node12 = aig4table[52].make_and(node8, false, node11, false);
    size_t node13 = aig4table[52].make_and(node7, false, node12, false);
    size_t node14 = aig4table[52].make_or(node6, false, node13, false);
    aig4table[52].set_root(node14);
  }
  {
    size_t node0 = aig4table[53].make_literal(0, false);
    size_t node1 = aig4table[53].make_literal(1, true);
    size_t node2 = aig4table[53].make_literal(2, true);
    size_t node3 = aig4table[53].make_literal(3, true);
    size_t node4 = aig4table[53].make_and(node2, false, node3, false);
    size_t node5 = aig4table[53].make_and(node1, false, node4, false);
    size_t node6 = aig4table[53].make_literal(1, false);
    size_t node7 = aig4table[53].make_literal(2, false);
    size_t node8 = aig4table[53].make_literal(3, false);
    size_t node9 = aig4table[53].make_and(node7, false, node8, false);
    size_t node10 = aig4table[53].make_and(node6, false, node9, false);
    size_t node11 = aig4table[53].make_or(node5, false, node10, false);
    size_t node12 = aig4table[53].make_and(node0, false, node11, false);
    aig4table[53].set_root(node12);
  }
  {
    size_t node0 = aig4table[54].make_literal(1, false);
    size_t node1 = aig4table[54].make_literal(0, false);
    size_t node2 = aig4table[54].make_literal(2, true);
    size_t node3 = aig4table[54].make_and(node1, false, node2, false);
    size_t node4 = aig4table[54].make_literal(0, true);
    size_t node5 = aig4table[54].make_literal(2, false);
    size_t node6 = aig4table[54].make_literal(3, true);
    size_t node7 = aig4table[54].make_and(node5, false, node6, false);
    size_t node8 = aig4table[54].make_and(node4, false, node7, false);
    size_t node9 = aig4table[54].make_or(node3, false, node8, false);
    size_t node10 = aig4table[54].make_and(node0, false, node9, false);
    size_t node11 = aig4table[54].make_literal(1, true);
    size_t node12 = aig4table[54].make_and(node1, false, node5, false);
    size_t node13 = aig4table[54].make_literal(3, false);
    size_t node14 = aig4table[54].make_and(node2, false, node13, false);
    size_t node15 = aig4table[54].make_and(node4, false, node14, false);
    size_t node16 = aig4table[54].make_or(node12, false, node15, false);
    size_t node17 = aig4table[54].make_and(node11, false, node16, false);
    size_t node18 = aig4table[54].make_or(node10, false, node17, false);
    aig4table[54].set_root(node18);
  }
  {
    size_t node0 = aig4table[55].make_literal(0, false);
    size_t node1 = aig4table[55].make_literal(1, false);
    size_t node2 = aig4table[55].make_literal(2, false);
    size_t node3 = aig4table[55].make_literal(3, true);
    size_t node4 = aig4table[55].make_xor(node2, true, node3, false);
    size_t node5 = aig4table[55].make_or(node1, false, node4, false);
    size_t node6 = aig4table[55].make_and(node0, false, node5, false);
    aig4table[55].set_root(node6);
  }
  {
    size_t node0 = aig4table[56].make_literal(0, false);
    size_t node1 = aig4table[56].make_literal(1, true);
    size_t node2 = aig4table[56].make_literal(3, false);
    size_t node3 = aig4table[56].make_and(node1, false, node2, false);
    size_t node4 = aig4table[56].make_literal(2, true);
    size_t node5 = aig4table[56].make_literal(3, true);
    size_t node6 = aig4table[56].make_and(node4, false, node5, false);
    size_t node7 = aig4table[56].make_or(node3, false, node6, false);
    size_t node8 = aig4table[56].make_and(node0, false, node7, false);
    size_t node9 = aig4table[56].make_literal(1, false);
    size_t node10 = aig4table[56].make_literal(2, false);
    size_t node11 = aig4table[56].make_and(node9, false, node10, false);
    size_t node12 = aig4table[56].make_or(node8, false, node11, false);
    aig4table[56].set_root(node12);
  }
  {
    size_t node0 = aig4table[57].make_literal(0, false);
    size_t node1 = aig4table[57].make_literal(1, true);
    size_t node2 = aig4table[57].make_literal(2, true);
    size_t node3 = aig4table[57].make_and(node1, false, node2, false);
    size_t node4 = aig4table[57].make_and(node0, false, node3, false);
    size_t node5 = aig4table[57].make_literal(3, false);
    size_t node6 = aig4table[57].make_and(node0, false, node5, false);
    size_t node7 = aig4table[57].make_literal(1, false);
    size_t node8 = aig4table[57].make_literal(2, false);
    size_t node9 = aig4table[57].make_and(node7, false, node8, false);
    size_t node10 = aig4table[57].make_xor(node6, false, node9, false);
    size_t node11 = aig4table[57].make_or(node4, false, node10, false);
    aig4table[57].set_root(node11);
  }
  {
    size_t node0 = aig4table[58].make_literal(1, false);
    size_t node1 = aig4table[58].make_literal(2, false);
    size_t node2 = aig4table[58].make_literal(3, false);
    size_t node3 = aig4table[58].make_or(node1, false, node2, false);
    size_t node4 = aig4table[58].make_or(node0, false, node3, false);
    size_t node5 = aig4table[58].make_literal(0, false);
    size_t node6 = aig4table[58].make_and(node0, false, node1, false);
    size_t node7 = aig4table[58].make_or(node2, false, node6, false);
    size_t node8 = aig4table[58].make_xor(node5, true, node7, false);
    size_t node9 = aig4table[58].make_and(node4, false, node8, false);
    aig4table[58].set_root(node9);
  }
  {
    size_t node0 = aig4table[59].make_literal(1, false);
    size_t node1 = aig4table[59].make_literal(0, false);
    size_t node2 = aig4table[59].make_literal(2, false);
    size_t node3 = aig4table[59].make_xor(node1, false, node2, false);
    size_t node4 = aig4table[59].make_and(node0, false, node3, false);
    size_t node5 = aig4table[59].make_literal(3, false);
    size_t node6 = aig4table[59].make_literal(1, true);
    size_t node7 = aig4table[59].make_and(node6, false, node2, false);
    size_t node8 = aig4table[59].make_or(node5, false, node7, false);
    size_t node9 = aig4table[59].make_and(node1, false, node8, false);
    size_t node10 = aig4table[59].make_or(node4, false, node9, false);
    aig4table[59].set_root(node10);
  }
  {
    size_t node0 = aig4table[60].make_literal(0, false);
    size_t node1 = aig4table[60].make_literal(2, true);
    size_t node2 = aig4table[60].make_literal(3, true);
    size_t node3 = aig4table[60].make_and(node1, false, node2, false);
    size_t node4 = aig4table[60].make_and(node0, false, node3, false);
    size_t node5 = aig4table[60].make_literal(2, false);
    size_t node6 = aig4table[60].make_literal(3, false);
    size_t node7 = aig4table[60].make_and(node5, false, node6, false);
    size_t node8 = aig4table[60].make_and(node0, true, node7, false);
    size_t node9 = aig4table[60].make_literal(1, false);
    size_t node10 = aig4table[60].make_and(node7, true, node9, false);
    size_t node11 = aig4table[60].make_and(node0, false, node10, false);
    size_t node12 = aig4table[60].make_or(node8, false, node11, false);
    size_t node13 = aig4table[60].make_or(node4, false, node12, false);
    aig4table[60].set_root(node13);
  }
  {
    size_t node0 = aig4table[61].make_literal(0, false);
    size_t node1 = aig4table[61].make_literal(1, false);
    size_t node2 = aig4table[61].make_literal(3, true);
    size_t node3 = aig4table[61].make_and(node1, false, node2, false);
    size_t node4 = aig4table[61].make_and(node0, false, node3, false);
    size_t node5 = aig4table[61].make_literal(2, false);
    size_t node6 = aig4table[61].make_and(node1, false, node5, false);
    size_t node7 = aig4table[61].make_and(node0, true, node6, false);
    size_t node8 = aig4table[61].make_literal(3, false);
    size_t node9 = aig4table[61].make_and(node6, true, node8, false);
    size_t node10 = aig4table[61].make_and(node0, false, node9, false);
    size_t node11 = aig4table[61].make_or(node7, false, node10, false);
    size_t node12 = aig4table[61].make_or(node4, false, node11, false);
    aig4table[61].set_root(node12);
  }
  {
    size_t node0 = aig4table[62].make_literal(0, false);
    size_t node1 = aig4table[62].make_literal(1, false);
    size_t node2 = aig4table[62].make_and(node0, false, node1, false);
    size_t node3 = aig4table[62].make_literal(2, false);
    size_t node4 = aig4table[62].make_or(node0, false, node1, false);
    size_t node5 = aig4table[62].make_and(node3, false, node4, false);
    size_t node6 = aig4table[62].make_or(node2, false, node5, false);
    aig4table[62].set_root(node6);
  }
  {
    size_t node0 = aig4table[63].make_literal(0, false);
    size_t node1 = aig4table[63].make_literal(2, true);
    size_t node2 = aig4table[63].make_and(node0, false, node1, false);
    size_t node3 = aig4table[63].make_literal(2, false);
    size_t node4 = aig4table[63].make_literal(1, false);
    size_t node5 = aig4table[63].make_literal(3, false);
    size_t node6 = aig4table[63].make_and(node0, false, node5, false);
    size_t node7 = aig4table[63].make_xor(node4, false, node6, false);
    size_t node8 = aig4table[63].make_and(node3, false, node7, false);
    size_t node9 = aig4table[63].make_or(node2, false, node8, false);
    aig4table[63].set_root(node9);
  }
  {
    size_t node0 = aig4table[64].make_literal(0, false);
    size_t node1 = aig4table[64].make_literal(1, false);
    size_t node2 = aig4table[64].make_literal(2, false);
    size_t node3 = aig4table[64].make_literal(3, false);
    size_t node4 = aig4table[64].make_and(node2, false, node3, true);
    size_t node5 = aig4table[64].make_xor(node1, true, node4, false);
    size_t node6 = aig4table[64].make_and(node0, false, node5, true);
    size_t node7 = aig4table[64].make_and(node5, false, node2, false);
    size_t node8 = aig4table[64].make_and(node0, true, node7, false);
    size_t node9 = aig4table[64].make_or(node6, false, node8, false);
    aig4table[64].set_root(node9);
  }
  {
    size_t node0 = aig4table[65].make_literal(0, false);
    size_t node1 = aig4table[65].make_literal(1, false);
    size_t node2 = aig4table[65].make_literal(2, false);
    size_t node3 = aig4table[65].make_literal(3, false);
    size_t node4 = aig4table[65].make_or(node2, false, node3, false);
    size_t node5 = aig4table[65].make_or(node1, false, node4, false);
    size_t node6 = aig4table[65].make_and(node0, false, node5, false);
    aig4table[65].set_root(node6);
  }
  {
    size_t node0 = aig4table[66].make_literal(2, true);
    size_t node1 = aig4table[66].make_literal(3, true);
    size_t node2 = aig4table[66].make_literal(0, false);
    size_t node3 = aig4table[66].make_literal(1, false);
    size_t node4 = aig4table[66].make_or(node2, false, node3, false);
    size_t node5 = aig4table[66].make_and(node1, false, node4, false);
    size_t node6 = aig4table[66].make_and(node0, false, node5, false);
    size_t node7 = aig4table[66].make_literal(2, false);
    size_t node8 = aig4table[66].make_literal(3, false);
    size_t node9 = aig4table[66].make_and(node2, false, node3, false);
    size_t node10 = aig4table[66].make_or(node8, false, node9, false);
    size_t node11 = aig4table[66].make_and(node7, false, node10, false);
    size_t node12 = aig4table[66].make_or(node6, false, node11, false);
    aig4table[66].set_root(node12);
  }
  {
    size_t node0 = aig4table[67].make_literal(0, false);
    size_t node1 = aig4table[67].make_literal(3, true);
    size_t node2 = aig4table[67].make_literal(1, false);
    size_t node3 = aig4table[67].make_literal(2, false);
    size_t node4 = aig4table[67].make_or(node2, false, node3, false);
    size_t node5 = aig4table[67].make_and(node1, false, node4, false);
    size_t node6 = aig4table[67].make_and(node0, false, node5, false);
    size_t node7 = aig4table[67].make_literal(3, false);
    size_t node8 = aig4table[67].make_and(node7, false, node0, true);
    size_t node9 = aig4table[67].make_xor(node3, true, node8, false);
    size_t node10 = aig4table[67].make_and(node2, false, node9, true);
    size_t node11 = aig4table[67].make_and(node9, false, node7, false);
    size_t node12 = aig4table[67].make_and(node2, true, node11, false);
    size_t node13 = aig4table[67].make_or(node10, false, node12, false);
    size_t node14 = aig4table[67].make_or(node6, false, node13, false);
    aig4table[67].set_root(node14);
  }
  {
    size_t node0 = aig4table[68].make_literal(2, false);
    size_t node1 = aig4table[68].make_literal(3, false);
    size_t node2 = aig4table[68].make_or(node0, false, node1, false);
    size_t node3 = aig4table[68].make_literal(0, false);
    size_t node4 = aig4table[68].make_literal(3, true);
    size_t node5 = aig4table[68].make_or(node3, false, node4, false);
    size_t node6 = aig4table[68].make_literal(1, false);
    size_t node7 = aig4table[68].make_literal(2, true);
    size_t node8 = aig4table[68].make_or(node6, false, node7, false);
    size_t node9 = aig4table[68].make_and(node5, false, node8, false);
    size_t node10 = aig4table[68].make_and(node2, false, node9, false);
    aig4table[68].set_root(node10);
  }
  {
    size_t node0 = aig4table[69].make_literal(0, false);
    aig4table[69].set_root(node0);
  }
  {
    size_t node0 = aig4table[70].make_literal(0, false);
    size_t node1 = aig4table[70].make_literal(1, false);
    size_t node2 = aig4table[70].make_literal(3, false);
    size_t node3 = aig4table[70].make_or(node1, false, node2, false);
    size_t node4 = aig4table[70].make_or(node0, false, node3, false);
    size_t node5 = aig4table[70].make_literal(2, true);
    size_t node6 = aig4table[70].make_literal(3, true);
    size_t node7 = aig4table[70].make_literal(0, true);
    size_t node8 = aig4table[70].make_literal(1, true);
    size_t node9 = aig4table[70].make_or(node7, false, node8, false);
    size_t node10 = aig4table[70].make_xor(node6, true, node9, false);
    size_t node11 = aig4table[70].make_xor(node5, true, node10, false);
    size_t node12 = aig4table[70].make_and(node4, false, node11, false);
    aig4table[70].set_root(node12);
  }
  {
    size_t node0 = aig4table[71].make_literal(2, false);
    size_t node1 = aig4table[71].make_literal(3, false);
    size_t node2 = aig4table[71].make_literal(0, false);
    size_t node3 = aig4table[71].make_literal(1, false);
    size_t node4 = aig4table[71].make_and(node2, false, node3, false);
    size_t node5 = aig4table[71].make_and(node0, false, node1, false);
    size_t node6 = aig4table[71].make_xor(node4, false, node5, false);
    aig4table[71].set_root(node6);
  }
  {
    size_t node0 = aig4table[72].make_literal(0, true);
    size_t node1 = aig4table[72].make_literal(1, true);
    size_t node2 = aig4table[72].make_literal(2, true);
    size_t node3 = aig4table[72].make_literal(3, true);
    size_t node4 = aig4table[72].make_and(node2, false, node3, false);
    size_t node5 = aig4table[72].make_and(node1, false, node4, false);
    size_t node6 = aig4table[72].make_and(node0, false, node5, false);
    size_t node7 = aig4table[72].make_literal(0, false);
    size_t node8 = aig4table[72].make_literal(1, false);
    size_t node9 = aig4table[72].make_and(node7, false, node8, false);
    size_t node10 = aig4table[72].make_literal(2, false);
    size_t node11 = aig4table[72].make_literal(3, false);
    size_t node12 = aig4table[72].make_and(node10, false, node11, false);
    size_t node13 = aig4table[72].make_xor(node9, false, node12, false);
    size_t node14 = aig4table[72].make_or(node6, false, node13, false);
    aig4table[72].set_root(node14);
  }
  {
    size_t node0 = aig4table[73].make_literal(0, false);
    size_t node1 = aig4table[73].make_literal(1, true);
    size_t node2 = aig4table[73].make_literal(2, false);
    size_t node3 = aig4table[73].make_literal(3, true);
    size_t node4 = aig4table[73].make_or(node2, false, node3, false);
    size_t node5 = aig4table[73].make_and(node1, false, node4, false);
    size_t node6 = aig4table[73].make_and(node0, false, node5, false);
    size_t node7 = aig4table[73].make_literal(1, false);
    size_t node8 = aig4table[73].make_literal(0, true);
    size_t node9 = aig4table[73].make_and(node8, false, node2, false);
    size_t node10 = aig4table[73].make_literal(3, false);
    size_t node11 = aig4table[73].make_literal(2, true);
    size_t node12 = aig4table[73].make_and(node10, false, node11, false);
    size_t node13 = aig4table[73].make_or(node9, false, node12, false);
    size_t node14 = aig4table[73].make_and(node7, false, node13, false);
    size_t node15 = aig4table[73].make_or(node6, false, node14, false);
    aig4table[73].set_root(node15);
  }
  {
    size_t node0 = aig4table[74].make_literal(0, false);
    size_t node1 = aig4table[74].make_literal(2, false);
    size_t node2 = aig4table[74].make_literal(1, true);
    size_t node3 = aig4table[74].make_literal(3, false);
    size_t node4 = aig4table[74].make_or(node2, false, node3, false);
    size_t node5 = aig4table[74].make_and(node1, false, node4, false);
    size_t node6 = aig4table[74].make_or(node0, false, node5, false);
    size_t node7 = aig4table[74].make_literal(1, false);
    size_t node8 = aig4table[74].make_literal(0, true);
    size_t node9 = aig4table[74].make_or(node8, false, node3, false);
    size_t node10 = aig4table[74].make_literal(2, true);
    size_t node11 = aig4table[74].make_literal(3, true);
    size_t node12 = aig4table[74].make_or(node10, false, node11, false);
    size_t node13 = aig4table[74].make_and(node9, false, node12, false);
    size_t node14 = aig4table[74].make_or(node7, false, node13, false);
    size_t node15 = aig4table[74].make_and(node6, false, node14, false);
    aig4table[74].set_root(node15);
  }
  {
    size_t node0 = aig4table[75].make_literal(2, false);
    size_t node1 = aig4table[75].make_literal(0, false);
    size_t node2 = aig4table[75].make_literal(1, false);
    size_t node3 = aig4table[75].make_and(node1, false, node2, false);
    size_t node4 = aig4table[75].make_or(node0, false, node3, false);
    size_t node5 = aig4table[75].make_literal(3, true);
    size_t node6 = aig4table[75].make_or(node1, false, node2, false);
    size_t node7 = aig4table[75].make_xor(node5, true, node6, false);
    size_t node8 = aig4table[75].make_and(node4, false, node7, false);
    size_t node9 = aig4table[75].make_literal(2, true);
    size_t node10 = aig4table[75].make_literal(3, false);
    size_t node11 = aig4table[75].make_and(node10, false, node6, false);
    size_t node12 = aig4table[75].make_and(node9, false, node11, false);
    size_t node13 = aig4table[75].make_or(node8, false, node12, false);
    aig4table[75].set_root(node13);
  }
  {
    size_t node0 = aig4table[76].make_literal(2, true);
    size_t node1 = aig4table[76].make_literal(0, false);
    size_t node2 = aig4table[76].make_literal(3, true);
    size_t node3 = aig4table[76].make_and(node1, false, node2, false);
    size_t node4 = aig4table[76].make_literal(1, false);
    size_t node5 = aig4table[76].make_literal(3, false);
    size_t node6 = aig4table[76].make_and(node4, false, node5, false);
    size_t node7 = aig4table[76].make_or(node3, false, node6, false);
    size_t node8 = aig4table[76].make_and(node0, false, node7, false);
    size_t node9 = aig4table[76].make_literal(2, false);
    size_t node10 = aig4table[76].make_xor(node1, false, node4, false);
    size_t node11 = aig4table[76].make_and(node9, false, node10, false);
    size_t node12 = aig4table[76].make_or(node8, false, node11, false);
    aig4table[76].set_root(node12);
  }
  {
    size_t node0 = aig4table[77].make_literal(0, false);
    size_t node1 = aig4table[77].make_literal(3, true);
    size_t node2 = aig4table[77].make_literal(1, false);
    size_t node3 = aig4table[77].make_literal(2, false);
    size_t node4 = aig4table[77].make_or(node2, false, node3, false);
    size_t node5 = aig4table[77].make_and(node1, false, node4, false);
    size_t node6 = aig4table[77].make_and(node0, false, node5, false);
    size_t node7 = aig4table[77].make_and(node2, false, node3, false);
    size_t node8 = aig4table[77].make_and(node0, true, node7, false);
    size_t node9 = aig4table[77].make_literal(3, false);
    size_t node10 = aig4table[77].make_and(node7, true, node9, false);
    size_t node11 = aig4table[77].make_and(node0, false, node10, false);
    size_t node12 = aig4table[77].make_or(node8, false, node11, false);
    size_t node13 = aig4table[77].make_or(node6, false, node12, false);
    aig4table[77].set_root(node13);
  }
  {
    size_t node0 = aig4table[78].make_literal(0, false);
    size_t node1 = aig4table[78].make_literal(1, false);
    size_t node2 = aig4table[78].make_literal(3, false);
    size_t node3 = aig4table[78].make_and(node1, false, node2, false);
    size_t node4 = aig4table[78].make_literal(2, false);
    size_t node5 = aig4table[78].make_literal(3, true);
    size_t node6 = aig4table[78].make_and(node4, false, node5, false);
    size_t node7 = aig4table[78].make_or(node3, false, node6, false);
    size_t node8 = aig4table[78].make_xor(node0, false, node7, false);
    aig4table[78].set_root(node8);
  }
  {
    size_t node0 = aig4table[79].make_literal(0, false);
    size_t node1 = aig4table[79].make_literal(2, true);
    size_t node2 = aig4table[79].make_literal(3, true);
    size_t node3 = aig4table[79].make_xor(node1, true, node2, false);
    size_t node4 = aig4table[79].make_or(node0, false, node3, false);
    size_t node5 = aig4table[79].make_literal(1, false);
    size_t node6 = aig4table[79].make_or(node5, false, node3, true);
    size_t node7 = aig4table[79].make_and(node4, false, node6, false);
    size_t node8 = aig4table[79].make_literal(0, true);
    size_t node9 = aig4table[79].make_literal(2, false);
    size_t node10 = aig4table[79].make_literal(3, false);
    size_t node11 = aig4table[79].make_or(node9, false, node10, false);
    size_t node12 = aig4table[79].make_or(node8, false, node11, false);
    size_t node13 = aig4table[79].make_and(node7, false, node12, false);
    aig4table[79].set_root(node13);
  }
  {
    size_t node0 = aig4table[80].make_literal(0, false);
    size_t node1 = aig4table[80].make_literal(2, false);
    size_t node2 = aig4table[80].make_literal(1, false);
    size_t node3 = aig4table[80].make_literal(3, false);
    size_t node4 = aig4table[80].make_or(node2, true, node3, false);
    size_t node5 = aig4table[80].make_and(node1, true, node4, false);
    size_t node6 = aig4table[80].make_and(node0, false, node5, true);
    size_t node7 = aig4table[80].make_and(node5, false, node2, false);
    size_t node8 = aig4table[80].make_and(node0, true, node7, false);
    size_t node9 = aig4table[80].make_or(node6, false, node8, false);
    aig4table[80].set_root(node9);
  }
  {
    size_t node0 = aig4table[81].make_literal(1, false);
    size_t node1 = aig4table[81].make_literal(2, false);
    size_t node2 = aig4table[81].make_literal(3, false);
    size_t node3 = aig4table[81].make_or(node1, false, node2, false);
    size_t node4 = aig4table[81].make_or(node0, false, node3, false);
    size_t node5 = aig4table[81].make_literal(0, true);
    size_t node6 = aig4table[81].make_literal(1, true);
    size_t node7 = aig4table[81].make_literal(2, true);
    size_t node8 = aig4table[81].make_xor(node6, true, node7, false);
    size_t node9 = aig4table[81].make_xor(node5, true, node8, false);
    size_t node10 = aig4table[81].make_and(node4, false, node9, false);
    aig4table[81].set_root(node10);
  }
  {
    size_t node0 = aig4table[82].make_literal(0, false);
    size_t node1 = aig4table[82].make_literal(2, false);
    size_t node2 = aig4table[82].make_literal(3, false);
    size_t node3 = aig4table[82].make_or(node1, true, node2, true);
    size_t node4 = aig4table[82].make_literal(1, false);
    size_t node5 = aig4table[82].make_or(node2, false, node4, false);
    size_t node6 = aig4table[82].make_or(node1, false, node5, false);
    size_t node7 = aig4table[82].make_and(node3, false, node6, false);
    size_t node8 = aig4table[82].make_and(node0, false, node7, false);
    size_t node9 = aig4table[82].make_and(node4, false, node7, true);
    size_t node10 = aig4table[82].make_or(node8, false, node9, false);
    aig4table[82].set_root(node10);
  }
  {
    size_t node0 = aig4table[83].make_literal(0, false);
    size_t node1 = aig4table[83].make_literal(3, false);
    size_t node2 = aig4table[83].make_literal(1, false);
    size_t node3 = aig4table[83].make_literal(2, false);
    size_t node4 = aig4table[83].make_and(node2, false, node3, false);
    size_t node5 = aig4table[83].make_and(node0, false, node1, false);
    size_t node6 = aig4table[83].make_and(node4, false, node1, true);
    size_t node7 = aig4table[83].make_or(node5, false, node6, false);
    aig4table[83].set_root(node7);
  }
  {
    size_t node0 = aig4table[84].make_literal(0, false);
    size_t node1 = aig4table[84].make_literal(1, false);
    size_t node2 = aig4table[84].make_literal(2, false);
    size_t node3 = aig4table[84].make_and(node1, false, node2, false);
    size_t node4 = aig4table[84].make_literal(1, true);
    size_t node5 = aig4table[84].make_literal(2, true);
    size_t node6 = aig4table[84].make_literal(3, false);
    size_t node7 = aig4table[84].make_and(node5, false, node6, false);
    size_t node8 = aig4table[84].make_and(node4, false, node7, false);
    size_t node9 = aig4table[84].make_or(node3, false, node8, false);
    size_t node10 = aig4table[84].make_xor(node0, false, node9, false);
    aig4table[84].set_root(node10);
  }
  {
    size_t node0 = aig4table[85].make_literal(0, false);
    size_t node1 = aig4table[85].make_literal(1, false);
    size_t node2 = aig4table[85].make_literal(2, false);
    size_t node3 = aig4table[85].make_literal(3, false);
    size_t node4 = aig4table[85].make_and(node2, false, node3, false);
    size_t node5 = aig4table[85].make_and(node0, false, node4, true);
    size_t node6 = aig4table[85].make_and(node1, false, node4, false);
    size_t node7 = aig4table[85].make_or(node5, false, node6, false);
    aig4table[85].set_root(node7);
  }
  {
    size_t node0 = aig4table[86].make_literal(3, true);
    size_t node1 = aig4table[86].make_literal(1, false);
    size_t node2 = aig4table[86].make_literal(2, false);
    size_t node3 = aig4table[86].make_and(node1, false, node2, false);
    size_t node4 = aig4table[86].make_literal(1, true);
    size_t node5 = aig4table[86].make_literal(2, true);
    size_t node6 = aig4table[86].make_literal(0, true);
    size_t node7 = aig4table[86].make_and(node5, false, node6, false);
    size_t node8 = aig4table[86].make_and(node4, false, node7, false);
    size_t node9 = aig4table[86].make_or(node3, false, node8, false);
    size_t node10 = aig4table[86].make_and(node0, false, node9, false);
    size_t node11 = aig4table[86].make_literal(0, false);
    size_t node12 = aig4table[86].make_literal(3, false);
    size_t node13 = aig4table[86].make_and(node11, false, node12, false);
    size_t node14 = aig4table[86].make_or(node10, false, node13, false);
    aig4table[86].set_root(node14);
  }
  {
    size_t node0 = aig4table[87].make_literal(0, false);
    size_t node1 = aig4table[87].make_literal(3, false);
    size_t node2 = aig4table[87].make_literal(1, true);
    size_t node3 = aig4table[87].make_literal(2, true);
    size_t node4 = aig4table[87].make_and(node2, false, node3, false);
    size_t node5 = aig4table[87].make_or(node1, false, node4, false);
    size_t node6 = aig4table[87].make_and(node0, false, node5, false);
    size_t node7 = aig4table[87].make_literal(1, false);
    size_t node8 = aig4table[87].make_literal(2, false);
    size_t node9 = aig4table[87].make_literal(3, true);
    size_t node10 = aig4table[87].make_and(node8, false, node9, false);
    size_t node11 = aig4table[87].make_and(node7, false, node10, false);
    size_t node12 = aig4table[87].make_or(node6, false, node11, false);
    aig4table[87].set_root(node12);
  }
  {
    size_t node0 = aig4table[88].make_literal(0, false);
    size_t node1 = aig4table[88].make_literal(1, true);
    size_t node2 = aig4table[88].make_literal(2, true);
    size_t node3 = aig4table[88].make_literal(3, true);
    size_t node4 = aig4table[88].make_and(node2, false, node3, false);
    size_t node5 = aig4table[88].make_and(node1, false, node4, false);
    size_t node6 = aig4table[88].make_and(node0, false, node5, false);
    size_t node7 = aig4table[88].make_literal(1, false);
    size_t node8 = aig4table[88].make_literal(2, false);
    size_t node9 = aig4table[88].make_literal(3, false);
    size_t node10 = aig4table[88].make_and(node8, false, node9, false);
    size_t node11 = aig4table[88].make_or(node7, false, node10, false);
    size_t node12 = aig4table[88].make_literal(0, true);
    size_t node13 = aig4table[88].make_or(node1, false, node4, false);
    size_t node14 = aig4table[88].make_xor(node12, true, node13, false);
    size_t node15 = aig4table[88].make_and(node11, false, node14, false);
    size_t node16 = aig4table[88].make_or(node6, false, node15, false);
    aig4table[88].set_root(node16);
  }
  {
    size_t node0 = aig4table[89].make_literal(0, false);
    size_t node1 = aig4table[89].make_literal(1, false);
    size_t node2 = aig4table[89].make_literal(2, false);
    size_t node3 = aig4table[89].make_literal(3, false);
    size_t node4 = aig4table[89].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[89].make_and(node0, false, node4, false);
    size_t node6 = aig4table[89].make_and(node1, false, node4, true);
    size_t node7 = aig4table[89].make_or(node5, false, node6, false);
    aig4table[89].set_root(node7);
  }
  {
    size_t node0 = aig4table[90].make_literal(0, false);
    size_t node1 = aig4table[90].make_literal(2, true);
    size_t node2 = aig4table[90].make_literal(3, true);
    size_t node3 = aig4table[90].make_and(node1, false, node2, false);
    size_t node4 = aig4table[90].make_and(node0, false, node3, false);
    size_t node5 = aig4table[90].make_literal(1, false);
    size_t node6 = aig4table[90].make_literal(2, false);
    size_t node7 = aig4table[90].make_literal(3, false);
    size_t node8 = aig4table[90].make_and(node6, false, node7, false);
    size_t node9 = aig4table[90].make_and(node5, false, node8, false);
    size_t node10 = aig4table[90].make_or(node4, false, node9, false);
    aig4table[90].set_root(node10);
  }
  {
    size_t node0 = aig4table[91].make_literal(0, false);
    size_t node1 = aig4table[91].make_literal(1, false);
    size_t node2 = aig4table[91].make_literal(2, false);
    size_t node3 = aig4table[91].make_literal(3, false);
    size_t node4 = aig4table[91].make_and(node2, false, node3, false);
    size_t node5 = aig4table[91].make_and(node0, false, node1, false);
    size_t node6 = aig4table[91].make_and(node1, true, node4, false);
    size_t node7 = aig4table[91].make_and(node0, true, node6, false);
    size_t node8 = aig4table[91].make_or(node5, false, node7, false);
    aig4table[91].set_root(node8);
  }
  {
    size_t node0 = aig4table[92].make_literal(0, false);
    size_t node1 = aig4table[92].make_literal(1, false);
    size_t node2 = aig4table[92].make_literal(2, true);
    size_t node3 = aig4table[92].make_literal(3, true);
    size_t node4 = aig4table[92].make_and(node2, false, node3, false);
    size_t node5 = aig4table[92].make_or(node1, false, node4, false);
    size_t node6 = aig4table[92].make_and(node0, false, node5, false);
    size_t node7 = aig4table[92].make_literal(0, true);
    size_t node8 = aig4table[92].make_literal(1, true);
    size_t node9 = aig4table[92].make_literal(2, false);
    size_t node10 = aig4table[92].make_literal(3, false);
    size_t node11 = aig4table[92].make_and(node9, false, node10, false);
    size_t node12 = aig4table[92].make_and(node8, false, node11, false);
    size_t node13 = aig4table[92].make_and(node7, false, node12, false);
    size_t node14 = aig4table[92].make_or(node6, false, node13, false);
    aig4table[92].set_root(node14);
  }
  {
    size_t node0 = aig4table[93].make_literal(0, false);
    size_t node1 = aig4table[93].make_literal(1, false);
    size_t node2 = aig4table[93].make_xor(node0, false, node1, false);
    aig4table[93].set_root(node2);
  }
  {
    size_t node0 = aig4table[94].make_literal(0, false);
    size_t node1 = aig4table[94].make_literal(3, false);
    size_t node2 = aig4table[94].make_literal(2, false);
    size_t node3 = aig4table[94].make_or(node1, false, node2, true);
    size_t node4 = aig4table[94].make_and(node0, true, node3, false);
    size_t node5 = aig4table[94].make_literal(1, false);
    size_t node6 = aig4table[94].make_or(node5, false, node1, false);
    size_t node7 = aig4table[94].make_and(node4, true, node6, false);
    aig4table[94].set_root(node7);
  }
  {
    size_t node0 = aig4table[95].make_literal(0, false);
    size_t node1 = aig4table[95].make_literal(1, false);
    size_t node2 = aig4table[95].make_literal(2, false);
    size_t node3 = aig4table[95].make_literal(3, false);
    size_t node4 = aig4table[95].make_or(node2, false, node3, false);
    size_t node5 = aig4table[95].make_and(node1, false, node4, true);
    size_t node6 = aig4table[95].make_and(node0, false, node5, false);
    size_t node7 = aig4table[95].make_xor(node0, false, node1, false);
    size_t node8 = aig4table[95].make_and(node4, false, node7, false);
    size_t node9 = aig4table[95].make_or(node6, false, node8, false);
    aig4table[95].set_root(node9);
  }
  {
    size_t node0 = aig4table[96].make_literal(0, false);
    size_t node1 = aig4table[96].make_literal(3, false);
    size_t node2 = aig4table[96].make_or(node0, false, node1, false);
    size_t node3 = aig4table[96].make_literal(3, true);
    size_t node4 = aig4table[96].make_literal(1, false);
    size_t node5 = aig4table[96].make_or(node3, false, node4, false);
    size_t node6 = aig4table[96].make_literal(0, true);
    size_t node7 = aig4table[96].make_literal(2, false);
    size_t node8 = aig4table[96].make_or(node6, false, node7, false);
    size_t node9 = aig4table[96].make_or(node8, false, node4, true);
    size_t node10 = aig4table[96].make_and(node5, false, node9, false);
    size_t node11 = aig4table[96].make_and(node2, false, node10, false);
    aig4table[96].set_root(node11);
  }
  {
    size_t node0 = aig4table[97].make_literal(2, false);
    size_t node1 = aig4table[97].make_literal(0, true);
    size_t node2 = aig4table[97].make_literal(1, true);
    size_t node3 = aig4table[97].make_xor(node1, true, node2, false);
    size_t node4 = aig4table[97].make_or(node0, false, node3, false);
    size_t node5 = aig4table[97].make_literal(3, false);
    size_t node6 = aig4table[97].make_or(node5, false, node3, true);
    size_t node7 = aig4table[97].make_and(node4, false, node6, false);
    size_t node8 = aig4table[97].make_literal(2, true);
    size_t node9 = aig4table[97].make_literal(3, true);
    size_t node10 = aig4table[97].make_literal(0, false);
    size_t node11 = aig4table[97].make_literal(1, false);
    size_t node12 = aig4table[97].make_and(node10, false, node11, false);
    size_t node13 = aig4table[97].make_or(node9, false, node12, false);
    size_t node14 = aig4table[97].make_or(node8, false, node13, false);
    size_t node15 = aig4table[97].make_and(node7, false, node14, false);
    aig4table[97].set_root(node15);
  }
  {
    size_t node0 = aig4table[98].make_literal(0, false);
    size_t node1 = aig4table[98].make_literal(1, false);
    size_t node2 = aig4table[98].make_and(node0, false, node1, false);
    size_t node3 = aig4table[98].make_literal(0, true);
    size_t node4 = aig4table[98].make_literal(1, true);
    size_t node5 = aig4table[98].make_literal(2, false);
    size_t node6 = aig4table[98].make_and(node4, false, node5, false);
    size_t node7 = aig4table[98].make_and(node3, false, node6, false);
    size_t node8 = aig4table[98].make_or(node2, false, node7, false);
    aig4table[98].set_root(node8);
  }
  {
    size_t node0 = aig4table[99].make_literal(0, false);
    size_t node1 = aig4table[99].make_literal(1, false);
    size_t node2 = aig4table[99].make_literal(2, false);
    size_t node3 = aig4table[99].make_xor(node1, false, node2, false);
    size_t node4 = aig4table[99].make_and(node0, false, node3, false);
    aig4table[99].set_root(node4);
  }
  {
    size_t node0 = aig4table[100].make_literal(0, false);
    size_t node1 = aig4table[100].make_literal(1, false);
    size_t node2 = aig4table[100].make_literal(2, false);
    size_t node3 = aig4table[100].make_or(node1, false, node2, false);
    size_t node4 = aig4table[100].make_and(node0, false, node3, false);
    size_t node5 = aig4table[100].make_literal(3, false);
    size_t node6 = aig4table[100].make_and(node1, false, node2, false);
    size_t node7 = aig4table[100].make_or(node0, false, node6, false);
    size_t node8 = aig4table[100].make_and(node5, false, node7, false);
    size_t node9 = aig4table[100].make_or(node4, false, node8, false);
    aig4table[100].set_root(node9);
  }
  {
    size_t node0 = aig4table[101].make_literal(0, false);
    size_t node1 = aig4table[101].make_literal(1, false);
    size_t node2 = aig4table[101].make_or(node0, false, node1, false);
    size_t node3 = aig4table[101].make_literal(2, false);
    size_t node4 = aig4table[101].make_literal(3, false);
    size_t node5 = aig4table[101].make_and(node3, false, node4, false);
    size_t node6 = aig4table[101].make_literal(0, true);
    size_t node7 = aig4table[101].make_literal(1, true);
    size_t node8 = aig4table[101].make_or(node6, false, node7, false);
    size_t node9 = aig4table[101].make_and(node4, true, node8, false);
    size_t node10 = aig4table[101].make_and(node3, true, node9, false);
    size_t node11 = aig4table[101].make_or(node5, false, node10, false);
    size_t node12 = aig4table[101].make_and(node2, false, node11, false);
    aig4table[101].set_root(node12);
  }
  {
    size_t node0 = aig4table[102].make_literal(0, false);
    size_t node1 = aig4table[102].make_literal(1, false);
    size_t node2 = aig4table[102].make_or(node0, false, node1, false);
    size_t node3 = aig4table[102].make_literal(2, false);
    size_t node4 = aig4table[102].make_literal(3, false);
    size_t node5 = aig4table[102].make_or(node3, false, node4, false);
    size_t node6 = aig4table[102].make_and(node2, false, node5, false);
    size_t node7 = aig4table[102].make_literal(0, true);
    size_t node8 = aig4table[102].make_literal(1, true);
    size_t node9 = aig4table[102].make_or(node7, false, node8, false);
    size_t node10 = aig4table[102].make_literal(2, true);
    size_t node11 = aig4table[102].make_literal(3, true);
    size_t node12 = aig4table[102].make_or(node10, false, node11, false);
    size_t node13 = aig4table[102].make_xor(node9, true, node12, false);
    size_t node14 = aig4table[102].make_and(node6, false, node13, false);
    aig4table[102].set_root(node14);
  }
  {
    size_t node0 = aig4table[103].make_literal(0, false);
    size_t node1 = aig4table[103].make_literal(2, true);
    size_t node2 = aig4table[103].make_literal(1, true);
    size_t node3 = aig4table[103].make_literal(3, false);
    size_t node4 = aig4table[103].make_or(node2, false, node3, false);
    size_t node5 = aig4table[103].make_and(node1, false, node4, false);
    size_t node6 = aig4table[103].make_and(node0, false, node5, false);
    size_t node7 = aig4table[103].make_literal(1, false);
    size_t node8 = aig4table[103].make_literal(2, false);
    size_t node9 = aig4table[103].make_and(node7, false, node8, false);
    size_t node10 = aig4table[103].make_or(node6, false, node9, false);
    aig4table[103].set_root(node10);
  }
  {
    size_t node0 = aig4table[104].make_literal(0, false);
    size_t node1 = aig4table[104].make_literal(1, false);
    size_t node2 = aig4table[104].make_literal(2, true);
    size_t node3 = aig4table[104].make_literal(3, true);
    size_t node4 = aig4table[104].make_and(node2, false, node3, false);
    size_t node5 = aig4table[104].make_and(node1, false, node4, false);
    size_t node6 = aig4table[104].make_and(node0, false, node5, false);
    size_t node7 = aig4table[104].make_literal(2, false);
    size_t node8 = aig4table[104].make_literal(3, false);
    size_t node9 = aig4table[104].make_or(node0, false, node1, false);
    size_t node10 = aig4table[104].make_and(node8, false, node9, false);
    size_t node11 = aig4table[104].make_and(node7, false, node10, false);
    size_t node12 = aig4table[104].make_or(node6, false, node11, false);
    aig4table[104].set_root(node12);
  }
  {
    size_t node0 = aig4table[105].make_literal(2, true);
    size_t node1 = aig4table[105].make_literal(3, true);
    size_t node2 = aig4table[105].make_literal(0, true);
    size_t node3 = aig4table[105].make_literal(1, false);
    size_t node4 = aig4table[105].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[105].make_and(node1, false, node4, false);
    size_t node6 = aig4table[105].make_and(node0, false, node5, false);
    size_t node7 = aig4table[105].make_literal(2, false);
    size_t node8 = aig4table[105].make_literal(3, false);
    size_t node9 = aig4table[105].make_literal(0, false);
    size_t node10 = aig4table[105].make_or(node9, false, node3, false);
    size_t node11 = aig4table[105].make_and(node8, false, node10, false);
    size_t node12 = aig4table[105].make_and(node7, false, node11, false);
    size_t node13 = aig4table[105].make_or(node6, false, node12, false);
    aig4table[105].set_root(node13);
  }
  {
    size_t node0 = aig4table[106].make_literal(0, false);
    size_t node1 = aig4table[106].make_literal(1, true);
    size_t node2 = aig4table[106].make_literal(2, false);
    size_t node3 = aig4table[106].make_literal(3, true);
    size_t node4 = aig4table[106].make_or(node2, false, node3, false);
    size_t node5 = aig4table[106].make_and(node1, false, node4, false);
    size_t node6 = aig4table[106].make_and(node0, false, node5, false);
    size_t node7 = aig4table[106].make_literal(1, false);
    size_t node8 = aig4table[106].make_literal(3, false);
    size_t node9 = aig4table[106].make_literal(0, true);
    size_t node10 = aig4table[106].make_and(node9, false, node2, false);
    size_t node11 = aig4table[106].make_xor(node8, false, node10, false);
    size_t node12 = aig4table[106].make_and(node7, false, node11, false);
    size_t node13 = aig4table[106].make_or(node6, false, node12, false);
    aig4table[106].set_root(node13);
  }
  {
    size_t node0 = aig4table[107].make_literal(0, false);
    size_t node1 = aig4table[107].make_literal(1, false);
    size_t node2 = aig4table[107].make_literal(2, false);
    size_t node3 = aig4table[107].make_literal(3, false);
    size_t node4 = aig4table[107].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[107].make_and(node1, false, node4, true);
    size_t node6 = aig4table[107].make_and(node0, false, node5, false);
    size_t node7 = aig4table[107].make_xor(node0, false, node1, false);
    size_t node8 = aig4table[107].make_and(node4, false, node7, false);
    size_t node9 = aig4table[107].make_or(node6, false, node8, false);
    aig4table[107].set_root(node9);
  }
  {
    size_t node0 = aig4table[108].make_literal(0, false);
    size_t node1 = aig4table[108].make_literal(2, true);
    size_t node2 = aig4table[108].make_and(node0, false, node1, false);
    size_t node3 = aig4table[108].make_literal(1, false);
    size_t node4 = aig4table[108].make_literal(2, false);
    size_t node5 = aig4table[108].make_and(node3, false, node4, false);
    size_t node6 = aig4table[108].make_or(node2, false, node5, false);
    aig4table[108].set_root(node6);
  }
  {
    size_t node0 = aig4table[109].make_literal(1, false);
    size_t node1 = aig4table[109].make_literal(0, false);
    size_t node2 = aig4table[109].make_literal(3, false);
    size_t node3 = aig4table[109].make_xor(node1, false, node2, false);
    size_t node4 = aig4table[109].make_and(node0, false, node3, false);
    size_t node5 = aig4table[109].make_literal(2, false);
    size_t node6 = aig4table[109].make_and(node1, false, node5, false);
    size_t node7 = aig4table[109].make_or(node4, false, node6, false);
    aig4table[109].set_root(node7);
  }
  {
    size_t node0 = aig4table[110].make_literal(0, false);
    size_t node1 = aig4table[110].make_literal(2, false);
    size_t node2 = aig4table[110].make_literal(3, true);
    size_t node3 = aig4table[110].make_or(node1, false, node2, false);
    size_t node4 = aig4table[110].make_and(node0, false, node3, false);
    size_t node5 = aig4table[110].make_literal(0, true);
    size_t node6 = aig4table[110].make_literal(1, false);
    size_t node7 = aig4table[110].make_literal(3, false);
    size_t node8 = aig4table[110].make_and(node6, false, node7, false);
    size_t node9 = aig4table[110].make_and(node5, false, node8, false);
    size_t node10 = aig4table[110].make_or(node4, false, node9, false);
    aig4table[110].set_root(node10);
  }
  {
    size_t node0 = aig4table[111].make_literal(0, false);
    size_t node1 = aig4table[111].make_literal(1, false);
    size_t node2 = aig4table[111].make_literal(2, true);
    size_t node3 = aig4table[111].make_and(node1, false, node2, false);
    size_t node4 = aig4table[111].make_and(node0, false, node3, false);
    size_t node5 = aig4table[111].make_literal(2, false);
    size_t node6 = aig4table[111].make_literal(0, true);
    size_t node7 = aig4table[111].make_literal(3, false);
    size_t node8 = aig4table[111].make_and(node1, false, node7, false);
    size_t node9 = aig4table[111].make_and(node6, false, node8, false);
    size_t node10 = aig4table[111].make_literal(1, true);
    size_t node11 = aig4table[111].make_literal(3, true);
    size_t node12 = aig4table[111].make_and(node10, false, node11, false);
    size_t node13 = aig4table[111].make_and(node0, false, node12, false);
    size_t node14 = aig4table[111].make_or(node9, false, node13, false);
    size_t node15 = aig4table[111].make_and(node5, false, node14, false);
    size_t node16 = aig4table[111].make_or(node4, false, node15, false);
    aig4table[111].set_root(node16);
  }
  {
    size_t node0 = aig4table[112].make_literal(1, false);
    size_t node1 = aig4table[112].make_literal(2, false);
    size_t node2 = aig4table[112].make_literal(3, false);
    size_t node3 = aig4table[112].make_or(node1, false, node2, false);
    size_t node4 = aig4table[112].make_or(node0, false, node3, false);
    size_t node5 = aig4table[112].make_literal(0, false);
    size_t node6 = aig4table[112].make_or(node0, false, node1, false);
    size_t node7 = aig4table[112].make_literal(1, true);
    size_t node8 = aig4table[112].make_literal(2, true);
    size_t node9 = aig4table[112].make_or(node8, false, node2, false);
    size_t node10 = aig4table[112].make_or(node7, false, node9, false);
    size_t node11 = aig4table[112].make_and(node6, false, node10, false);
    size_t node12 = aig4table[112].make_xor(node5, true, node11, false);
    size_t node13 = aig4table[112].make_and(node4, false, node12, false);
    aig4table[112].set_root(node13);
  }
  {
    size_t node0 = aig4table[113].make_literal(0, false);
    size_t node1 = aig4table[113].make_literal(1, false);
    size_t node2 = aig4table[113].make_literal(2, true);
    size_t node3 = aig4table[113].make_literal(3, true);
    size_t node4 = aig4table[113].make_and(node2, false, node3, false);
    size_t node5 = aig4table[113].make_or(node1, false, node4, false);
    size_t node6 = aig4table[113].make_and(node0, false, node5, false);
    size_t node7 = aig4table[113].make_literal(0, true);
    size_t node8 = aig4table[113].make_literal(2, false);
    size_t node9 = aig4table[113].make_literal(3, false);
    size_t node10 = aig4table[113].make_and(node8, false, node9, false);
    size_t node11 = aig4table[113].make_and(node7, false, node10, false);
    size_t node12 = aig4table[113].make_or(node6, false, node11, false);
    aig4table[113].set_root(node12);
  }
  {
    size_t node0 = aig4table[114].make_literal(2, false);
    size_t node1 = aig4table[114].make_literal(0, false);
    size_t node2 = aig4table[114].make_literal(3, false);
    size_t node3 = aig4table[114].make_and(node1, false, node2, true);
    size_t node4 = aig4table[114].make_or(node0, true, node3, false);
    size_t node5 = aig4table[114].make_literal(1, false);
    size_t node6 = aig4table[114].make_and(node5, false, node1, false);
    size_t node7 = aig4table[114].make_or(node4, true, node6, false);
    size_t node8 = aig4table[114].make_literal(2, true);
    size_t node9 = aig4table[114].make_literal(1, true);
    size_t node10 = aig4table[114].make_literal(3, true);
    size_t node11 = aig4table[114].make_or(node1, false, node10, false);
    size_t node12 = aig4table[114].make_xor(node9, true, node11, false);
    size_t node13 = aig4table[114].make_or(node8, false, node12, false);
    size_t node14 = aig4table[114].make_and(node7, false, node13, false);
    aig4table[114].set_root(node14);
  }
  {
    size_t node0 = aig4table[115].make_literal(0, false);
    size_t node1 = aig4table[115].make_literal(1, false);
    size_t node2 = aig4table[115].make_literal(3, false);
    size_t node3 = aig4table[115].make_or(node1, false, node2, false);
    size_t node4 = aig4table[115].make_and(node0, false, node3, false);
    size_t node5 = aig4table[115].make_literal(2, false);
    size_t node6 = aig4table[115].make_and(node1, false, node5, false);
    size_t node7 = aig4table[115].make_or(node4, false, node6, false);
    aig4table[115].set_root(node7);
  }
  {
    size_t node0 = aig4table[116].make_literal(0, false);
    size_t node1 = aig4table[116].make_literal(3, true);
    size_t node2 = aig4table[116].make_literal(1, false);
    size_t node3 = aig4table[116].make_literal(2, false);
    size_t node4 = aig4table[116].make_or(node2, false, node3, false);
    size_t node5 = aig4table[116].make_and(node1, false, node4, false);
    size_t node6 = aig4table[116].make_and(node0, false, node5, false);
    size_t node7 = aig4table[116].make_literal(3, false);
    size_t node8 = aig4table[116].make_literal(1, true);
    size_t node9 = aig4table[116].make_literal(2, true);
    size_t node10 = aig4table[116].make_and(node8, false, node9, false);
    size_t node11 = aig4table[116].make_literal(0, true);
    size_t node12 = aig4table[116].make_and(node3, false, node11, false);
    size_t node13 = aig4table[116].make_and(node2, false, node12, false);
    size_t node14 = aig4table[116].make_or(node10, false, node13, false);
    size_t node15 = aig4table[116].make_and(node7, false, node14, false);
    size_t node16 = aig4table[116].make_or(node6, false, node15, false);
    aig4table[116].set_root(node16);
  }
  {
    size_t node0 = aig4table[117].make_literal(0, false);
    size_t node1 = aig4table[117].make_literal(1, false);
    size_t node2 = aig4table[117].make_literal(3, true);
    size_t node3 = aig4table[117].make_and(node1, false, node2, false);
    size_t node4 = aig4table[117].make_and(node0, false, node3, false);
    size_t node5 = aig4table[117].make_literal(2, false);
    size_t node6 = aig4table[117].make_literal(3, false);
    size_t node7 = aig4table[117].make_xor(node0, false, node1, false);
    size_t node8 = aig4table[117].make_and(node6, false, node7, false);
    size_t node9 = aig4table[117].make_and(node5, false, node8, false);
    size_t node10 = aig4table[117].make_or(node4, false, node9, false);
    aig4table[117].set_root(node10);
  }
  {
    size_t node0 = aig4table[118].make_literal(0, false);
    size_t node1 = aig4table[118].make_literal(3, false);
    size_t node2 = aig4table[118].make_or(node0, false, node1, false);
    size_t node3 = aig4table[118].make_literal(2, false);
    size_t node4 = aig4table[118].make_literal(0, true);
    size_t node5 = aig4table[118].make_literal(1, true);
    size_t node6 = aig4table[118].make_xor(node4, true, node5, false);
    size_t node7 = aig4table[118].make_or(node3, false, node6, false);
    size_t node8 = aig4table[118].make_literal(3, true);
    size_t node9 = aig4table[118].make_or(node6, true, node8, false);
    size_t node10 = aig4table[118].make_or(node3, true, node9, false);
    size_t node11 = aig4table[118].make_and(node7, false, node10, false);
    size_t node12 = aig4table[118].make_and(node2, false, node11, false);
    aig4table[118].set_root(node12);
  }
  {
    size_t node0 = aig4table[119].make_literal(0, false);
    size_t node1 = aig4table[119].make_literal(2, true);
    size_t node2 = aig4table[119].make_literal(1, false);
    size_t node3 = aig4table[119].make_literal(3, false);
    size_t node4 = aig4table[119].make_or(node2, false, node3, false);
    size_t node5 = aig4table[119].make_and(node1, false, node4, false);
    size_t node6 = aig4table[119].make_and(node0, false, node5, false);
    size_t node7 = aig4table[119].make_literal(2, false);
    size_t node8 = aig4table[119].make_literal(3, true);
    size_t node9 = aig4table[119].make_and(node0, false, node8, false);
    size_t node10 = aig4table[119].make_or(node2, false, node9, false);
    size_t node11 = aig4table[119].make_and(node7, false, node10, false);
    size_t node12 = aig4table[119].make_or(node6, false, node11, false);
    aig4table[119].set_root(node12);
  }
  {
    size_t node0 = aig4table[120].make_literal(0, false);
    size_t node1 = aig4table[120].make_literal(1, true);
    size_t node2 = aig4table[120].make_literal(2, true);
    size_t node3 = aig4table[120].make_or(node1, false, node2, false);
    size_t node4 = aig4table[120].make_or(node0, false, node3, true);
    size_t node5 = aig4table[120].make_literal(3, false);
    size_t node6 = aig4table[120].make_or(node5, false, node3, false);
    size_t node7 = aig4table[120].make_and(node4, false, node6, false);
    size_t node8 = aig4table[120].make_literal(0, true);
    size_t node9 = aig4table[120].make_literal(3, true);
    size_t node10 = aig4table[120].make_literal(1, false);
    size_t node11 = aig4table[120].make_literal(2, false);
    size_t node12 = aig4table[120].make_or(node10, false, node11, false);
    size_t node13 = aig4table[120].make_xor(node9, true, node12, false);
    size_t node14 = aig4table[120].make_or(node8, false, node13, false);
    size_t node15 = aig4table[120].make_and(node7, false, node14, false);
    aig4table[120].set_root(node15);
  }
  {
    size_t node0 = aig4table[121].make_literal(0, false);
    size_t node1 = aig4table[121].make_literal(1, false);
    size_t node2 = aig4table[121].make_literal(2, true);
    size_t node3 = aig4table[121].make_and(node1, false, node2, false);
    size_t node4 = aig4table[121].make_and(node0, false, node3, false);
    size_t node5 = aig4table[121].make_literal(2, false);
    size_t node6 = aig4table[121].make_literal(1, true);
    size_t node7 = aig4table[121].make_and(node0, false, node6, false);
    size_t node8 = aig4table[121].make_literal(0, true);
    size_t node9 = aig4table[121].make_literal(3, false);
    size_t node10 = aig4table[121].make_and(node1, false, node9, false);
    size_t node11 = aig4table[121].make_and(node8, false, node10, false);
    size_t node12 = aig4table[121].make_or(node7, false, node11, false);
    size_t node13 = aig4table[121].make_and(node5, false, node12, false);
    size_t node14 = aig4table[121].make_or(node4, false, node13, false);
    aig4table[121].set_root(node14);
  }
  {
    size_t node0 = aig4table[122].make_literal(0, false);
    size_t node1 = aig4table[122].make_literal(2, true);
    size_t node2 = aig4table[122].make_literal(3, true);
    size_t node3 = aig4table[122].make_and(node1, false, node2, false);
    size_t node4 = aig4table[122].make_and(node0, false, node3, false);
    size_t node5 = aig4table[122].make_literal(2, false);
    size_t node6 = aig4table[122].make_literal(3, false);
    size_t node7 = aig4table[122].make_or(node5, false, node6, false);
    size_t node8 = aig4table[122].make_literal(1, true);
    size_t node9 = aig4table[122].make_or(node1, false, node0, false);
    size_t node10 = aig4table[122].make_literal(0, true);
    size_t node11 = aig4table[122].make_or(node2, false, node10, false);
    size_t node12 = aig4table[122].make_and(node9, false, node11, false);
    size_t node13 = aig4table[122].make_xor(node8, true, node12, false);
    size_t node14 = aig4table[122].make_and(node7, false, node13, false);
    size_t node15 = aig4table[122].make_or(node4, false, node14, false);
    aig4table[122].set_root(node15);
  }
  {
    size_t node0 = aig4table[123].make_literal(0, false);
    size_t node1 = aig4table[123].make_literal(1, false);
    size_t node2 = aig4table[123].make_literal(2, false);
    size_t node3 = aig4table[123].make_literal(3, false);
    size_t node4 = aig4table[123].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[123].make_and(node0, false, node1, false);
    size_t node6 = aig4table[123].make_and(node1, true, node4, false);
    size_t node7 = aig4table[123].make_and(node0, true, node6, false);
    size_t node8 = aig4table[123].make_or(node5, false, node7, false);
    aig4table[123].set_root(node8);
  }
  {
    size_t node0 = aig4table[124].make_literal(0, false);
    size_t node1 = aig4table[124].make_literal(2, false);
    size_t node2 = aig4table[124].make_literal(3, false);
    size_t node3 = aig4table[124].make_and(node1, false, node2, false);
    size_t node4 = aig4table[124].make_or(node0, false, node3, false);
    size_t node5 = aig4table[124].make_literal(1, false);
    size_t node6 = aig4table[124].make_literal(0, true);
    size_t node7 = aig4table[124].make_literal(2, true);
    size_t node8 = aig4table[124].make_or(node6, false, node7, false);
    size_t node9 = aig4table[124].make_or(node5, true, node8, false);
    size_t node10 = aig4table[124].make_literal(3, true);
    size_t node11 = aig4table[124].make_or(node8, true, node10, false);
    size_t node12 = aig4table[124].make_or(node5, false, node11, false);
    size_t node13 = aig4table[124].make_and(node9, false, node12, false);
    size_t node14 = aig4table[124].make_and(node4, false, node13, false);
    aig4table[124].set_root(node14);
  }
  {
    size_t node0 = aig4table[125].make_literal(2, false);
    size_t node1 = aig4table[125].make_literal(3, false);
    size_t node2 = aig4table[125].make_literal(0, false);
    size_t node3 = aig4table[125].make_literal(1, false);
    size_t node4 = aig4table[125].make_and(node2, false, node3, false);
    size_t node5 = aig4table[125].make_and(node0, false, node1, false);
    size_t node6 = aig4table[125].make_or(node4, false, node5, false);
    aig4table[125].set_root(node6);
  }
  {
    size_t node0 = aig4table[126].make_literal(0, false);
    size_t node1 = aig4table[126].make_literal(1, true);
    size_t node2 = aig4table[126].make_literal(2, false);
    size_t node3 = aig4table[126].make_literal(3, true);
    size_t node4 = aig4table[126].make_or(node2, false, node3, false);
    size_t node5 = aig4table[126].make_and(node1, false, node4, false);
    size_t node6 = aig4table[126].make_and(node0, false, node5, false);
    size_t node7 = aig4table[126].make_literal(1, false);
    size_t node8 = aig4table[126].make_literal(3, false);
    size_t node9 = aig4table[126].make_literal(0, true);
    size_t node10 = aig4table[126].make_and(node9, false, node2, false);
    size_t node11 = aig4table[126].make_or(node8, false, node10, false);
    size_t node12 = aig4table[126].make_and(node7, false, node11, false);
    size_t node13 = aig4table[126].make_or(node6, false, node12, false);
    aig4table[126].set_root(node13);
  }
  {
    size_t node0 = aig4table[127].make_literal(0, false);
    size_t node1 = aig4table[127].make_literal(1, false);
    size_t node2 = aig4table[127].make_literal(2, false);
    size_t node3 = aig4table[127].make_and(node1, false, node2, false);
    size_t node4 = aig4table[127].make_and(node0, false, node3, false);
    aig4table[127].set_root(node4);
  }
  {
    size_t node0 = aig4table[128].make_literal(0, false);
    size_t node1 = aig4table[128].make_literal(2, true);
    size_t node2 = aig4table[128].make_literal(3, true);
    size_t node3 = aig4table[128].make_and(node1, false, node2, false);
    size_t node4 = aig4table[128].make_and(node0, false, node3, false);
    size_t node5 = aig4table[128].make_literal(2, false);
    size_t node6 = aig4table[128].make_literal(3, false);
    size_t node7 = aig4table[128].make_or(node5, false, node6, false);
    size_t node8 = aig4table[128].make_literal(1, true);
    size_t node9 = aig4table[128].make_or(node1, false, node2, false);
    size_t node10 = aig4table[128].make_or(node0, false, node3, false);
    size_t node11 = aig4table[128].make_and(node9, false, node10, false);
    size_t node12 = aig4table[128].make_xor(node8, true, node11, false);
    size_t node13 = aig4table[128].make_and(node7, false, node12, false);
    size_t node14 = aig4table[128].make_or(node4, false, node13, false);
    aig4table[128].set_root(node14);
  }
  {
    size_t node0 = aig4table[129].make_literal(0, false);
    size_t node1 = aig4table[129].make_literal(1, false);
    size_t node2 = aig4table[129].make_literal(2, false);
    size_t node3 = aig4table[129].make_literal(3, false);
    size_t node4 = aig4table[129].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[129].make_and(node1, false, node4, false);
    size_t node6 = aig4table[129].make_and(node0, false, node5, false);
    aig4table[129].set_root(node6);
  }
  {
    size_t node0 = aig4table[130].make_literal(0, false);
    size_t node1 = aig4table[130].make_literal(1, false);
    size_t node2 = aig4table[130].make_literal(2, true);
    size_t node3 = aig4table[130].make_and(node1, false, node2, false);
    size_t node4 = aig4table[130].make_and(node0, false, node3, false);
    size_t node5 = aig4table[130].make_literal(2, false);
    size_t node6 = aig4table[130].make_literal(0, true);
    size_t node7 = aig4table[130].make_literal(1, true);
    size_t node8 = aig4table[130].make_or(node6, true, node7, true);
    size_t node9 = aig4table[130].make_literal(3, false);
    size_t node10 = aig4table[130].make_or(node7, false, node9, false);
    size_t node11 = aig4table[130].make_or(node6, false, node10, false);
    size_t node12 = aig4table[130].make_and(node8, false, node11, false);
    size_t node13 = aig4table[130].make_and(node5, false, node12, false);
    size_t node14 = aig4table[130].make_and(node12, true, node9, false);
    size_t node15 = aig4table[130].make_and(node5, true, node14, false);
    size_t node16 = aig4table[130].make_or(node13, false, node15, false);
    size_t node17 = aig4table[130].make_or(node4, false, node16, false);
    aig4table[130].set_root(node17);
  }
  {
    size_t node0 = aig4table[131].make_literal(0, false);
    size_t node1 = aig4table[131].make_literal(2, false);
    size_t node2 = aig4table[131].make_or(node0, false, node1, false);
    size_t node3 = aig4table[131].make_literal(1, false);
    size_t node4 = aig4table[131].make_literal(3, false);
    size_t node5 = aig4table[131].make_or(node3, false, node4, false);
    size_t node6 = aig4table[131].make_and(node2, false, node5, false);
    size_t node7 = aig4table[131].make_literal(2, true);
    size_t node8 = aig4table[131].make_literal(3, true);
    size_t node9 = aig4table[131].make_literal(0, true);
    size_t node10 = aig4table[131].make_literal(1, true);
    size_t node11 = aig4table[131].make_and(node9, false, node10, false);
    size_t node12 = aig4table[131].make_or(node8, false, node11, false);
    size_t node13 = aig4table[131].make_or(node7, false, node12, false);
    size_t node14 = aig4table[131].make_and(node6, false, node13, false);
    aig4table[131].set_root(node14);
  }
  {
    size_t node0 = aig4table[132].make_literal(2, true);
    size_t node1 = aig4table[132].make_literal(3, true);
    size_t node2 = aig4table[132].make_literal(0, false);
    size_t node3 = aig4table[132].make_literal(1, false);
    size_t node4 = aig4table[132].make_or(node2, false, node3, false);
    size_t node5 = aig4table[132].make_and(node1, false, node4, false);
    size_t node6 = aig4table[132].make_and(node0, false, node5, false);
    size_t node7 = aig4table[132].make_literal(2, false);
    size_t node8 = aig4table[132].make_literal(3, false);
    size_t node9 = aig4table[132].make_and(node7, false, node8, false);
    size_t node10 = aig4table[132].make_or(node3, true, node9, false);
    size_t node11 = aig4table[132].make_or(node2, true, node10, false);
    size_t node12 = aig4table[132].make_and(node4, false, node11, false);
    size_t node13 = aig4table[132].make_xor(node6, false, node12, false);
    aig4table[132].set_root(node13);
  }
  {
    size_t node0 = aig4table[133].make_literal(3, true);
    size_t node1 = aig4table[133].make_literal(0, false);
    size_t node2 = aig4table[133].make_literal(2, false);
    size_t node3 = aig4table[133].make_and(node1, false, node2, false);
    size_t node4 = aig4table[133].make_literal(1, false);
    size_t node5 = aig4table[133].make_literal(2, true);
    size_t node6 = aig4table[133].make_and(node4, false, node5, false);
    size_t node7 = aig4table[133].make_or(node3, false, node6, false);
    size_t node8 = aig4table[133].make_and(node0, false, node7, false);
    size_t node9 = aig4table[133].make_literal(3, false);
    size_t node10 = aig4table[133].make_literal(1, true);
    size_t node11 = aig4table[133].make_and(node1, false, node10, false);
    size_t node12 = aig4table[133].make_xor(node2, false, node11, false);
    size_t node13 = aig4table[133].make_and(node9, false, node12, false);
    size_t node14 = aig4table[133].make_or(node8, false, node13, false);
    aig4table[133].set_root(node14);
  }
  {
    size_t node0 = aig4table[134].make_literal(0, false);
    size_t node1 = aig4table[134].make_literal(1, false);
    size_t node2 = aig4table[134].make_literal(3, true);
    size_t node3 = aig4table[134].make_and(node1, false, node2, false);
    size_t node4 = aig4table[134].make_literal(2, false);
    size_t node5 = aig4table[134].make_literal(3, false);
    size_t node6 = aig4table[134].make_and(node4, false, node5, false);
    size_t node7 = aig4table[134].make_or(node3, false, node6, false);
    size_t node8 = aig4table[134].make_and(node0, false, node7, false);
    aig4table[134].set_root(node8);
  }
  {
    size_t node0 = aig4table[135].make_literal(0, false);
    size_t node1 = aig4table[135].make_literal(3, false);
    size_t node2 = aig4table[135].make_literal(1, false);
    size_t node3 = aig4table[135].make_literal(2, false);
    size_t node4 = aig4table[135].make_or(node2, false, node3, false);
    size_t node5 = aig4table[135].make_and(node0, false, node4, false);
    size_t node6 = aig4table[135].make_and(node4, true, node1, false);
    size_t node7 = aig4table[135].make_and(node0, true, node6, false);
    size_t node8 = aig4table[135].make_or(node5, false, node7, false);
    aig4table[135].set_root(node8);
  }
  {
    size_t node0 = aig4table[136].make_literal(0, false);
    size_t node1 = aig4table[136].make_literal(1, false);
    size_t node2 = aig4table[136].make_literal(2, false);
    size_t node3 = aig4table[136].make_literal(3, true);
    size_t node4 = aig4table[136].make_and(node2, false, node3, false);
    size_t node5 = aig4table[136].make_and(node1, false, node4, false);
    size_t node6 = aig4table[136].make_literal(3, false);
    size_t node7 = aig4table[136].make_xor(node1, false, node2, false);
    size_t node8 = aig4table[136].make_and(node6, false, node7, false);
    size_t node9 = aig4table[136].make_or(node5, false, node8, false);
    size_t node10 = aig4table[136].make_and(node0, false, node9, false);
    aig4table[136].set_root(node10);
  }
  {
    size_t node0 = aig4table[137].make_literal(1, false);
    size_t node1 = aig4table[137].make_literal(2, false);
    size_t node2 = aig4table[137].make_or(node0, false, node1, false);
    size_t node3 = aig4table[137].make_literal(0, false);
    size_t node4 = aig4table[137].make_literal(2, true);
    size_t node5 = aig4table[137].make_literal(3, true);
    size_t node6 = aig4table[137].make_and(node4, false, node5, false);
    size_t node7 = aig4table[137].make_or(node3, false, node6, false);
    size_t node8 = aig4table[137].make_literal(0, true);
    size_t node9 = aig4table[137].make_literal(1, true);
    size_t node10 = aig4table[137].make_literal(3, false);
    size_t node11 = aig4table[137].make_or(node9, false, node10, false);
    size_t node12 = aig4table[137].make_or(node8, false, node11, false);
    size_t node13 = aig4table[137].make_and(node7, false, node12, false);
    size_t node14 = aig4table[137].make_and(node2, false, node13, false);
    aig4table[137].set_root(node14);
  }
  {
    size_t node0 = aig4table[138].make_literal(0, false);
    size_t node1 = aig4table[138].make_literal(1, false);
    size_t node2 = aig4table[138].make_literal(2, false);
    size_t node3 = aig4table[138].make_literal(3, false);
    size_t node4 = aig4table[138].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[138].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[138].make_and(node0, false, node5, false);
    aig4table[138].set_root(node6);
  }
  {
    size_t node0 = aig4table[139].make_literal(0, false);
    size_t node1 = aig4table[139].make_literal(1, true);
    size_t node2 = aig4table[139].make_literal(2, false);
    size_t node3 = aig4table[139].make_literal(3, true);
    size_t node4 = aig4table[139].make_or(node2, false, node3, false);
    size_t node5 = aig4table[139].make_and(node1, false, node4, false);
    size_t node6 = aig4table[139].make_and(node0, false, node5, false);
    size_t node7 = aig4table[139].make_literal(1, false);
    size_t node8 = aig4table[139].make_literal(3, false);
    size_t node9 = aig4table[139].make_or(node2, false, node8, false);
    size_t node10 = aig4table[139].make_literal(2, true);
    size_t node11 = aig4table[139].make_literal(0, true);
    size_t node12 = aig4table[139].make_or(node3, false, node11, false);
    size_t node13 = aig4table[139].make_or(node10, false, node12, false);
    size_t node14 = aig4table[139].make_and(node9, false, node13, false);
    size_t node15 = aig4table[139].make_and(node7, false, node14, false);
    size_t node16 = aig4table[139].make_or(node6, false, node15, false);
    aig4table[139].set_root(node16);
  }
  {
    size_t node0 = aig4table[140].make_literal(0, false);
    size_t node1 = aig4table[140].make_literal(1, false);
    size_t node2 = aig4table[140].make_literal(2, false);
    size_t node3 = aig4table[140].make_or(node1, false, node2, false);
    size_t node4 = aig4table[140].make_literal(1, true);
    size_t node5 = aig4table[140].make_literal(2, true);
    size_t node6 = aig4table[140].make_literal(3, false);
    size_t node7 = aig4table[140].make_or(node5, false, node6, false);
    size_t node8 = aig4table[140].make_or(node4, false, node7, false);
    size_t node9 = aig4table[140].make_and(node3, false, node8, false);
    size_t node10 = aig4table[140].make_and(node0, false, node9, false);
    aig4table[140].set_root(node10);
  }
  {
    size_t node0 = aig4table[141].make_literal(3, true);
    size_t node1 = aig4table[141].make_literal(0, false);
    size_t node2 = aig4table[141].make_literal(2, false);
    size_t node3 = aig4table[141].make_and(node1, false, node2, false);
    size_t node4 = aig4table[141].make_literal(1, false);
    size_t node5 = aig4table[141].make_literal(2, true);
    size_t node6 = aig4table[141].make_and(node4, false, node5, false);
    size_t node7 = aig4table[141].make_or(node3, false, node6, false);
    size_t node8 = aig4table[141].make_and(node0, false, node7, false);
    size_t node9 = aig4table[141].make_literal(3, false);
    size_t node10 = aig4table[141].make_xor(node1, false, node2, false);
    size_t node11 = aig4table[141].make_and(node9, false, node10, false);
    size_t node12 = aig4table[141].make_or(node8, false, node11, false);
    aig4table[141].set_root(node12);
  }
  {
    size_t node0 = aig4table[142].make_literal(0, false);
    size_t node1 = aig4table[142].make_literal(1, false);
    size_t node2 = aig4table[142].make_literal(2, false);
    size_t node3 = aig4table[142].make_literal(3, false);
    size_t node4 = aig4table[142].make_and(node2, false, node3, false);
    size_t node5 = aig4table[142].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[142].make_and(node0, false, node5, false);
    aig4table[142].set_root(node6);
  }
  {
    size_t node0 = aig4table[143].make_literal(0, false);
    size_t node1 = aig4table[143].make_literal(1, true);
    size_t node2 = aig4table[143].make_literal(3, false);
    size_t node3 = aig4table[143].make_and(node1, false, node2, false);
    size_t node4 = aig4table[143].make_literal(1, false);
    size_t node5 = aig4table[143].make_literal(3, true);
    size_t node6 = aig4table[143].make_literal(2, true);
    size_t node7 = aig4table[143].make_and(node5, false, node6, false);
    size_t node8 = aig4table[143].make_and(node4, false, node7, false);
    size_t node9 = aig4table[143].make_or(node3, false, node8, false);
    size_t node10 = aig4table[143].make_and(node0, false, node9, false);
    size_t node11 = aig4table[143].make_literal(0, true);
    size_t node12 = aig4table[143].make_literal(2, false);
    size_t node13 = aig4table[143].make_and(node4, false, node12, false);
    size_t node14 = aig4table[143].make_and(node11, false, node13, false);
    size_t node15 = aig4table[143].make_or(node10, false, node14, false);
    aig4table[143].set_root(node15);
  }
  {
    size_t node0 = aig4table[144].make_literal(0, false);
    size_t node1 = aig4table[144].make_literal(1, true);
    size_t node2 = aig4table[144].make_literal(3, false);
    size_t node3 = aig4table[144].make_and(node1, false, node2, false);
    size_t node4 = aig4table[144].make_literal(2, true);
    size_t node5 = aig4table[144].make_literal(3, true);
    size_t node6 = aig4table[144].make_and(node4, false, node5, false);
    size_t node7 = aig4table[144].make_or(node3, false, node6, false);
    size_t node8 = aig4table[144].make_and(node0, false, node7, false);
    size_t node9 = aig4table[144].make_literal(0, true);
    size_t node10 = aig4table[144].make_literal(1, false);
    size_t node11 = aig4table[144].make_literal(2, false);
    size_t node12 = aig4table[144].make_and(node10, false, node11, false);
    size_t node13 = aig4table[144].make_and(node9, false, node12, false);
    size_t node14 = aig4table[144].make_or(node8, false, node13, false);
    aig4table[144].set_root(node14);
  }
  {
    size_t node0 = aig4table[145].make_literal(0, false);
    size_t node1 = aig4table[145].make_literal(1, false);
    size_t node2 = aig4table[145].make_literal(3, true);
    size_t node3 = aig4table[145].make_and(node1, false, node2, false);
    size_t node4 = aig4table[145].make_and(node0, false, node3, false);
    size_t node5 = aig4table[145].make_literal(2, false);
    size_t node6 = aig4table[145].make_xor(node0, false, node1, false);
    size_t node7 = aig4table[145].make_and(node5, false, node6, false);
    size_t node8 = aig4table[145].make_literal(3, false);
    size_t node9 = aig4table[145].make_and(node6, true, node8, false);
    size_t node10 = aig4table[145].make_and(node5, true, node9, false);
    size_t node11 = aig4table[145].make_or(node7, false, node10, false);
    size_t node12 = aig4table[145].make_or(node4, false, node11, false);
    aig4table[145].set_root(node12);
  }
  {
    size_t node0 = aig4table[146].make_literal(1, true);
    size_t node1 = aig4table[146].make_literal(2, true);
    size_t node2 = aig4table[146].make_literal(0, false);
    size_t node3 = aig4table[146].make_literal(3, false);
    size_t node4 = aig4table[146].make_or(node2, false, node3, false);
    size_t node5 = aig4table[146].make_and(node1, false, node4, false);
    size_t node6 = aig4table[146].make_and(node0, false, node5, false);
    size_t node7 = aig4table[146].make_literal(1, false);
    size_t node8 = aig4table[146].make_literal(2, false);
    size_t node9 = aig4table[146].make_literal(3, true);
    size_t node10 = aig4table[146].make_or(node2, false, node9, false);
    size_t node11 = aig4table[146].make_and(node8, false, node10, false);
    size_t node12 = aig4table[146].make_and(node7, false, node11, false);
    size_t node13 = aig4table[146].make_or(node6, false, node12, false);
    aig4table[146].set_root(node13);
  }
  {
    size_t node0 = aig4table[147].make_literal(0, false);
    size_t node1 = aig4table[147].make_literal(1, false);
    size_t node2 = aig4table[147].make_literal(2, true);
    size_t node3 = aig4table[147].make_and(node1, false, node2, false);
    size_t node4 = aig4table[147].make_and(node0, false, node3, false);
    size_t node5 = aig4table[147].make_literal(2, false);
    size_t node6 = aig4table[147].make_xor(node0, false, node1, false);
    size_t node7 = aig4table[147].make_and(node5, false, node6, false);
    size_t node8 = aig4table[147].make_or(node4, false, node7, false);
    aig4table[147].set_root(node8);
  }
  {
    size_t node0 = aig4table[148].make_literal(0, false);
    size_t node1 = aig4table[148].make_literal(3, false);
    size_t node2 = aig4table[148].make_or(node0, false, node1, false);
    size_t node3 = aig4table[148].make_literal(1, false);
    size_t node4 = aig4table[148].make_literal(3, true);
    size_t node5 = aig4table[148].make_or(node3, false, node4, false);
    size_t node6 = aig4table[148].make_and(node2, false, node5, false);
    size_t node7 = aig4table[148].make_literal(2, true);
    size_t node8 = aig4table[148].make_literal(1, true);
    size_t node9 = aig4table[148].make_and(node0, false, node1, false);
    size_t node10 = aig4table[148].make_or(node8, false, node9, false);
    size_t node11 = aig4table[148].make_xor(node7, true, node10, false);
    size_t node12 = aig4table[148].make_and(node6, false, node11, false);
    aig4table[148].set_root(node12);
  }
  {
    size_t node0 = aig4table[149].make_literal(3, true);
    size_t node1 = aig4table[149].make_literal(1, false);
    size_t node2 = aig4table[149].make_literal(2, false);
    size_t node3 = aig4table[149].make_and(node1, false, node2, false);
    size_t node4 = aig4table[149].make_literal(1, true);
    size_t node5 = aig4table[149].make_literal(2, true);
    size_t node6 = aig4table[149].make_literal(0, false);
    size_t node7 = aig4table[149].make_and(node5, false, node6, false);
    size_t node8 = aig4table[149].make_and(node4, false, node7, false);
    size_t node9 = aig4table[149].make_or(node3, false, node8, false);
    size_t node10 = aig4table[149].make_and(node0, false, node9, false);
    size_t node11 = aig4table[149].make_literal(3, false);
    size_t node12 = aig4table[149].make_and(node4, false, node5, false);
    size_t node13 = aig4table[149].make_xor(node6, false, node12, false);
    size_t node14 = aig4table[149].make_and(node11, false, node13, false);
    size_t node15 = aig4table[149].make_or(node10, false, node14, false);
    aig4table[149].set_root(node15);
  }
  {
    size_t node0 = aig4table[150].make_literal(0, false);
    size_t node1 = aig4table[150].make_literal(1, false);
    size_t node2 = aig4table[150].make_literal(2, true);
    size_t node3 = aig4table[150].make_and(node1, false, node2, false);
    size_t node4 = aig4table[150].make_and(node0, false, node3, false);
    size_t node5 = aig4table[150].make_literal(0, true);
    size_t node6 = aig4table[150].make_literal(1, true);
    size_t node7 = aig4table[150].make_literal(3, false);
    size_t node8 = aig4table[150].make_and(node6, false, node7, false);
    size_t node9 = aig4table[150].make_and(node5, false, node8, false);
    size_t node10 = aig4table[150].make_literal(2, false);
    size_t node11 = aig4table[150].make_literal(3, true);
    size_t node12 = aig4table[150].make_xor(node5, false, node6, false);
    size_t node13 = aig4table[150].make_and(node11, false, node12, false);
    size_t node14 = aig4table[150].make_and(node10, false, node13, false);
    size_t node15 = aig4table[150].make_or(node9, false, node14, false);
    size_t node16 = aig4table[150].make_or(node4, false, node15, false);
    aig4table[150].set_root(node16);
  }
  {
    size_t node0 = aig4table[151].make_literal(0, false);
    size_t node1 = aig4table[151].make_literal(1, false);
    size_t node2 = aig4table[151].make_literal(3, true);
    size_t node3 = aig4table[151].make_and(node1, false, node2, false);
    size_t node4 = aig4table[151].make_and(node0, false, node3, false);
    size_t node5 = aig4table[151].make_literal(2, false);
    size_t node6 = aig4table[151].make_literal(3, false);
    size_t node7 = aig4table[151].make_or(node5, false, node6, false);
    size_t node8 = aig4table[151].make_xor(node0, false, node1, false);
    size_t node9 = aig4table[151].make_and(node7, false, node8, false);
    size_t node10 = aig4table[151].make_or(node4, false, node9, false);
    aig4table[151].set_root(node10);
  }
  {
    size_t node0 = aig4table[152].make_literal(1, false);
    size_t node1 = aig4table[152].make_literal(0, false);
    size_t node2 = aig4table[152].make_literal(2, false);
    size_t node3 = aig4table[152].make_and(node1, true, node2, true);
    size_t node4 = aig4table[152].make_literal(3, false);
    size_t node5 = aig4table[152].make_and(node4, true, node2, false);
    size_t node6 = aig4table[152].make_or(node3, false, node5, false);
    size_t node7 = aig4table[152].make_and(node0, false, node6, true);
    size_t node8 = aig4table[152].make_and(node6, false, node1, false);
    size_t node9 = aig4table[152].make_and(node0, true, node8, false);
    size_t node10 = aig4table[152].make_or(node7, false, node9, false);
    aig4table[152].set_root(node10);
  }
  {
    size_t node0 = aig4table[153].make_literal(0, false);
    size_t node1 = aig4table[153].make_literal(2, false);
    size_t node2 = aig4table[153].make_literal(1, true);
    size_t node3 = aig4table[153].make_and(node1, false, node2, true);
    size_t node4 = aig4table[153].make_or(node0, true, node3, false);
    size_t node5 = aig4table[153].make_literal(3, false);
    size_t node6 = aig4table[153].make_and(node5, false, node1, false);
    size_t node7 = aig4table[153].make_or(node4, true, node6, false);
    size_t node8 = aig4table[153].make_literal(1, false);
    size_t node9 = aig4table[153].make_literal(3, true);
    size_t node10 = aig4table[153].make_or(node8, false, node9, false);
    size_t node11 = aig4table[153].make_and(node7, false, node10, false);
    aig4table[153].set_root(node11);
  }
  {
    size_t node0 = aig4table[154].make_literal(0, false);
    size_t node1 = aig4table[154].make_literal(1, false);
    size_t node2 = aig4table[154].make_literal(2, false);
    size_t node3 = aig4table[154].make_and(node1, false, node2, false);
    size_t node4 = aig4table[154].make_or(node0, false, node3, false);
    size_t node5 = aig4table[154].make_literal(3, true);
    size_t node6 = aig4table[154].make_literal(0, true);
    size_t node7 = aig4table[154].make_literal(1, true);
    size_t node8 = aig4table[154].make_literal(2, true);
    size_t node9 = aig4table[154].make_and(node7, false, node8, false);
    size_t node10 = aig4table[154].make_or(node6, false, node9, false);
    size_t node11 = aig4table[154].make_xor(node5, true, node10, false);
    size_t node12 = aig4table[154].make_and(node4, false, node11, false);
    aig4table[154].set_root(node12);
  }
  {
    size_t node0 = aig4table[155].make_literal(3, false);
    size_t node1 = aig4table[155].make_literal(0, false);
    size_t node2 = aig4table[155].make_literal(1, false);
    size_t node3 = aig4table[155].make_and(node1, false, node2, false);
    size_t node4 = aig4table[155].make_literal(2, false);
    size_t node5 = aig4table[155].make_or(node1, false, node2, false);
    size_t node6 = aig4table[155].make_and(node4, false, node5, false);
    size_t node7 = aig4table[155].make_or(node3, false, node6, false);
    size_t node8 = aig4table[155].make_xor(node0, false, node7, false);
    aig4table[155].set_root(node8);
  }
  {
    size_t node0 = aig4table[156].make_literal(2, false);
    size_t node1 = aig4table[156].make_literal(3, true);
    size_t node2 = aig4table[156].make_literal(0, false);
    size_t node3 = aig4table[156].make_literal(1, false);
    size_t node4 = aig4table[156].make_or(node2, false, node3, false);
    size_t node5 = aig4table[156].make_and(node1, false, node4, false);
    size_t node6 = aig4table[156].make_and(node0, false, node5, false);
    size_t node7 = aig4table[156].make_literal(3, false);
    size_t node8 = aig4table[156].make_and(node2, false, node3, false);
    size_t node9 = aig4table[156].make_literal(0, true);
    size_t node10 = aig4table[156].make_literal(1, true);
    size_t node11 = aig4table[156].make_literal(2, true);
    size_t node12 = aig4table[156].make_and(node10, false, node11, false);
    size_t node13 = aig4table[156].make_and(node9, false, node12, false);
    size_t node14 = aig4table[156].make_or(node8, false, node13, false);
    size_t node15 = aig4table[156].make_and(node7, false, node14, false);
    size_t node16 = aig4table[156].make_or(node6, false, node15, false);
    aig4table[156].set_root(node16);
  }
  {
    size_t node0 = aig4table[157].make_literal(0, false);
    size_t node1 = aig4table[157].make_literal(1, false);
    size_t node2 = aig4table[157].make_literal(2, false);
    size_t node3 = aig4table[157].make_or(node1, false, node2, false);
    size_t node4 = aig4table[157].make_or(node0, false, node3, false);
    size_t node5 = aig4table[157].make_literal(3, true);
    size_t node6 = aig4table[157].make_literal(0, true);
    size_t node7 = aig4table[157].make_literal(1, true);
    size_t node8 = aig4table[157].make_or(node6, false, node7, false);
    size_t node9 = aig4table[157].make_literal(2, true);
    size_t node10 = aig4table[157].make_and(node6, false, node7, false);
    size_t node11 = aig4table[157].make_or(node9, false, node10, false);
    size_t node12 = aig4table[157].make_and(node8, false, node11, false);
    size_t node13 = aig4table[157].make_xor(node5, true, node12, false);
    size_t node14 = aig4table[157].make_and(node4, false, node13, false);
    aig4table[157].set_root(node14);
  }
  {
    size_t node0 = aig4table[158].make_literal(3, false);
    size_t node1 = aig4table[158].make_literal(2, true);
    size_t node2 = aig4table[158].make_literal(0, false);
    size_t node3 = aig4table[158].make_literal(1, false);
    size_t node4 = aig4table[158].make_and(node2, false, node3, false);
    size_t node5 = aig4table[158].make_or(node1, false, node4, false);
    size_t node6 = aig4table[158].make_xor(node0, true, node5, false);
    size_t node7 = aig4table[158].make_literal(3, true);
    size_t node8 = aig4table[158].make_or(node3, false, node7, false);
    size_t node9 = aig4table[158].make_or(node2, false, node8, false);
    size_t node10 = aig4table[158].make_and(node6, false, node9, false);
    aig4table[158].set_root(node10);
  }
  {
    size_t node0 = aig4table[159].make_literal(0, false);
    size_t node1 = aig4table[159].make_literal(1, false);
    size_t node2 = aig4table[159].make_literal(2, true);
    size_t node3 = aig4table[159].make_and(node1, false, node2, false);
    size_t node4 = aig4table[159].make_and(node0, false, node3, false);
    size_t node5 = aig4table[159].make_literal(2, false);
    size_t node6 = aig4table[159].make_literal(3, false);
    size_t node7 = aig4table[159].make_literal(0, true);
    size_t node8 = aig4table[159].make_literal(1, true);
    size_t node9 = aig4table[159].make_and(node7, false, node8, false);
    size_t node10 = aig4table[159].make_xor(node6, false, node9, false);
    size_t node11 = aig4table[159].make_and(node5, false, node10, false);
    size_t node12 = aig4table[159].make_or(node4, false, node11, false);
    aig4table[159].set_root(node12);
  }
  {
    size_t node0 = aig4table[160].make_literal(3, false);
    size_t node1 = aig4table[160].make_literal(0, true);
    size_t node2 = aig4table[160].make_literal(1, true);
    size_t node3 = aig4table[160].make_and(node1, false, node2, false);
    size_t node4 = aig4table[160].make_and(node0, true, node3, false);
    size_t node5 = aig4table[160].make_literal(2, false);
    size_t node6 = aig4table[160].make_and(node3, true, node5, false);
    size_t node7 = aig4table[160].make_and(node0, false, node6, false);
    size_t node8 = aig4table[160].make_or(node4, false, node7, false);
    size_t node9 = aig4table[160].make_literal(0, false);
    size_t node10 = aig4table[160].make_literal(1, false);
    size_t node11 = aig4table[160].make_literal(2, true);
    size_t node12 = aig4table[160].make_and(node10, false, node11, false);
    size_t node13 = aig4table[160].make_and(node9, false, node12, false);
    size_t node14 = aig4table[160].make_or(node8, false, node13, false);
    aig4table[160].set_root(node14);
  }
  {
    size_t node0 = aig4table[161].make_literal(2, true);
    size_t node1 = aig4table[161].make_literal(3, true);
    size_t node2 = aig4table[161].make_literal(0, false);
    size_t node3 = aig4table[161].make_literal(1, false);
    size_t node4 = aig4table[161].make_or(node2, false, node3, false);
    size_t node5 = aig4table[161].make_and(node1, false, node4, false);
    size_t node6 = aig4table[161].make_and(node0, false, node5, false);
    size_t node7 = aig4table[161].make_literal(2, false);
    size_t node8 = aig4table[161].make_literal(3, false);
    size_t node9 = aig4table[161].make_literal(0, true);
    size_t node10 = aig4table[161].make_literal(1, true);
    size_t node11 = aig4table[161].make_or(node9, false, node10, false);
    size_t node12 = aig4table[161].make_and(node8, false, node11, false);
    size_t node13 = aig4table[161].make_and(node7, false, node12, false);
    size_t node14 = aig4table[161].make_or(node6, false, node13, false);
    aig4table[161].set_root(node14);
  }
  {
    size_t node0 = aig4table[162].make_literal(0, false);
    size_t node1 = aig4table[162].make_literal(1, false);
    size_t node2 = aig4table[162].make_literal(2, true);
    size_t node3 = aig4table[162].make_literal(3, true);
    size_t node4 = aig4table[162].make_and(node2, false, node3, false);
    size_t node5 = aig4table[162].make_and(node1, false, node4, false);
    size_t node6 = aig4table[162].make_and(node0, false, node5, false);
    size_t node7 = aig4table[162].make_literal(0, true);
    size_t node8 = aig4table[162].make_literal(1, true);
    size_t node9 = aig4table[162].make_or(node7, false, node8, false);
    size_t node10 = aig4table[162].make_literal(2, false);
    size_t node11 = aig4table[162].make_literal(3, false);
    size_t node12 = aig4table[162].make_or(node10, false, node11, false);
    size_t node13 = aig4table[162].make_and(node9, false, node12, false);
    size_t node14 = aig4table[162].make_or(node0, false, node1, false);
    size_t node15 = aig4table[162].make_or(node2, false, node3, false);
    size_t node16 = aig4table[162].make_xor(node14, true, node15, false);
    size_t node17 = aig4table[162].make_and(node13, false, node16, false);
    size_t node18 = aig4table[162].make_or(node6, false, node17, false);
    aig4table[162].set_root(node18);
  }
  {
    size_t node0 = aig4table[163].make_literal(0, false);
    size_t node1 = aig4table[163].make_literal(2, true);
    size_t node2 = aig4table[163].make_and(node0, false, node1, false);
    size_t node3 = aig4table[163].make_literal(2, false);
    size_t node4 = aig4table[163].make_literal(0, true);
    size_t node5 = aig4table[163].make_literal(3, false);
    size_t node6 = aig4table[163].make_and(node4, false, node5, false);
    size_t node7 = aig4table[163].make_literal(1, false);
    size_t node8 = aig4table[163].make_literal(3, true);
    size_t node9 = aig4table[163].make_and(node7, false, node8, false);
    size_t node10 = aig4table[163].make_or(node6, false, node9, false);
    size_t node11 = aig4table[163].make_and(node3, false, node10, false);
    size_t node12 = aig4table[163].make_or(node2, false, node11, false);
    aig4table[163].set_root(node12);
  }
  {
    size_t node0 = aig4table[164].make_literal(0, false);
    size_t node1 = aig4table[164].make_literal(3, false);
    size_t node2 = aig4table[164].make_or(node0, false, node1, false);
    size_t node3 = aig4table[164].make_literal(1, true);
    size_t node4 = aig4table[164].make_literal(2, true);
    size_t node5 = aig4table[164].make_or(node3, false, node4, false);
    size_t node6 = aig4table[164].make_xor(node2, true, node5, false);
    size_t node7 = aig4table[164].make_literal(1, false);
    size_t node8 = aig4table[164].make_literal(2, false);
    size_t node9 = aig4table[164].make_literal(3, true);
    size_t node10 = aig4table[164].make_or(node8, false, node9, false);
    size_t node11 = aig4table[164].make_or(node7, false, node10, false);
    size_t node12 = aig4table[164].make_and(node6, false, node11, false);
    aig4table[164].set_root(node12);
  }
  {
    size_t node0 = aig4table[165].make_literal(0, false);
    size_t node1 = aig4table[165].make_literal(1, false);
    size_t node2 = aig4table[165].make_or(node0, false, node1, false);
    size_t node3 = aig4table[165].make_literal(2, true);
    size_t node4 = aig4table[165].make_literal(0, true);
    size_t node5 = aig4table[165].make_literal(1, true);
    size_t node6 = aig4table[165].make_or(node4, false, node5, false);
    size_t node7 = aig4table[165].make_literal(3, false);
    size_t node8 = aig4table[165].make_and(node4, false, node5, false);
    size_t node9 = aig4table[165].make_or(node7, false, node8, false);
    size_t node10 = aig4table[165].make_and(node6, false, node9, false);
    size_t node11 = aig4table[165].make_xor(node3, true, node10, false);
    size_t node12 = aig4table[165].make_and(node2, false, node11, false);
    aig4table[165].set_root(node12);
  }
  {
    size_t node0 = aig4table[166].make_literal(0, false);
    size_t node1 = aig4table[166].make_literal(3, true);
    size_t node2 = aig4table[166].make_literal(1, false);
    size_t node3 = aig4table[166].make_literal(2, false);
    size_t node4 = aig4table[166].make_or(node2, false, node3, false);
    size_t node5 = aig4table[166].make_and(node1, false, node4, false);
    size_t node6 = aig4table[166].make_and(node0, false, node5, false);
    size_t node7 = aig4table[166].make_literal(3, false);
    size_t node8 = aig4table[166].make_literal(1, true);
    size_t node9 = aig4table[166].make_xor(node8, false, node3, false);
    size_t node10 = aig4table[166].make_and(node7, false, node9, false);
    size_t node11 = aig4table[166].make_or(node6, false, node10, false);
    aig4table[166].set_root(node11);
  }
  {
    size_t node0 = aig4table[167].make_literal(0, false);
    size_t node1 = aig4table[167].make_literal(1, false);
    size_t node2 = aig4table[167].make_literal(3, true);
    size_t node3 = aig4table[167].make_and(node1, false, node2, false);
    size_t node4 = aig4table[167].make_and(node0, false, node3, false);
    size_t node5 = aig4table[167].make_literal(2, false);
    size_t node6 = aig4table[167].make_literal(3, false);
    size_t node7 = aig4table[167].make_or(node0, false, node1, false);
    size_t node8 = aig4table[167].make_and(node6, false, node7, false);
    size_t node9 = aig4table[167].make_and(node5, false, node8, false);
    size_t node10 = aig4table[167].make_or(node4, false, node9, false);
    aig4table[167].set_root(node10);
  }
  {
    size_t node0 = aig4table[168].make_literal(0, false);
    size_t node1 = aig4table[168].make_literal(3, true);
    size_t node2 = aig4table[168].make_literal(1, false);
    size_t node3 = aig4table[168].make_literal(2, true);
    size_t node4 = aig4table[168].make_or(node2, false, node3, false);
    size_t node5 = aig4table[168].make_and(node1, false, node4, false);
    size_t node6 = aig4table[168].make_and(node0, false, node5, false);
    size_t node7 = aig4table[168].make_literal(2, false);
    size_t node8 = aig4table[168].make_literal(3, false);
    size_t node9 = aig4table[168].make_or(node0, false, node2, false);
    size_t node10 = aig4table[168].make_and(node8, false, node9, false);
    size_t node11 = aig4table[168].make_and(node7, false, node10, false);
    size_t node12 = aig4table[168].make_or(node6, false, node11, false);
    aig4table[168].set_root(node12);
  }
  {
    size_t node0 = aig4table[169].make_literal(0, false);
    size_t node1 = aig4table[169].make_literal(1, true);
    size_t node2 = aig4table[169].make_literal(2, true);
    size_t node3 = aig4table[169].make_and(node1, false, node2, false);
    size_t node4 = aig4table[169].make_and(node0, false, node3, false);
    size_t node5 = aig4table[169].make_literal(1, false);
    size_t node6 = aig4table[169].make_literal(2, false);
    size_t node7 = aig4table[169].make_literal(3, false);
    size_t node8 = aig4table[169].make_xor(node0, false, node7, false);
    size_t node9 = aig4table[169].make_and(node6, false, node8, false);
    size_t node10 = aig4table[169].make_and(node5, false, node9, false);
    size_t node11 = aig4table[169].make_or(node4, false, node10, false);
    aig4table[169].set_root(node11);
  }
  {
    size_t node0 = aig4table[170].make_literal(0, false);
    size_t node1 = aig4table[170].make_literal(1, false);
    size_t node2 = aig4table[170].make_literal(2, false);
    size_t node3 = aig4table[170].make_literal(3, false);
    size_t node4 = aig4table[170].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[170].make_and(node1, false, node4, false);
    size_t node6 = aig4table[170].make_and(node0, false, node5, false);
    size_t node7 = aig4table[170].make_xor(node0, false, node1, false);
    size_t node8 = aig4table[170].make_and(node3, false, node7, false);
    size_t node9 = aig4table[170].make_and(node2, false, node8, false);
    size_t node10 = aig4table[170].make_or(node6, false, node9, false);
    aig4table[170].set_root(node10);
  }
  {
    size_t node0 = aig4table[171].make_literal(2, true);
    size_t node1 = aig4table[171].make_literal(3, true);
    size_t node2 = aig4table[171].make_and(node0, false, node1, false);
    size_t node3 = aig4table[171].make_literal(2, false);
    size_t node4 = aig4table[171].make_literal(3, false);
    size_t node5 = aig4table[171].make_literal(0, false);
    size_t node6 = aig4table[171].make_literal(1, false);
    size_t node7 = aig4table[171].make_or(node5, false, node6, false);
    size_t node8 = aig4table[171].make_and(node4, false, node7, false);
    size_t node9 = aig4table[171].make_and(node3, false, node8, false);
    size_t node10 = aig4table[171].make_and(node5, false, node6, false);
    size_t node11 = aig4table[171].make_and(node2, false, node7, false);
    size_t node12 = aig4table[171].make_or(node10, false, node11, false);
    size_t node13 = aig4table[171].make_xor(node9, false, node12, false);
    size_t node14 = aig4table[171].make_xor(node2, false, node13, false);
    aig4table[171].set_root(node14);
  }
  {
    size_t node0 = aig4table[172].make_literal(1, false);
    size_t node1 = aig4table[172].make_literal(2, false);
    size_t node2 = aig4table[172].make_literal(3, false);
    size_t node3 = aig4table[172].make_or(node1, true, node2, true);
    size_t node4 = aig4table[172].make_literal(0, false);
    size_t node5 = aig4table[172].make_or(node2, false, node4, true);
    size_t node6 = aig4table[172].make_or(node1, false, node5, false);
    size_t node7 = aig4table[172].make_and(node3, false, node6, false);
    size_t node8 = aig4table[172].make_and(node0, false, node7, true);
    size_t node9 = aig4table[172].make_and(node7, false, node4, false);
    size_t node10 = aig4table[172].make_and(node0, true, node9, false);
    size_t node11 = aig4table[172].make_or(node8, false, node10, false);
    aig4table[172].set_root(node11);
  }
  {
    size_t node0 = aig4table[173].make_literal(0, false);
    size_t node1 = aig4table[173].make_literal(1, true);
    size_t node2 = aig4table[173].make_literal(2, false);
    size_t node3 = aig4table[173].make_literal(3, true);
    size_t node4 = aig4table[173].make_or(node2, false, node3, false);
    size_t node5 = aig4table[173].make_and(node1, false, node4, false);
    size_t node6 = aig4table[173].make_and(node0, false, node5, false);
    size_t node7 = aig4table[173].make_literal(1, false);
    size_t node8 = aig4table[173].make_literal(3, false);
    size_t node9 = aig4table[173].make_literal(0, true);
    size_t node10 = aig4table[173].make_literal(2, true);
    size_t node11 = aig4table[173].make_and(node9, false, node10, false);
    size_t node12 = aig4table[173].make_xor(node8, false, node11, false);
    size_t node13 = aig4table[173].make_and(node7, false, node12, false);
    size_t node14 = aig4table[173].make_or(node6, false, node13, false);
    aig4table[173].set_root(node14);
  }
  {
    size_t node0 = aig4table[174].make_literal(0, false);
    size_t node1 = aig4table[174].make_literal(2, false);
    size_t node2 = aig4table[174].make_literal(3, false);
    size_t node3 = aig4table[174].make_and(node1, false, node2, false);
    size_t node4 = aig4table[174].make_or(node0, false, node3, false);
    size_t node5 = aig4table[174].make_literal(1, false);
    size_t node6 = aig4table[174].make_or(node1, false, node2, false);
    size_t node7 = aig4table[174].make_literal(2, true);
    size_t node8 = aig4table[174].make_literal(3, true);
    size_t node9 = aig4table[174].make_literal(0, true);
    size_t node10 = aig4table[174].make_or(node8, false, node9, false);
    size_t node11 = aig4table[174].make_or(node7, false, node10, false);
    size_t node12 = aig4table[174].make_and(node6, false, node11, false);
    size_t node13 = aig4table[174].make_xor(node5, true, node12, false);
    size_t node14 = aig4table[174].make_and(node4, false, node13, false);
    aig4table[174].set_root(node14);
  }
  {
    size_t node0 = aig4table[175].make_literal(2, true);
    size_t node1 = aig4table[175].make_literal(3, true);
    size_t node2 = aig4table[175].make_literal(0, false);
    size_t node3 = aig4table[175].make_literal(1, true);
    size_t node4 = aig4table[175].make_or(node2, false, node3, false);
    size_t node5 = aig4table[175].make_and(node1, false, node4, false);
    size_t node6 = aig4table[175].make_and(node0, false, node5, false);
    size_t node7 = aig4table[175].make_literal(2, false);
    size_t node8 = aig4table[175].make_literal(3, false);
    size_t node9 = aig4table[175].make_and(node7, false, node8, false);
    size_t node10 = aig4table[175].make_and(node3, true, node9, false);
    size_t node11 = aig4table[175].make_and(node9, true, node2, false);
    size_t node12 = aig4table[175].make_and(node3, false, node11, false);
    size_t node13 = aig4table[175].make_or(node10, false, node12, false);
    size_t node14 = aig4table[175].make_xor(node6, false, node13, false);
    aig4table[175].set_root(node14);
  }
  {
    size_t node0 = aig4table[176].make_literal(0, false);
    size_t node1 = aig4table[176].make_literal(1, true);
    size_t node2 = aig4table[176].make_literal(2, true);
    size_t node3 = aig4table[176].make_and(node1, false, node2, false);
    size_t node4 = aig4table[176].make_literal(3, true);
    size_t node5 = aig4table[176].make_or(node1, false, node2, false);
    size_t node6 = aig4table[176].make_and(node4, false, node5, false);
    size_t node7 = aig4table[176].make_or(node3, false, node6, false);
    size_t node8 = aig4table[176].make_and(node0, false, node7, false);
    size_t node9 = aig4table[176].make_literal(1, false);
    size_t node10 = aig4table[176].make_literal(2, false);
    size_t node11 = aig4table[176].make_literal(3, false);
    size_t node12 = aig4table[176].make_and(node10, false, node11, false);
    size_t node13 = aig4table[176].make_and(node9, false, node12, false);
    size_t node14 = aig4table[176].make_or(node8, false, node13, false);
    aig4table[176].set_root(node14);
  }
  {
    size_t node0 = aig4table[177].make_literal(0, false);
    size_t node1 = aig4table[177].make_literal(1, false);
    size_t node2 = aig4table[177].make_literal(2, true);
    size_t node3 = aig4table[177].make_and(node1, false, node2, false);
    size_t node4 = aig4table[177].make_and(node0, false, node3, false);
    size_t node5 = aig4table[177].make_literal(2, false);
    size_t node6 = aig4table[177].make_literal(1, true);
    size_t node7 = aig4table[177].make_and(node0, false, node6, false);
    size_t node8 = aig4table[177].make_literal(3, false);
    size_t node9 = aig4table[177].make_and(node8, false, node1, false);
    size_t node10 = aig4table[177].make_or(node7, false, node9, false);
    size_t node11 = aig4table[177].make_and(node5, false, node10, false);
    size_t node12 = aig4table[177].make_or(node4, false, node11, false);
    aig4table[177].set_root(node12);
  }
  {
    size_t node0 = aig4table[178].make_literal(2, false);
    size_t node1 = aig4table[178].make_literal(3, false);
    size_t node2 = aig4table[178].make_literal(0, false);
    size_t node3 = aig4table[178].make_literal(1, false);
    size_t node4 = aig4table[178].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[178].make_and(node1, true, node4, false);
    size_t node6 = aig4table[178].make_and(node0, true, node5, false);
    size_t node7 = aig4table[178].make_and(node1, false, node4, true);
    size_t node8 = aig4table[178].make_and(node0, false, node7, false);
    size_t node9 = aig4table[178].make_or(node6, false, node8, false);
    aig4table[178].set_root(node9);
  }
  {
    size_t node0 = aig4table[179].make_literal(2, true);
    size_t node1 = aig4table[179].make_literal(0, false);
    size_t node2 = aig4table[179].make_literal(1, false);
    size_t node3 = aig4table[179].make_and(node1, false, node2, false);
    size_t node4 = aig4table[179].make_literal(0, true);
    size_t node5 = aig4table[179].make_literal(1, true);
    size_t node6 = aig4table[179].make_literal(3, true);
    size_t node7 = aig4table[179].make_and(node5, false, node6, false);
    size_t node8 = aig4table[179].make_and(node4, false, node7, false);
    size_t node9 = aig4table[179].make_or(node3, false, node8, false);
    size_t node10 = aig4table[179].make_and(node0, false, node9, false);
    size_t node11 = aig4table[179].make_literal(2, false);
    size_t node12 = aig4table[179].make_and(node1, false, node5, false);
    size_t node13 = aig4table[179].make_literal(3, false);
    size_t node14 = aig4table[179].make_and(node13, false, node2, false);
    size_t node15 = aig4table[179].make_or(node12, false, node14, false);
    size_t node16 = aig4table[179].make_and(node11, false, node15, false);
    size_t node17 = aig4table[179].make_or(node10, false, node16, false);
    aig4table[179].set_root(node17);
  }
  {
    size_t node0 = aig4table[180].make_literal(0, false);
    size_t node1 = aig4table[180].make_literal(1, true);
    size_t node2 = aig4table[180].make_literal(2, true);
    size_t node3 = aig4table[180].make_or(node1, false, node2, false);
    size_t node4 = aig4table[180].make_or(node0, false, node3, true);
    size_t node5 = aig4table[180].make_literal(3, false);
    size_t node6 = aig4table[180].make_or(node5, false, node3, false);
    size_t node7 = aig4table[180].make_and(node4, false, node6, false);
    size_t node8 = aig4table[180].make_literal(1, false);
    size_t node9 = aig4table[180].make_literal(2, false);
    size_t node10 = aig4table[180].make_literal(3, true);
    size_t node11 = aig4table[180].make_or(node9, false, node10, false);
    size_t node12 = aig4table[180].make_or(node8, false, node11, false);
    size_t node13 = aig4table[180].make_and(node7, false, node12, false);
    aig4table[180].set_root(node13);
  }
  {
    size_t node0 = aig4table[181].make_literal(3, false);
    size_t node1 = aig4table[181].make_literal(1, false);
    size_t node2 = aig4table[181].make_literal(2, true);
    size_t node3 = aig4table[181].make_and(node1, false, node2, false);
    size_t node4 = aig4table[181].make_or(node0, false, node3, false);
    size_t node5 = aig4table[181].make_literal(2, false);
    size_t node6 = aig4table[181].make_literal(3, true);
    size_t node7 = aig4table[181].make_or(node5, false, node6, false);
    size_t node8 = aig4table[181].make_literal(0, true);
    size_t node9 = aig4table[181].make_xor(node8, false, node1, false);
    size_t node10 = aig4table[181].make_and(node7, false, node9, false);
    size_t node11 = aig4table[181].make_and(node4, false, node10, false);
    aig4table[181].set_root(node11);
  }
  {
    size_t node0 = aig4table[182].make_literal(2, false);
    size_t node1 = aig4table[182].make_literal(3, false);
    size_t node2 = aig4table[182].make_literal(0, false);
    size_t node3 = aig4table[182].make_literal(1, false);
    size_t node4 = aig4table[182].make_or(node2, false, node3, false);
    size_t node5 = aig4table[182].make_xor(node0, false, node1, false);
    size_t node6 = aig4table[182].make_and(node4, false, node5, false);
    aig4table[182].set_root(node6);
  }
  {
    size_t node0 = aig4table[183].make_literal(0, false);
    size_t node1 = aig4table[183].make_literal(1, false);
    size_t node2 = aig4table[183].make_literal(2, false);
    size_t node3 = aig4table[183].make_literal(3, false);
    size_t node4 = aig4table[183].make_and(node2, false, node3, false);
    size_t node5 = aig4table[183].make_and(node1, false, node4, true);
    size_t node6 = aig4table[183].make_and(node0, false, node5, false);
    size_t node7 = aig4table[183].make_xor(node0, false, node1, false);
    size_t node8 = aig4table[183].make_and(node4, false, node7, false);
    size_t node9 = aig4table[183].make_or(node6, false, node8, false);
    aig4table[183].set_root(node9);
  }
  {
    size_t node0 = aig4table[184].make_literal(0, false);
    size_t node1 = aig4table[184].make_literal(2, false);
    size_t node2 = aig4table[184].make_literal(1, false);
    size_t node3 = aig4table[184].make_and(node1, false, node2, true);
    size_t node4 = aig4table[184].make_or(node0, true, node3, false);
    size_t node5 = aig4table[184].make_literal(3, false);
    size_t node6 = aig4table[184].make_and(node5, false, node1, false);
    size_t node7 = aig4table[184].make_or(node4, true, node6, false);
    size_t node8 = aig4table[184].make_literal(3, true);
    size_t node9 = aig4table[184].make_literal(0, true);
    size_t node10 = aig4table[184].make_literal(2, true);
    size_t node11 = aig4table[184].make_or(node9, false, node10, false);
    size_t node12 = aig4table[184].make_xor(node2, true, node11, false);
    size_t node13 = aig4table[184].make_or(node8, false, node12, false);
    size_t node14 = aig4table[184].make_and(node7, false, node13, false);
    aig4table[184].set_root(node14);
  }
  {
    size_t node0 = aig4table[185].make_literal(0, false);
    size_t node1 = aig4table[185].make_literal(1, false);
    size_t node2 = aig4table[185].make_literal(2, false);
    size_t node3 = aig4table[185].make_and(node1, false, node2, false);
    size_t node4 = aig4table[185].make_or(node0, false, node3, false);
    size_t node5 = aig4table[185].make_literal(3, true);
    size_t node6 = aig4table[185].make_literal(0, true);
    size_t node7 = aig4table[185].make_literal(2, true);
    size_t node8 = aig4table[185].make_and(node1, false, node7, false);
    size_t node9 = aig4table[185].make_or(node6, false, node8, false);
    size_t node10 = aig4table[185].make_xor(node5, true, node9, false);
    size_t node11 = aig4table[185].make_and(node4, false, node10, false);
    aig4table[185].set_root(node11);
  }
  {
    size_t node0 = aig4table[186].make_literal(3, true);
    size_t node1 = aig4table[186].make_literal(0, false);
    size_t node2 = aig4table[186].make_literal(1, false);
    size_t node3 = aig4table[186].make_and(node1, false, node2, false);
    size_t node4 = aig4table[186].make_literal(2, false);
    size_t node5 = aig4table[186].make_literal(1, true);
    size_t node6 = aig4table[186].make_and(node4, false, node5, false);
    size_t node7 = aig4table[186].make_or(node3, false, node6, false);
    size_t node8 = aig4table[186].make_and(node0, false, node7, false);
    size_t node9 = aig4table[186].make_literal(3, false);
    size_t node10 = aig4table[186].make_literal(0, true);
    size_t node11 = aig4table[186].make_and(node2, false, node10, false);
    size_t node12 = aig4table[186].make_literal(2, true);
    size_t node13 = aig4table[186].make_and(node12, false, node1, false);
    size_t node14 = aig4table[186].make_or(node11, false, node13, false);
    size_t node15 = aig4table[186].make_and(node9, false, node14, false);
    size_t node16 = aig4table[186].make_or(node8, false, node15, false);
    aig4table[186].set_root(node16);
  }
  {
    size_t node0 = aig4table[187].make_literal(0, false);
    size_t node1 = aig4table[187].make_literal(1, false);
    size_t node2 = aig4table[187].make_literal(2, false);
    size_t node3 = aig4table[187].make_literal(3, false);
    size_t node4 = aig4table[187].make_or(node2, false, node3, false);
    size_t node5 = aig4table[187].make_and(node1, false, node4, false);
    size_t node6 = aig4table[187].make_and(node0, false, node5, false);
    aig4table[187].set_root(node6);
  }
  {
    size_t node0 = aig4table[188].make_literal(1, false);
    size_t node1 = aig4table[188].make_literal(3, true);
    size_t node2 = aig4table[188].make_literal(0, true);
    size_t node3 = aig4table[188].make_literal(2, true);
    size_t node4 = aig4table[188].make_and(node2, false, node3, false);
    size_t node5 = aig4table[188].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[188].make_and(node0, false, node5, false);
    size_t node7 = aig4table[188].make_literal(0, false);
    size_t node8 = aig4table[188].make_literal(2, false);
    size_t node9 = aig4table[188].make_literal(1, true);
    size_t node10 = aig4table[188].make_literal(3, false);
    size_t node11 = aig4table[188].make_and(node9, false, node10, false);
    size_t node12 = aig4table[188].make_or(node8, false, node11, false);
    size_t node13 = aig4table[188].make_and(node7, false, node12, false);
    size_t node14 = aig4table[188].make_or(node6, false, node13, false);
    aig4table[188].set_root(node14);
  }
  {
    size_t node0 = aig4table[189].make_literal(0, false);
    size_t node1 = aig4table[189].make_literal(1, false);
    size_t node2 = aig4table[189].make_and(node0, false, node1, false);
    aig4table[189].set_root(node2);
  }
  {
    size_t node0 = aig4table[190].make_literal(1, false);
    size_t node1 = aig4table[190].make_literal(3, true);
    size_t node2 = aig4table[190].make_literal(0, false);
    size_t node3 = aig4table[190].make_literal(2, false);
    size_t node4 = aig4table[190].make_or(node2, false, node3, false);
    size_t node5 = aig4table[190].make_and(node1, false, node4, false);
    size_t node6 = aig4table[190].make_and(node0, false, node5, false);
    size_t node7 = aig4table[190].make_literal(3, false);
    size_t node8 = aig4table[190].make_literal(1, true);
    size_t node9 = aig4table[190].make_and(node8, false, node3, false);
    size_t node10 = aig4table[190].make_xor(node2, false, node9, false);
    size_t node11 = aig4table[190].make_and(node7, false, node10, false);
    size_t node12 = aig4table[190].make_or(node6, false, node11, false);
    aig4table[190].set_root(node12);
  }
  {
    size_t node0 = aig4table[191].make_literal(0, false);
    size_t node1 = aig4table[191].make_literal(1, false);
    size_t node2 = aig4table[191].make_or(node0, false, node1, false);
    size_t node3 = aig4table[191].make_literal(2, false);
    size_t node4 = aig4table[191].make_literal(3, false);
    size_t node5 = aig4table[191].make_or(node3, false, node4, false);
    size_t node6 = aig4table[191].make_and(node0, false, node1, false);
    size_t node7 = aig4table[191].make_or(node5, false, node6, false);
    size_t node8 = aig4table[191].make_and(node2, false, node7, false);
    size_t node9 = aig4table[191].make_literal(1, true);
    size_t node10 = aig4table[191].make_literal(2, true);
    size_t node11 = aig4table[191].make_literal(3, true);
    size_t node12 = aig4table[191].make_or(node10, false, node11, false);
    size_t node13 = aig4table[191].make_or(node9, false, node12, false);
    size_t node14 = aig4table[191].make_and(node8, false, node13, false);
    aig4table[191].set_root(node14);
  }
  {
    size_t node0 = aig4table[192].make_literal(0, false);
    size_t node1 = aig4table[192].make_literal(2, true);
    size_t node2 = aig4table[192].make_literal(1, false);
    size_t node3 = aig4table[192].make_literal(3, true);
    size_t node4 = aig4table[192].make_or(node2, false, node3, false);
    size_t node5 = aig4table[192].make_and(node1, false, node4, false);
    size_t node6 = aig4table[192].make_and(node0, false, node5, false);
    size_t node7 = aig4table[192].make_literal(2, false);
    size_t node8 = aig4table[192].make_literal(0, true);
    size_t node9 = aig4table[192].make_and(node2, false, node8, false);
    size_t node10 = aig4table[192].make_literal(3, false);
    size_t node11 = aig4table[192].make_and(node10, false, node0, false);
    size_t node12 = aig4table[192].make_or(node9, false, node11, false);
    size_t node13 = aig4table[192].make_and(node7, false, node12, false);
    size_t node14 = aig4table[192].make_or(node6, false, node13, false);
    aig4table[192].set_root(node14);
  }
  {
    size_t node0 = aig4table[193].make_literal(0, false);
    size_t node1 = aig4table[193].make_literal(1, false);
    size_t node2 = aig4table[193].make_literal(2, true);
    size_t node3 = aig4table[193].make_and(node1, false, node2, false);
    size_t node4 = aig4table[193].make_and(node0, false, node3, false);
    size_t node5 = aig4table[193].make_literal(2, false);
    size_t node6 = aig4table[193].make_literal(3, false);
    size_t node7 = aig4table[193].make_and(node1, false, node6, false);
    size_t node8 = aig4table[193].make_xor(node0, false, node7, false);
    size_t node9 = aig4table[193].make_and(node5, false, node8, false);
    size_t node10 = aig4table[193].make_or(node4, false, node9, false);
    aig4table[193].set_root(node10);
  }
  {
    size_t node0 = aig4table[194].make_literal(0, false);
    size_t node1 = aig4table[194].make_literal(1, false);
    size_t node2 = aig4table[194].make_literal(2, false);
    size_t node3 = aig4table[194].make_and(node1, false, node2, false);
    size_t node4 = aig4table[194].make_literal(1, true);
    size_t node5 = aig4table[194].make_literal(2, true);
    size_t node6 = aig4table[194].make_literal(3, false);
    size_t node7 = aig4table[194].make_and(node5, false, node6, false);
    size_t node8 = aig4table[194].make_and(node4, false, node7, false);
    size_t node9 = aig4table[194].make_or(node3, false, node8, false);
    size_t node10 = aig4table[194].make_and(node0, false, node9, false);
    aig4table[194].set_root(node10);
  }
  {
    size_t node0 = aig4table[195].make_literal(0, false);
    size_t node1 = aig4table[195].make_literal(1, true);
    size_t node2 = aig4table[195].make_literal(2, true);
    size_t node3 = aig4table[195].make_literal(3, true);
    size_t node4 = aig4table[195].make_or(node2, false, node3, false);
    size_t node5 = aig4table[195].make_and(node1, false, node4, false);
    size_t node6 = aig4table[195].make_and(node0, false, node5, false);
    size_t node7 = aig4table[195].make_literal(1, false);
    size_t node8 = aig4table[195].make_literal(2, false);
    size_t node9 = aig4table[195].make_literal(0, true);
    size_t node10 = aig4table[195].make_literal(3, false);
    size_t node11 = aig4table[195].make_and(node9, false, node10, false);
    size_t node12 = aig4table[195].make_or(node8, false, node11, false);
    size_t node13 = aig4table[195].make_and(node7, false, node12, false);
    size_t node14 = aig4table[195].make_or(node6, false, node13, false);
    aig4table[195].set_root(node14);
  }
  {
    size_t node0 = aig4table[196].make_literal(0, false);
    size_t node1 = aig4table[196].make_literal(1, false);
    size_t node2 = aig4table[196].make_literal(2, false);
    size_t node3 = aig4table[196].make_and(node1, false, node2, false);
    size_t node4 = aig4table[196].make_literal(3, false);
    size_t node5 = aig4table[196].make_or(node1, false, node2, false);
    size_t node6 = aig4table[196].make_and(node4, false, node5, false);
    size_t node7 = aig4table[196].make_or(node3, false, node6, false);
    size_t node8 = aig4table[196].make_and(node0, false, node7, false);
    aig4table[196].set_root(node8);
  }
  {
    size_t node0 = aig4table[197].make_literal(0, true);
    size_t node1 = aig4table[197].make_literal(3, false);
    size_t node2 = aig4table[197].make_literal(1, false);
    size_t node3 = aig4table[197].make_literal(2, false);
    size_t node4 = aig4table[197].make_and(node2, false, node3, false);
    size_t node5 = aig4table[197].make_or(node1, false, node4, false);
    size_t node6 = aig4table[197].make_or(node0, false, node5, false);
    size_t node7 = aig4table[197].make_literal(0, false);
    size_t node8 = aig4table[197].make_or(node2, false, node3, false);
    size_t node9 = aig4table[197].make_or(node7, false, node8, true);
    size_t node10 = aig4table[197].make_literal(3, true);
    size_t node11 = aig4table[197].make_or(node10, false, node8, false);
    size_t node12 = aig4table[197].make_and(node9, false, node11, false);
    size_t node13 = aig4table[197].make_and(node6, false, node12, false);
    aig4table[197].set_root(node13);
  }
  {
    size_t node0 = aig4table[198].make_literal(0, false);
    size_t node1 = aig4table[198].make_literal(1, false);
    size_t node2 = aig4table[198].make_literal(2, true);
    size_t node3 = aig4table[198].make_and(node1, false, node2, false);
    size_t node4 = aig4table[198].make_and(node0, false, node3, false);
    size_t node5 = aig4table[198].make_literal(1, true);
    size_t node6 = aig4table[198].make_literal(3, true);
    size_t node7 = aig4table[198].make_or(node5, false, node6, false);
    size_t node8 = aig4table[198].make_literal(3, false);
    size_t node9 = aig4table[198].make_literal(2, false);
    size_t node10 = aig4table[198].make_or(node8, false, node9, false);
    size_t node11 = aig4table[198].make_or(node1, false, node0, false);
    size_t node12 = aig4table[198].make_or(node11, false, node9, true);
    size_t node13 = aig4table[198].make_and(node10, false, node12, false);
    size_t node14 = aig4table[198].make_and(node7, false, node13, false);
    size_t node15 = aig4table[198].make_or(node4, false, node14, false);
    aig4table[198].set_root(node15);
  }
  {
    size_t node0 = aig4table[199].make_literal(0, false);
    size_t node1 = aig4table[199].make_literal(1, false);
    size_t node2 = aig4table[199].make_literal(2, false);
    size_t node3 = aig4table[199].make_literal(3, true);
    size_t node4 = aig4table[199].make_or(node2, false, node3, false);
    size_t node5 = aig4table[199].make_or(node1, false, node4, false);
    size_t node6 = aig4table[199].make_literal(3, false);
    size_t node7 = aig4table[199].make_xor(node1, true, node2, false);
    size_t node8 = aig4table[199].make_or(node6, false, node7, false);
    size_t node9 = aig4table[199].make_and(node5, false, node8, false);
    size_t node10 = aig4table[199].make_and(node0, false, node9, false);
    aig4table[199].set_root(node10);
  }
  {
    size_t node0 = aig4table[200].make_literal(0, false);
    size_t node1 = aig4table[200].make_literal(1, false);
    size_t node2 = aig4table[200].make_literal(2, false);
    size_t node3 = aig4table[200].make_literal(3, false);
    size_t node4 = aig4table[200].make_and(node2, false, node3, false);
    size_t node5 = aig4table[200].make_or(node1, false, node4, false);
    size_t node6 = aig4table[200].make_and(node0, false, node5, false);
    aig4table[200].set_root(node6);
  }
  {
    size_t node0 = aig4table[201].make_literal(0, false);
    size_t node1 = aig4table[201].make_literal(1, false);
    size_t node2 = aig4table[201].make_or(node0, false, node1, false);
    size_t node3 = aig4table[201].make_literal(2, false);
    size_t node4 = aig4table[201].make_literal(3, false);
    size_t node5 = aig4table[201].make_and(node3, false, node4, false);
    size_t node6 = aig4table[201].make_literal(0, true);
    size_t node7 = aig4table[201].make_literal(3, true);
    size_t node8 = aig4table[201].make_and(node6, false, node7, false);
    size_t node9 = aig4table[201].make_literal(1, true);
    size_t node10 = aig4table[201].make_literal(2, true);
    size_t node11 = aig4table[201].make_and(node9, false, node10, false);
    size_t node12 = aig4table[201].make_or(node8, false, node11, false);
    size_t node13 = aig4table[201].make_or(node5, false, node12, false);
    size_t node14 = aig4table[201].make_and(node2, false, node13, false);
    aig4table[201].set_root(node14);
  }
  {
    size_t node0 = aig4table[202].make_literal(0, false);
    size_t node1 = aig4table[202].make_literal(1, false);
    size_t node2 = aig4table[202].make_literal(2, false);
    size_t node3 = aig4table[202].make_or(node1, false, node2, false);
    size_t node4 = aig4table[202].make_and(node0, false, node3, false);
    size_t node5 = aig4table[202].make_literal(3, false);
    size_t node6 = aig4table[202].make_literal(1, true);
    size_t node7 = aig4table[202].make_literal(2, true);
    size_t node8 = aig4table[202].make_or(node6, false, node7, false);
    size_t node9 = aig4table[202].make_and(node5, false, node8, false);
    size_t node10 = aig4table[202].make_or(node4, false, node9, false);
    size_t node11 = aig4table[202].make_literal(3, true);
    size_t node12 = aig4table[202].make_literal(0, true);
    size_t node13 = aig4table[202].make_xor(node12, true, node3, false);
    size_t node14 = aig4table[202].make_or(node11, false, node13, false);
    size_t node15 = aig4table[202].make_and(node10, false, node14, false);
    aig4table[202].set_root(node15);
  }
  {
    size_t node0 = aig4table[203].make_literal(0, false);
    size_t node1 = aig4table[203].make_literal(1, false);
    size_t node2 = aig4table[203].make_or(node0, false, node1, false);
    size_t node3 = aig4table[203].make_literal(0, true);
    size_t node4 = aig4table[203].make_literal(2, true);
    size_t node5 = aig4table[203].make_literal(3, true);
    size_t node6 = aig4table[203].make_or(node4, false, node5, false);
    size_t node7 = aig4table[203].make_or(node3, false, node6, false);
    size_t node8 = aig4table[203].make_literal(1, true);
    size_t node9 = aig4table[203].make_literal(2, false);
    size_t node10 = aig4table[203].make_literal(3, false);
    size_t node11 = aig4table[203].make_or(node9, false, node10, false);
    size_t node12 = aig4table[203].make_or(node8, false, node11, false);
    size_t node13 = aig4table[203].make_and(node7, false, node12, false);
    size_t node14 = aig4table[203].make_and(node2, false, node13, false);
    aig4table[203].set_root(node14);
  }
  {
    size_t node0 = aig4table[204].make_literal(0, false);
    size_t node1 = aig4table[204].make_literal(1, false);
    size_t node2 = aig4table[204].make_or(node0, false, node1, false);
    size_t node3 = aig4table[204].make_literal(0, true);
    size_t node4 = aig4table[204].make_literal(3, false);
    size_t node5 = aig4table[204].make_or(node3, false, node4, false);
    size_t node6 = aig4table[204].make_literal(1, true);
    size_t node7 = aig4table[204].make_literal(2, false);
    size_t node8 = aig4table[204].make_or(node6, false, node7, false);
    size_t node9 = aig4table[204].make_xor(node5, true, node8, false);
    size_t node10 = aig4table[204].make_and(node2, false, node9, false);
    aig4table[204].set_root(node10);
  }
  {
    size_t node0 = aig4table[205].make_literal(0, true);
    size_t node1 = aig4table[205].make_literal(3, false);
    size_t node2 = aig4table[205].make_or(node0, false, node1, false);
    size_t node3 = aig4table[205].make_literal(1, true);
    size_t node4 = aig4table[205].make_literal(2, false);
    size_t node5 = aig4table[205].make_or(node3, false, node4, false);
    size_t node6 = aig4table[205].make_xor(node2, true, node5, false);
    size_t node7 = aig4table[205].make_literal(0, false);
    size_t node8 = aig4table[205].make_literal(1, false);
    size_t node9 = aig4table[205].make_literal(2, true);
    size_t node10 = aig4table[205].make_literal(3, true);
    size_t node11 = aig4table[205].make_and(node9, false, node10, false);
    size_t node12 = aig4table[205].make_or(node8, false, node11, false);
    size_t node13 = aig4table[205].make_or(node7, false, node12, false);
    size_t node14 = aig4table[205].make_and(node6, false, node13, false);
    aig4table[205].set_root(node14);
  }
  {
    size_t node0 = aig4table[206].make_literal(0, false);
    size_t node1 = aig4table[206].make_literal(3, false);
    size_t node2 = aig4table[206].make_or(node0, false, node1, false);
    size_t node3 = aig4table[206].make_literal(1, false);
    size_t node4 = aig4table[206].make_literal(2, false);
    size_t node5 = aig4table[206].make_or(node3, false, node4, false);
    size_t node6 = aig4table[206].make_and(node2, false, node5, false);
    size_t node7 = aig4table[206].make_literal(1, true);
    size_t node8 = aig4table[206].make_literal(2, true);
    size_t node9 = aig4table[206].make_literal(3, true);
    size_t node10 = aig4table[206].make_or(node8, false, node9, false);
    size_t node11 = aig4table[206].make_or(node7, false, node10, false);
    size_t node12 = aig4table[206].make_and(node6, false, node11, false);
    aig4table[206].set_root(node12);
  }
  {
    size_t node0 = aig4table[207].make_literal(0, false);
    size_t node1 = aig4table[207].make_literal(1, false);
    size_t node2 = aig4table[207].make_or(node0, false, node1, false);
    size_t node3 = aig4table[207].make_literal(2, false);
    size_t node4 = aig4table[207].make_literal(0, true);
    size_t node5 = aig4table[207].make_literal(3, false);
    size_t node6 = aig4table[207].make_or(node4, false, node5, false);
    size_t node7 = aig4table[207].make_or(node3, true, node6, false);
    size_t node8 = aig4table[207].make_literal(1, true);
    size_t node9 = aig4table[207].make_or(node6, true, node8, false);
    size_t node10 = aig4table[207].make_or(node3, false, node9, false);
    size_t node11 = aig4table[207].make_and(node7, false, node10, false);
    size_t node12 = aig4table[207].make_and(node2, false, node11, false);
    aig4table[207].set_root(node12);
  }
  {
    size_t node0 = aig4table[208].make_literal(0, false);
    size_t node1 = aig4table[208].make_literal(3, false);
    size_t node2 = aig4table[208].make_literal(1, false);
    size_t node3 = aig4table[208].make_literal(2, false);
    size_t node4 = aig4table[208].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[208].make_and(node0, false, node1, true);
    size_t node6 = aig4table[208].make_and(node4, false, node1, false);
    size_t node7 = aig4table[208].make_or(node5, false, node6, false);
    aig4table[208].set_root(node7);
  }
  {
    size_t node0 = aig4table[209].make_literal(0, false);
    size_t node1 = aig4table[209].make_literal(2, true);
    size_t node2 = aig4table[209].make_literal(3, true);
    size_t node3 = aig4table[209].make_and(node1, false, node2, false);
    size_t node4 = aig4table[209].make_and(node0, false, node3, false);
    size_t node5 = aig4table[209].make_literal(1, false);
    size_t node6 = aig4table[209].make_literal(3, false);
    size_t node7 = aig4table[209].make_literal(2, false);
    size_t node8 = aig4table[209].make_and(node7, false, node0, true);
    size_t node9 = aig4table[209].make_xor(node6, true, node8, false);
    size_t node10 = aig4table[209].make_and(node5, false, node9, true);
    size_t node11 = aig4table[209].make_and(node9, false, node7, false);
    size_t node12 = aig4table[209].make_and(node5, true, node11, false);
    size_t node13 = aig4table[209].make_or(node10, false, node12, false);
    size_t node14 = aig4table[209].make_or(node4, false, node13, false);
    aig4table[209].set_root(node14);
  }
  {
    size_t node0 = aig4table[210].make_literal(0, false);
    size_t node1 = aig4table[210].make_literal(1, false);
    size_t node2 = aig4table[210].make_literal(2, true);
    size_t node3 = aig4table[210].make_and(node1, false, node2, false);
    size_t node4 = aig4table[210].make_and(node0, false, node3, false);
    size_t node5 = aig4table[210].make_literal(2, false);
    size_t node6 = aig4table[210].make_or(node0, false, node1, false);
    size_t node7 = aig4table[210].make_literal(0, true);
    size_t node8 = aig4table[210].make_literal(1, true);
    size_t node9 = aig4table[210].make_literal(3, false);
    size_t node10 = aig4table[210].make_or(node8, false, node9, false);
    size_t node11 = aig4table[210].make_or(node7, false, node10, false);
    size_t node12 = aig4table[210].make_and(node6, false, node11, false);
    size_t node13 = aig4table[210].make_and(node5, false, node12, false);
    size_t node14 = aig4table[210].make_or(node4, false, node13, false);
    aig4table[210].set_root(node14);
  }
  {
    size_t node0 = aig4table[211].make_literal(0, false);
    size_t node1 = aig4table[211].make_literal(2, false);
    size_t node2 = aig4table[211].make_literal(3, false);
    size_t node3 = aig4table[211].make_and(node1, false, node2, false);
    size_t node4 = aig4table[211].make_or(node0, false, node3, false);
    size_t node5 = aig4table[211].make_literal(1, false);
    size_t node6 = aig4table[211].make_or(node1, false, node2, false);
    size_t node7 = aig4table[211].make_xor(node5, true, node6, false);
    size_t node8 = aig4table[211].make_and(node4, false, node7, false);
    aig4table[211].set_root(node8);
  }
  {
    size_t node0 = aig4table[212].make_literal(0, false);
    size_t node1 = aig4table[212].make_literal(1, false);
    size_t node2 = aig4table[212].make_literal(2, true);
    size_t node3 = aig4table[212].make_and(node1, false, node2, false);
    size_t node4 = aig4table[212].make_and(node0, false, node3, false);
    size_t node5 = aig4table[212].make_literal(3, false);
    size_t node6 = aig4table[212].make_literal(0, true);
    size_t node7 = aig4table[212].make_xor(node6, false, node1, false);
    size_t node8 = aig4table[212].make_and(node5, false, node7, false);
    size_t node9 = aig4table[212].make_literal(2, false);
    size_t node10 = aig4table[212].make_and(node7, true, node9, false);
    size_t node11 = aig4table[212].make_and(node5, true, node10, false);
    size_t node12 = aig4table[212].make_or(node8, false, node11, false);
    size_t node13 = aig4table[212].make_or(node4, false, node12, false);
    aig4table[212].set_root(node13);
  }
  {
    size_t node0 = aig4table[213].make_literal(0, false);
    size_t node1 = aig4table[213].make_literal(2, true);
    size_t node2 = aig4table[213].make_literal(1, true);
    size_t node3 = aig4table[213].make_literal(3, true);
    size_t node4 = aig4table[213].make_and(node2, false, node3, false);
    size_t node5 = aig4table[213].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[213].make_and(node0, false, node5, false);
    size_t node7 = aig4table[213].make_literal(0, true);
    size_t node8 = aig4table[213].make_literal(1, false);
    size_t node9 = aig4table[213].make_literal(2, false);
    size_t node10 = aig4table[213].make_and(node8, false, node9, false);
    size_t node11 = aig4table[213].make_and(node7, false, node10, false);
    size_t node12 = aig4table[213].make_or(node6, false, node11, false);
    aig4table[213].set_root(node12);
  }
  {
    size_t node0 = aig4table[214].make_literal(0, false);
    size_t node1 = aig4table[214].make_literal(1, false);
    size_t node2 = aig4table[214].make_or(node0, false, node1, false);
    size_t node3 = aig4table[214].make_literal(2, false);
    size_t node4 = aig4table[214].make_literal(3, false);
    size_t node5 = aig4table[214].make_or(node3, false, node4, false);
    size_t node6 = aig4table[214].make_and(node2, false, node5, false);
    size_t node7 = aig4table[214].make_literal(0, true);
    size_t node8 = aig4table[214].make_literal(1, true);
    size_t node9 = aig4table[214].make_literal(2, true);
    size_t node10 = aig4table[214].make_literal(3, true);
    size_t node11 = aig4table[214].make_or(node9, false, node10, false);
    size_t node12 = aig4table[214].make_or(node8, false, node11, false);
    size_t node13 = aig4table[214].make_or(node7, false, node12, false);
    size_t node14 = aig4table[214].make_and(node6, false, node13, false);
    aig4table[214].set_root(node14);
  }
  {
    size_t node0 = aig4table[215].make_literal(0, false);
    size_t node1 = aig4table[215].make_literal(2, false);
    size_t node2 = aig4table[215].make_literal(3, false);
    size_t node3 = aig4table[215].make_and(node1, false, node2, false);
    size_t node4 = aig4table[215].make_or(node0, false, node3, false);
    size_t node5 = aig4table[215].make_literal(1, false);
    size_t node6 = aig4table[215].make_literal(2, true);
    size_t node7 = aig4table[215].make_literal(3, true);
    size_t node8 = aig4table[215].make_and(node6, false, node7, false);
    size_t node9 = aig4table[215].make_or(node5, false, node8, false);
    size_t node10 = aig4table[215].make_and(node4, false, node9, false);
    aig4table[215].set_root(node10);
  }
  {
    size_t node0 = aig4table[216].make_literal(0, false);
    size_t node1 = aig4table[216].make_literal(1, false);
    size_t node2 = aig4table[216].make_literal(2, false);
    size_t node3 = aig4table[216].make_literal(3, false);
    size_t node4 = aig4table[216].make_and(node2, false, node3, false);
    size_t node5 = aig4table[216].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[216].make_xor(node0, false, node5, false);
    aig4table[216].set_root(node6);
  }
  {
    size_t node0 = aig4table[217].make_literal(2, false);
    size_t node1 = aig4table[217].make_literal(3, false);
    size_t node2 = aig4table[217].make_literal(0, false);
    size_t node3 = aig4table[217].make_literal(1, false);
    size_t node4 = aig4table[217].make_or(node2, false, node3, false);
    size_t node5 = aig4table[217].make_and(node0, false, node1, false);
    size_t node6 = aig4table[217].make_and(node1, true, node4, false);
    size_t node7 = aig4table[217].make_and(node0, true, node6, false);
    size_t node8 = aig4table[217].make_or(node5, false, node7, false);
    aig4table[217].set_root(node8);
  }
  {
    size_t node0 = aig4table[218].make_literal(1, false);
    size_t node1 = aig4table[218].make_literal(2, false);
    size_t node2 = aig4table[218].make_literal(3, false);
    size_t node3 = aig4table[218].make_or(node1, false, node2, false);
    size_t node4 = aig4table[218].make_or(node0, false, node3, false);
    size_t node5 = aig4table[218].make_literal(0, false);
    size_t node6 = aig4table[218].make_literal(2, true);
    size_t node7 = aig4table[218].make_literal(3, true);
    size_t node8 = aig4table[218].make_xor(node6, true, node7, false);
    size_t node9 = aig4table[218].make_xor(node0, true, node8, false);
    size_t node10 = aig4table[218].make_xor(node5, true, node9, false);
    size_t node11 = aig4table[218].make_and(node4, false, node10, false);
    aig4table[218].set_root(node11);
  }
  {
    size_t node0 = aig4table[219].make_literal(0, false);
    size_t node1 = aig4table[219].make_literal(1, true);
    size_t node2 = aig4table[219].make_literal(2, false);
    size_t node3 = aig4table[219].make_literal(3, false);
    size_t node4 = aig4table[219].make_xor(node2, false, node3, false);
    size_t node5 = aig4table[219].make_xor(node1, false, node4, false);
    size_t node6 = aig4table[219].make_xor(node0, false, node5, false);
    aig4table[219].set_root(node6);
  }
  {
    size_t node0 = aig4table[220].make_literal(0, false);
    size_t node1 = aig4table[220].make_literal(1, false);
    size_t node2 = aig4table[220].make_literal(2, false);
    size_t node3 = aig4table[220].make_literal(3, true);
    size_t node4 = aig4table[220].make_and(node2, false, node3, false);
    size_t node5 = aig4table[220].make_and(node1, false, node4, false);
    size_t node6 = aig4table[220].make_literal(3, false);
    size_t node7 = aig4table[220].make_xor(node1, false, node2, false);
    size_t node8 = aig4table[220].make_and(node6, false, node7, false);
    size_t node9 = aig4table[220].make_or(node5, false, node8, false);
    size_t node10 = aig4table[220].make_xor(node0, false, node9, false);
    aig4table[220].set_root(node10);
  }
  {
    size_t node0 = aig4table[221].make_literal(0, false);
    size_t node1 = aig4table[221].make_literal(1, false);
    size_t node2 = aig4table[221].make_literal(2, false);
    size_t node3 = aig4table[221].make_or(node1, false, node2, false);
    size_t node4 = aig4table[221].make_and(node0, false, node3, false);
    aig4table[221].set_root(node4);
  }
  npn4map.insert(make_pair(0x0U, 0));
  npn4map.insert(make_pair(0xc282U, 1));
  npn4map.insert(make_pair(0xe880U, 2));
  npn4map.insert(make_pair(0x62c8U, 3));
  npn4map.insert(make_pair(0xe881U, 4));
  npn4map.insert(make_pair(0xe882U, 5));
  npn4map.insert(make_pair(0xe883U, 6));
  npn4map.insert(make_pair(0xe886U, 7));
  npn4map.insert(make_pair(0x8ee0U, 8));
  npn4map.insert(make_pair(0x6a68U, 9));
  npn4map.insert(make_pair(0xe888U, 10));
  npn4map.insert(make_pair(0xe889U, 11));
  npn4map.insert(make_pair(0x6a6aU, 12));
  npn4map.insert(make_pair(0x56aaU, 13));
  npn4map.insert(make_pair(0xe88aU, 14));
  npn4map.insert(make_pair(0x8ee8U, 15));
  npn4map.insert(make_pair(0xc8a8U, 16));
  npn4map.insert(make_pair(0xe898U, 17));
  npn4map.insert(make_pair(0x2aa8U, 18));
  npn4map.insert(make_pair(0x782eU, 19));
  npn4map.insert(make_pair(0x4a98U, 20));
  npn4map.insert(make_pair(0x9818U, 21));
  npn4map.insert(make_pair(0xc2a4U, 22));
  npn4map.insert(make_pair(0x9696U, 23));
  npn4map.insert(make_pair(0xc2a8U, 24));
  npn4map.insert(make_pair(0xe8a8U, 25));
  npn4map.insert(make_pair(0xe41aU, 26));
  npn4map.insert(make_pair(0x9088U, 27));
  npn4map.insert(make_pair(0xe8aaU, 28));
  npn4map.insert(make_pair(0x4aa4U, 29));
  npn4map.insert(make_pair(0x4aa8U, 30));
  npn4map.insert(make_pair(0x2ac0U, 31));
  npn4map.insert(make_pair(0xaa64U, 32));
  npn4map.insert(make_pair(0x1888U, 33));
  npn4map.insert(make_pair(0xaa68U, 34));
  npn4map.insert(make_pair(0x96a8U, 35));
  npn4map.insert(make_pair(0x96aaU, 36));
  npn4map.insert(make_pair(0xbca8U, 37));
  npn4map.insert(make_pair(0xe2acU, 38));
  npn4map.insert(make_pair(0x6aa8U, 39));
  npn4map.insert(make_pair(0x6aa9U, 40));
  npn4map.insert(make_pair(0x6aaaU, 41));
  npn4map.insert(make_pair(0x660U, 42));
  npn4map.insert(make_pair(0x6008U, 43));
  npn4map.insert(make_pair(0x4ac2U, 44));
  npn4map.insert(make_pair(0x6aacU, 45));
  npn4map.insert(make_pair(0xca68U, 46));
  npn4map.insert(make_pair(0xb82cU, 47));
  npn4map.insert(make_pair(0x724eU, 48));
  npn4map.insert(make_pair(0x8180U, 49));
  npn4map.insert(make_pair(0x8181U, 50));
  npn4map.insert(make_pair(0x8000U, 51));
  npn4map.insert(make_pair(0x8001U, 52));
  npn4map.insert(make_pair(0x8002U, 53));
  npn4map.insert(make_pair(0x2968U, 54));
  npn4map.insert(make_pair(0x8aa8U, 55));
  npn4map.insert(make_pair(0xe2caU, 56));
  npn4map.insert(make_pair(0x6ac2U, 57));
  npn4map.insert(make_pair(0xaa94U, 58));
  npn4map.insert(make_pair(0xea68U, 59));
  npn4map.insert(make_pair(0x588aU, 60));
  npn4map.insert(make_pair(0x6ac8U, 61));
  npn4map.insert(make_pair(0xe8e8U, 62));
  npn4map.insert(make_pair(0x6acaU, 63));
  npn4map.insert(make_pair(0x9868U, 64));
  npn4map.insert(make_pair(0xaaa8U, 65));
  npn4map.insert(make_pair(0xf08eU, 66));
  npn4map.insert(make_pair(0x96e8U, 67));
  npn4map.insert(make_pair(0x8ac0U, 68));
  npn4map.insert(make_pair(0xaaaaU, 69));
  npn4map.insert(make_pair(0x7886U, 70));
  npn4map.insert(make_pair(0x7888U, 71));
  npn4map.insert(make_pair(0x7889U, 72));
  npn4map.insert(make_pair(0x6c62U, 73));
  npn4map.insert(make_pair(0xca98U, 74));
  npn4map.insert(make_pair(0x1ee8U, 75));
  npn4map.insert(make_pair(0x6c6aU, 76));
  npn4map.insert(make_pair(0x6ae8U, 77));
  npn4map.insert(make_pair(0x665aU, 78));
  npn4map.insert(make_pair(0xcaa4U, 79));
  npn4map.insert(make_pair(0xa4a8U, 80));
  npn4map.insert(make_pair(0x6968U, 81));
  npn4map.insert(make_pair(0xcaa8U, 82));
  npn4map.insert(make_pair(0xaac0U, 83));
  npn4map.insert(make_pair(0x696aU, 84));
  npn4map.insert(make_pair(0xcaaaU, 85));
  npn4map.insert(make_pair(0xaac1U, 86));
  npn4map.insert(make_pair(0xaac2U, 87));
  npn4map.insert(make_pair(0x9886U, 88));
  npn4map.insert(make_pair(0xcaacU, 89));
  npn4map.insert(make_pair(0xc00aU, 90));
  npn4map.insert(make_pair(0x9888U, 91));
  npn4map.insert(make_pair(0x988aU, 92));
  npn4map.insert(make_pair(0x6666U, 93));
  npn4map.insert(make_pair(0xaac8U, 94));
  npn4map.insert(make_pair(0x6668U, 95));
  npn4map.insert(make_pair(0xc4a2U, 96));
  npn4map.insert(make_pair(0x8960U, 97));
  npn4map.insert(make_pair(0x9898U, 98));
  npn4map.insert(make_pair(0x2828U, 99));
  npn4map.insert(make_pair(0xeaa8U, 100));
  npn4map.insert(make_pair(0xe006U, 101));
  npn4map.insert(make_pair(0x8660U, 102));
  npn4map.insert(make_pair(0xcac2U, 103));
  npn4map.insert(make_pair(0xe008U, 104));
  npn4map.insert(make_pair(0xe009U, 105));
  npn4map.insert(make_pair(0xac62U, 106));
  npn4map.insert(make_pair(0x8668U, 107));
  npn4map.insert(make_pair(0xcacaU, 108));
  npn4map.insert(make_pair(0xe4a8U, 109));
  npn4map.insert(make_pair(0xe4aaU, 110));
  npn4map.insert(make_pair(0x4828U, 111));
  npn4map.insert(make_pair(0xa968U, 112));
  npn4map.insert(make_pair(0xd88aU, 113));
  npn4map.insert(make_pair(0x6818U, 114));
  npn4map.insert(make_pair(0xeac8U, 115));
  npn4map.insert(make_pair(0x43a8U, 116));
  npn4map.insert(make_pair(0x6088U, 117));
  npn4map.insert(make_pair(0x69a8U, 118));
  npn4map.insert(make_pair(0xcae8U, 119));
  npn4map.insert(make_pair(0x4228U, 120));
  npn4map.insert(make_pair(0x6828U, 121));
  npn4map.insert(make_pair(0xc96aU, 122));
  npn4map.insert(make_pair(0x8998U, 123));
  npn4map.insert(make_pair(0x682aU, 124));
  npn4map.insert(make_pair(0xf888U, 125));
  npn4map.insert(make_pair(0xec62U, 126));
  npn4map.insert(make_pair(0x8080U, 127));
  npn4map.insert(make_pair(0xc66aU, 128));
  npn4map.insert(make_pair(0x880U, 129));
  npn4map.insert(make_pair(0xe968U, 130));
  npn4map.insert(make_pair(0x1ac8U, 131));
  npn4map.insert(make_pair(0xe668U, 132));
  npn4map.insert(make_pair(0xd2acU, 133));
  npn4map.insert(make_pair(0xa088U, 134));
  npn4map.insert(make_pair(0xa9a8U, 135));
  npn4map.insert(make_pair(0x2880U, 136));
  npn4map.insert(make_pair(0xa824U, 137));
  npn4map.insert(make_pair(0x8228U, 138));
  npn4map.insert(make_pair(0x6ce2U, 139));
  npn4map.insert(make_pair(0xa828U, 140));
  npn4map.insert(make_pair(0x5aacU, 141));
  npn4map.insert(make_pair(0x2888U, 142));
  npn4map.insert(make_pair(0x6248U, 143));
  npn4map.insert(make_pair(0x624aU, 144));
  npn4map.insert(make_pair(0x69e8U, 145));
  npn4map.insert(make_pair(0x83c2U, 146));
  npn4map.insert(make_pair(0x6868U, 147));
  npn4map.insert(make_pair(0x4882U, 148));
  npn4map.insert(make_pair(0xa9c2U, 149));
  npn4map.insert(make_pair(0x1968U, 150));
  npn4map.insert(make_pair(0x66e8U, 151));
  npn4map.insert(make_pair(0xc828U, 152));
  npn4map.insert(make_pair(0xc82aU, 153));
  npn4map.insert(make_pair(0xa842U, 154));
  npn4map.insert(make_pair(0x17e8U, 155));
  npn4map.insert(make_pair(0x89e0U, 156));
  npn4map.insert(make_pair(0xe816U, 157));
  npn4map.insert(make_pair(0x8e70U, 158));
  npn4map.insert(make_pair(0xe818U, 159));
  npn4map.insert(make_pair(0xe819U, 160));
  npn4map.insert(make_pair(0x700eU, 161));
  npn4map.insert(make_pair(0x1668U, 162));
  npn4map.insert(make_pair(0x5acaU, 163));
  npn4map.insert(make_pair(0x3c6aU, 164));
  npn4map.insert(make_pair(0x86e0U, 165));
  npn4map.insert(make_pair(0xc3a8U, 166));
  npn4map.insert(make_pair(0xe088U, 167));
  npn4map.insert(make_pair(0xe08aU, 168));
  npn4map.insert(make_pair(0x4282U, 169));
  npn4map.insert(make_pair(0x6880U, 170));
  npn4map.insert(make_pair(0x6881U, 171));
  npn4map.insert(make_pair(0xc228U, 172));
  npn4map.insert(make_pair(0xe826U, 173));
  npn4map.insert(make_pair(0x6882U, 174));
  npn4map.insert(make_pair(0xc229U, 175));
  npn4map.insert(make_pair(0xc22aU, 176));
  npn4map.insert(make_pair(0xe828U, 177));
  npn4map.insert(make_pair(0x9006U, 178));
  npn4map.insert(make_pair(0xe829U, 179));
  npn4map.insert(make_pair(0xe82aU, 180));
  npn4map.insert(make_pair(0x9008U, 181));
  npn4map.insert(make_pair(0xee0U, 182));
  npn4map.insert(make_pair(0x6888U, 183));
  npn4map.insert(make_pair(0x688aU, 184));
  npn4map.insert(make_pair(0xa248U, 185));
  npn4map.insert(make_pair(0x4eb8U, 186));
  npn4map.insert(make_pair(0x8880U, 187));
  npn4map.insert(make_pair(0xa6e8U, 188));
  npn4map.insert(make_pair(0x8888U, 189));
  npn4map.insert(make_pair(0x9ac8U, 190));
  npn4map.insert(make_pair(0x2ee8U, 191));
  npn4map.insert(make_pair(0xe84aU, 192));
  npn4map.insert(make_pair(0x68a8U, 193));
  npn4map.insert(make_pair(0x8280U, 194));
  npn4map.insert(make_pair(0xc6e2U, 195));
  npn4map.insert(make_pair(0xa880U, 196));
  npn4map.insert(make_pair(0xa881U, 197));
  npn4map.insert(make_pair(0x2be8U, 198));
  npn4map.insert(make_pair(0xa882U, 199));
  npn4map.insert(make_pair(0xa888U, 200));
  npn4map.insert(make_pair(0xe246U, 201));
  npn4map.insert(make_pair(0x16a8U, 202));
  npn4map.insert(make_pair(0x4ee2U, 203));
  npn4map.insert(make_pair(0xe248U, 204));
  npn4map.insert(make_pair(0xe249U, 205));
  npn4map.insert(make_pair(0x3ca8U, 206));
  npn4map.insert(make_pair(0xe24aU, 207));
  npn4map.insert(make_pair(0x3caaU, 208));
  npn4map.insert(make_pair(0x9c6aU, 209));
  npn4map.insert(make_pair(0xe868U, 210));
  npn4map.insert(make_pair(0xc882U, 211));
  npn4map.insert(make_pair(0x9968U, 212));
  npn4map.insert(make_pair(0x4a68U, 213));
  npn4map.insert(make_pair(0x6ee0U, 214));
  npn4map.insert(make_pair(0xc88aU, 215));
  npn4map.insert(make_pair(0x9666U, 216));
  npn4map.insert(make_pair(0xf00eU, 217));
  npn4map.insert(make_pair(0x9668U, 218));
  npn4map.insert(make_pair(0x9669U, 219));
  npn4map.insert(make_pair(0x966aU, 220));
  npn4map.insert(make_pair(0xa8a8U, 221));
