#ifndef EQNODE_H
#define EQNODE_H

/// @file EqNode.h
/// @brief EqNode のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2015 Yusuke Matsunaga
/// All rights reserved.


#include "nlink_nsdef.h"


BEGIN_NAMESPACE_YM_NLINK

class EqEdge;

//////////////////////////////////////////////////////////////////////
/// @class EqNode EqNode.h "EqNode.h"
/// @brief equality logic の変数を表すノード
//////////////////////////////////////////////////////////////////////
class EqNode
{
  friend class EqSolver;

public:

  /// @brief コンストラクタ
  /// @param[in] id ノード番号
  EqNode(ymuint id);

  /// @brief デストラクタ
  ~EqNode();


public:
  //////////////////////////////////////////////////////////////////////
  // 外部インターフェイス
  //////////////////////////////////////////////////////////////////////

  /// @brief ID番号を返す．
  ymuint
  id() const;

  /// @brief 枝のリストを返す．
  const vector<EqEdge*>&
  edge_list() const;


private:
  //////////////////////////////////////////////////////////////////////
  // 内部で用いられる関数
  //////////////////////////////////////////////////////////////////////


private:
  //////////////////////////////////////////////////////////////////////
  // データメンバ
  //////////////////////////////////////////////////////////////////////

  // ID番号
  ymuint mId;

  // 枝のリスト
  vector<EqEdge*> mEdgeList;

};


//////////////////////////////////////////////////////////////////////
// インライン関数の定義
//////////////////////////////////////////////////////////////////////

// @brief コンストラクタ
// @param[in] id ノード番号
inline
EqNode::EqNode(ymuint id) :
  mId(id)
{
}

// @brief デストラクタ
inline
EqNode::~EqNode()
{
}

// @brief ID番号を返す．
inline
ymuint
EqNode::id() const
{
  return mId;
}

// @brief 枝のリストを返す．
inline
const vector<EqEdge*>&
EqNode::edge_list() const
{
  return mEdgeList;
}

END_NAMESPACE_YM_NLINK

#endif // EQNODE_H
