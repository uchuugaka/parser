# Process this file with autoconf to produce a configure script

# ===================================================================
# Initial block
# ===================================================================
AC_INIT([ymtools], [1.2],
        [yusuke_matsunaga@ieee.org],
        [ymtools])dnl

AC_REVISION($Rev: 2507 $)dnl

AC_PREREQ(2.57)dnl

AC_COPYRIGHT([
Copyright (C) 2005-2013 Yusuke Matsunaga
All rights reserved.
])dnl

AC_CONFIG_SRCDIR([include/ymnsdef.h])dnl

AC_CONFIG_AUX_DIR([config])dnl
AC_CONFIG_MACRO_DIR([config])dnl
AC_SUBST(ac_aux_dir)dnl

AM_INIT_AUTOMAKE()dnl


# ===================================================================
# Checks for programs
# ===================================================================
AC_ISC_POSIX
AC_PROG_MAKE_SET
AC_PROG_LIBTOOL
AC_CHECK_PROG([DOXYGEN],
	      [doxygen],
	      [doxygen Doxyfile],
	      [@echo \"You'll need to install 'doxygen'\"])
AC_SUBST(DOXYGEN)


# ===================================================================
# Declare files to be generated by configure script
# ===================================================================
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([libraries/Makefile])
AC_CONFIG_FILES([programs/Makefile])
AC_CONFIG_FILES([Doxyfile])

AC_CONFIG_SUBDIRS([include])
AC_CONFIG_SUBDIRS([tests])


# ===================================================================
# Declare files in 'libraries' subdirectories
# ===================================================================

YM_INIT_LIBRARIES_SUBDIRS

# libym_utils
YM_BUILD_LIBRARY([libym_utils], [yes],
		 [])

# libym_logic
YM_BUILD_LIBRARY([libym_logic], [yes],
		 [ym_libym_utils_enable])

# libym_smtlibv2
YM_BUILD_LIBRARY([libym_smtlibv2], [yes],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable])

# libym_mincov
YM_BUILD_LIBRARY([libym_mincov], [yes],
		 [ym_libym_utils_enable])

# libym_cell
YM_BUILD_LIBRARY([libym_cell], [yes],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable])

# libym_verilog
YM_BUILD_LIBRARY([libym_verilog], [yes],
		 [ym_libym_utils_enable])

# libym_networks
YM_BUILD_LIBRARY([libym_networks], [yes],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable,
		  ym_libym_verilog_enable])

# libym_gds
YM_BUILD_LIBRARY([libym_gds], [no],
		 [])

# libym_cec
YM_BUILD_LIBRARY([libym_cec], [yes],
		 [ym_libym_networks_enable,
		  ym_libym_logic_enable])

# libym_techmap
YM_BUILD_LIBRARY([libym_techmap], [yes],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable])

# libym_gbm
YM_BUILD_LIBRARY([libym_gbm], [no],
		 [ym_libym_networks_enable,
		  ym_libym_logic_enable])

# libym_seal
YM_BUILD_LIBRARY([libym_seal], [no],
		 [ym_libym_logic_enable,
		  ym_libym_networks_enable])

# libym_tclpp
YM_BUILD_LIBRARY([libym_tclpp], [yes],
		 [])

# libym_ymsh
YM_BUILD_LIBRARY([libym_ymsh], [no],
		 [])


YM_FINISH_LIBRARIES_SUBDIRS


# ===================================================================
# Declare files in 'programs' subdirectories
# ===================================================================

YM_INIT_PROGRAMS_SUBDIRS

# magus_tclsh
YM_BUILD_PROGRAM([magus_tclsh], [yes],
		 [ym_libym_tclpp_enable])

# atpg
YM_BUILD_PROGRAM([atpg], [no],
		 [ym_libym_utils_enable,
		  ym_libym_networks_enable,
		  ym_libym_tclpp_enable])

# matpg
YM_BUILD_PROGRAM([matpg], [no],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable,
		  ym_libym_networks_enable,
		  ym_libym_tclpp_enable])

# satpg
YM_BUILD_PROGRAM([satpg], [no],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable,
		  ym_libym_networks_enable,
		  ym_libym_tclpp_enable])

# igf
YM_BUILD_PROGRAM([igf], [no],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable,
		  ym_libym_tclpp_enable])

# llvmeq
YM_BUILD_PROGRAM([llvmeq], [no],
		 [ym_libym_utils_enable,
		  ym_libym_logic_enable,
		  ym_libym_tclpp_enable])

YM_FINISH_PROGRAMS_SUBDIRS


# ===================================================================
# Generate configured files
# ===================================================================
AC_OUTPUT

# End-Of-File
