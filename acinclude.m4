# M4 Macros for building ymlibs' configure
# author: Yusuke Matsunaga (松永 裕介)
#
# $Id: acinclude.m4 2507 2009-10-17 16:24:02Z matsunaga $
#
# Copyright (C) 2005-2009 Yusuke Matsunaga
# All rights reserved.

# ==================================================================
# YM_CHECK_BUILD(feature, default_value,
#                config_files,
#                requiring_libs,
#                [optional_test], [optional_test_msg])
#
# Description: Checks for package
# Output: if the package is enabled "ym_build_<feature>" is set "yes"
# ==================================================================
AC_DEFUN([YM_CHECK_BUILD],[
ym_tmp_enable=$2
AC_ARG_ENABLE([$1],
              AS_HELP_STRING([--enable-$1],
                             [build $1 (default is $2)]),
              [ym_tmp_enable=$enableval])
m4_ifval([$4], [
  m4_foreach([XXX], [$4], [
    if test $ym_tmp_enable = yes -a "X$ym_build_[]XXX" != Xyes; then
      ym_tmp_enable=no
      AC_MSG_NOTICE(['$1' will be disabled because 'XXX' is disabled])
    fi
  ])
])
m4_ifval([$5], [
if test $ym_tmp_enable = yes; then
  if $5; then
    ym_tmp_enable=no
    AC_MSG_NOTICE(['$1' will be disabled because $6])
  fi]
fi)
AC_MSG_CHECKING([whether to build $1])
AC_MSG_RESULT($ym_tmp_enable)
ym_build_$1=$ym_tmp_enable
m4_ifval([$3], [
if test $ym_tmp_enable = yes; then
  AC_CONFIG_FILES([$3])
  YM_ADD_EXTRA_DIRS($1)
  ym_tmp_incdir=`echo $1 | sed -e 's/lib\(.*\)/\1/'`
  YM_ADD_EXTRA_INCDIRS($ym_tmp_incdir)
fi
])
])


# ==================================================================
# YM_INIT_EXTRA_DIRS
# 
# Description: Initialize 'YM_EXTRA_DIRS'
# ==================================================================
AC_DEFUN([YM_INIT_EXTRA_DIRS], 
[
ym_extra_dirs=""
])


# ==================================================================
# YM_INIT_EXTRA_INCDIRS
# 
# Description: Initialize 'YM_EXTRA_INCDIRS'
# ==================================================================
AC_DEFUN([YM_INIT_EXTRA_INCDIRS], 
[
ym_extra_incdirs=""
])


# ==================================================================
# YM_ADD_EXTRA_DIRS(dirname)
#
# Description: add <dirname> to 'YM_EXTRA_DIRS'
# ==================================================================
AC_DEFUN([YM_ADD_EXTRA_DIRS], 
[
ym_extra_dirs="$ym_extra_dirs $1"
])


# ==================================================================
# YM_ADD_EXTRA_INCDIRS(dirname)
#
# Description: add <dirname> to 'YM_EXTRA_INCDIRS'
# ==================================================================
AC_DEFUN([YM_ADD_EXTRA_INCDIRS], 
[
ym_extra_incdirs="$ym_extra_incdirs $1"
])


# ==================================================================
# YM_FINISH_EXTRA_DIRS
#
# Description: finalize 'YM_EXTRA_DIRS'
# ==================================================================
AC_DEFUN([YM_FINISH_EXTRA_DIRS], [
AC_SUBST(YM_EXTRA_DIRS, $ym_extra_dirs)
])


# ==================================================================
# YM_FINISH_EXTRA_INCDIRS
#
# Description: finilize 'YM_EXTRA_INCDIRS'
# ==================================================================
AC_DEFUN([YM_FINISH_EXTRA_INCDIRS], [
AC_SUBST(YM_EXTRA_INCDIRS, $ym_extra_incdirs)
])


# ==================================================================
# YM_YMLIBS_CONFIG_OUTPUT(module_list)
#
# ==================================================================
AC_DEFUN([YM_YMLIBS_CONFIG_OUTPUT], [
ym_tmp_out="ymConfig.sh"

ymincludedir=${prefix}/include/AC_PACKAGE_NAME[]AC_PACKAGE_VERSION
ymlibdir=${prefix}/lib

AC_SUBST(YMINCLUDEDIR, [$ymincludedir])
AC_SUBST(YMLIBDIR, "$ymlibdir/AC_PACKAGE_NAME[]AC_PACKAGE_VERSION")

cat <<\EOF > $ym_tmp_out
# ymConfig.sh
# This shell script is automatically generated by ymlibs' configure 
# script.

EOF

echo "# Package Name" >> $ym_tmp_out
echo "YMLIBS_PACKAGE_NAME=${PACKAGE_NAME}" >> $ym_tmp_out
echo "" >> $ym_tmp_out

echo "# Version" >> $ym_tmp_out
echo "YMLIBS_VERSION=${PACKAGE_VERSION}" >> $ym_tmp_out
echo "" >> $ym_tmp_out

echo "# include options" >> $ym_tmp_out
echo "YM_INCLUDES=\"${GMP_INCLUDES} -I${ymincludedir}\"" >> $ym_tmp_out
echo "" >> $ym_tmp_out

echo "# installed libraries" >> $ym_tmp_out
echo "YM_LIBS_MODULES=\"" >> $ym_tmp_out
for module in $1; do
  echo "  $module\\" >> $ym_tmp_out
done
echo "\"" >> $ym_tmp_out

for module in $1; do
  modvar=`eval echo "$"ym_build_libym_${module}`
  MODULE=`echo $module | sed -e y/$as_cr_letters/$as_cr_LETTERS/`
  if test $modvar = yes; then
    echo "YM_LIBS_LIBYM_${MODULE}=${ymlibdir}/libym_${module}.la" >> $ym_tmp_out
  else
    echo "YM_LIBS_LIBYM_${MODULE}=" >> $ym_tmp_out
  fi
done
echo "" >> $ym_tmp_out
echo "# End-Of-YmConfig.sh" >> $ym_tmp_out
])

