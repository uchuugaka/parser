
/// @file NpnXform.cc
/// @brief NpnXform の実装ファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2005-2011 Yusuke Matsunaga
/// All rights reserved.


#include "NpnXform.h"


BEGIN_NAMESPACE_YM

BEGIN_NONAMESPACE

// 順列を表す配列
ymuint8 perm_table[24][4] = {
  { 0, 1, 2, 3},
  { 0, 1, 3, 2},
  { 0, 2, 1, 3},
  { 0, 2, 3, 1},
  { 0, 3, 1, 2},
  { 0, 3, 2, 1},
  { 1, 0, 2, 3},
  { 1, 0, 3, 2},
  { 1, 2, 0, 3},
  { 1, 2, 3, 0},
  { 1, 3, 0, 2},
  { 1, 3, 2, 0},
  { 2, 0, 1, 3},
  { 2, 0, 3, 1},
  { 2, 1, 0, 3},
  { 2, 1, 3, 0},
  { 2, 3, 0, 1},
  { 2, 3, 1, 0},
  { 3, 0, 1, 2},
  { 3, 0, 2, 1},
  { 3, 1, 0, 2},
  { 3, 1, 2, 0},
  { 3, 2, 0, 1},
  { 3, 2, 1, 0}
};

// 順列のみの合成テーブル
ymuint8 comp_table[24 * 24] = {
  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,
  1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,17,16,19,18,21,20,23,22,
  2,4,0,5,1,3,8,10,6,11,7,9,14,16,12,17,13,15,20,22,18,23,19,21,
  3,5,1,4,0,2,9,11,7,10,6,8,15,17,13,16,12,14,21,23,19,22,18,20,
  4,2,5,0,3,1,10,8,11,6,9,7,16,14,17,12,15,13,22,20,23,18,21,19,
  5,3,4,1,2,0,11,9,10,7,8,6,17,15,16,13,14,12,23,21,22,19,20,18,
  6,7,12,13,18,19,0,1,14,15,20,21,2,3,8,9,22,23,4,5,10,11,16,17,
  7,6,13,12,19,18,1,0,15,14,21,20,3,2,9,8,23,22,5,4,11,10,17,16,
  8,10,14,16,20,22,2,4,12,17,18,23,0,5,6,11,19,21,1,3,7,9,13,15,
  9,11,15,17,21,23,3,5,13,16,19,22,1,4,7,10,18,20,0,2,6,8,12,14,
  10,8,16,14,22,20,4,2,17,12,23,18,5,0,11,6,21,19,3,1,9,7,15,13,
  11,9,17,15,23,21,5,3,16,13,22,19,4,1,10,7,20,18,2,0,8,6,14,12,
  12,18,6,19,7,13,14,20,0,21,1,15,8,22,2,23,3,9,10,16,4,17,5,11,
  13,19,7,18,6,12,15,21,1,20,0,14,9,23,3,22,2,8,11,17,5,16,4,10,
  14,20,8,22,10,16,12,18,2,23,4,17,6,19,0,21,5,11,7,13,1,15,3,9,
  15,21,9,23,11,17,13,19,3,22,5,16,7,18,1,20,4,10,6,12,0,14,2,8,
  16,22,10,20,8,14,17,23,4,18,2,12,11,21,5,19,0,6,9,15,3,13,1,7,
  17,23,11,21,9,15,16,22,5,19,3,13,10,20,4,18,1,7,8,14,2,12,0,6,
  18,12,19,6,13,7,20,14,21,0,15,1,22,8,23,2,9,3,16,10,17,4,11,5,
  19,13,18,7,12,6,21,15,20,1,14,0,23,9,22,3,8,2,17,11,16,5,10,4,
  20,14,22,8,16,10,18,12,23,2,17,4,19,6,21,0,11,5,13,7,15,1,9,3,
  21,15,23,9,17,11,19,13,22,3,16,5,18,7,20,1,10,4,12,6,14,0,8,2,
  22,16,20,10,14,8,23,17,18,4,12,2,21,11,19,5,6,0,15,9,13,3,7,1,
  23,17,21,11,15,9,22,16,19,5,13,3,20,10,18,4,7,1,14,8,12,2,6,0
};

// 順列のみの逆変換テーブル
ymuint8 inv_table[24] = {
  0,1,2,4,3,5,6,7,12,18,13,19,8,10,14,20,16,22,9,11,15,21,17,23
};

// 入出力の反転ビットの変換テーブル
ymuint8 nperm_table[32 * 24] = {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  1,1,1,1,1,1,2,2,2,2,2,2,4,4,4,4,4,4,8,8,8,8,8,8,
  2,2,4,4,8,8,1,1,4,4,8,8,1,1,2,2,8,8,1,1,2,2,4,4,
  3,3,5,5,9,9,3,3,6,6,10,10,5,5,6,6,12,12,9,9,10,10,12,12,
  4,8,2,8,2,4,4,8,1,8,1,4,2,8,1,8,1,2,2,4,1,4,1,2,
  5,9,3,9,3,5,6,10,3,10,3,6,6,12,5,12,5,6,10,12,9,12,9,10,
  6,10,6,12,10,12,5,9,5,12,9,12,3,9,3,10,9,10,3,5,3,6,5,6,
  7,11,7,13,11,13,7,11,7,14,11,14,7,13,7,14,13,14,11,13,11,14,13,14,
  8,4,8,2,4,2,8,4,8,1,4,1,8,2,8,1,2,1,4,2,4,1,2,1,
  9,5,9,3,5,3,10,6,10,3,6,3,12,6,12,5,6,5,12,10,12,9,10,9,
  10,6,12,6,12,10,9,5,12,5,12,9,9,3,10,3,10,9,5,3,6,3,6,5,
  11,7,13,7,13,11,11,7,14,7,14,11,13,7,14,7,14,13,13,11,14,11,14,13,
  12,12,10,10,6,6,12,12,9,9,5,5,10,10,9,9,3,3,6,6,5,5,3,3,
  13,13,11,11,7,7,14,14,11,11,7,7,14,14,13,13,7,7,14,14,13,13,11,11,
  14,14,14,14,14,14,13,13,13,13,13,13,11,11,11,11,11,11,7,7,7,7,7,7,
  15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
  16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
  17,17,17,17,17,17,18,18,18,18,18,18,20,20,20,20,20,20,24,24,24,24,24,24,
  18,18,20,20,24,24,17,17,20,20,24,24,17,17,18,18,24,24,17,17,18,18,20,20,
  19,19,21,21,25,25,19,19,22,22,26,26,21,21,22,22,28,28,25,25,26,26,28,28,
  20,24,18,24,18,20,20,24,17,24,17,20,18,24,17,24,17,18,18,20,17,20,17,18,
  21,25,19,25,19,21,22,26,19,26,19,22,22,28,21,28,21,22,26,28,25,28,25,26,
  22,26,22,28,26,28,21,25,21,28,25,28,19,25,19,26,25,26,19,21,19,22,21,22,
  23,27,23,29,27,29,23,27,23,30,27,30,23,29,23,30,29,30,27,29,27,30,29,30,
  24,20,24,18,20,18,24,20,24,17,20,17,24,18,24,17,18,17,20,18,20,17,18,17,
  25,21,25,19,21,19,26,22,26,19,22,19,28,22,28,21,22,21,28,26,28,25,26,25,
  26,22,28,22,28,26,25,21,28,21,28,25,25,19,26,19,26,25,21,19,22,19,22,21,
  27,23,29,23,29,27,27,23,30,23,30,27,29,23,30,23,30,29,29,27,30,27,30,29,
  28,28,26,26,22,22,28,28,25,25,21,21,26,26,25,25,19,19,22,22,21,21,19,19,
  29,29,27,27,23,23,30,30,27,27,23,23,30,30,29,29,23,23,30,30,29,29,27,27,
  30,30,30,30,30,30,29,29,29,29,29,29,27,27,27,27,27,27,23,23,23,23,23,23,
  31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31
};

// 入出力の反転ビットの逆変換テーブル
ymuint8 inv_nperm_table[32 * 24] = {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  1,1,1,1,1,1,2,2,4,8,4,8,2,2,4,8,4,8,2,2,4,8,4,8,
  2,2,4,8,4,8,1,1,1,1,1,1,4,8,2,2,8,4,4,8,2,2,8,4,
  3,3,5,9,5,9,3,3,5,9,5,9,6,10,6,10,12,12,6,10,6,10,12,12,
  4,8,2,2,8,4,4,8,2,2,8,4,1,1,1,1,1,1,8,4,8,4,2,2,
  5,9,3,3,9,5,6,10,6,10,12,12,3,3,5,9,5,9,10,6,12,12,6,10,
  6,10,6,10,12,12,5,9,3,3,9,5,5,9,3,3,9,5,12,12,10,6,10,6,
  7,11,7,11,13,13,7,11,7,11,13,13,7,11,7,11,13,13,14,14,14,14,14,14,
  8,4,8,4,2,2,8,4,8,4,2,2,8,4,8,4,2,2,1,1,1,1,1,1,
  9,5,9,5,3,3,10,6,12,12,6,10,10,6,12,12,6,10,3,3,5,9,5,9,
  10,6,12,12,6,10,9,5,9,5,3,3,12,12,10,6,10,6,5,9,3,3,9,5,
  11,7,13,13,7,11,11,7,13,13,7,11,14,14,14,14,14,14,7,11,7,11,13,13,
  12,12,10,6,10,6,12,12,10,6,10,6,9,5,9,5,3,3,9,5,9,5,3,3,
  13,13,11,7,11,7,14,14,14,14,14,14,11,7,13,13,7,11,11,7,13,13,7,11,
  14,14,14,14,14,14,13,13,11,7,11,7,13,13,11,7,11,7,13,13,11,7,11,7,
  15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
  16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
  17,17,17,17,17,17,18,18,20,24,20,24,18,18,20,24,20,24,18,18,20,24,20,24,
  18,18,20,24,20,24,17,17,17,17,17,17,20,24,18,18,24,20,20,24,18,18,24,20,
  19,19,21,25,21,25,19,19,21,25,21,25,22,26,22,26,28,28,22,26,22,26,28,28,
  20,24,18,18,24,20,20,24,18,18,24,20,17,17,17,17,17,17,24,20,24,20,18,18,
  21,25,19,19,25,21,22,26,22,26,28,28,19,19,21,25,21,25,26,22,28,28,22,26,
  22,26,22,26,28,28,21,25,19,19,25,21,21,25,19,19,25,21,28,28,26,22,26,22,
  23,27,23,27,29,29,23,27,23,27,29,29,23,27,23,27,29,29,30,30,30,30,30,30,
  24,20,24,20,18,18,24,20,24,20,18,18,24,20,24,20,18,18,17,17,17,17,17,17,
  25,21,25,21,19,19,26,22,28,28,22,26,26,22,28,28,22,26,19,19,21,25,21,25,
  26,22,28,28,22,26,25,21,25,21,19,19,28,28,26,22,26,22,21,25,19,19,25,21,
  27,23,29,29,23,27,27,23,29,29,23,27,30,30,30,30,30,30,23,27,23,27,29,29,
  28,28,26,22,26,22,28,28,26,22,26,22,25,21,25,21,19,19,25,21,25,21,19,19,
  29,29,27,23,27,23,30,30,30,30,30,30,27,23,29,29,23,27,27,23,29,29,23,27,
  30,30,30,30,30,30,29,29,27,23,27,23,29,29,27,23,27,23,29,29,27,23,27,23,
  31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31
};

END_NONAMESPACE


// @brief 入力の置換を得る．
// @param[in] pos 元の入力位置 ( 0 <= pos < 4 )
// @return 置換先の位置
ymuint
NpnXform::input_perm(ymuint pos) const
{
  ymuint pid = (mData >> 5) & 31U;
  return perm_table[pid][pos];
}

// @brief 合成する．
NpnXform
operator*(const NpnXform& left,
	  const NpnXform& right)
{
  ymuint l_perm = (left.mData >> 5) & 31U;
  ymuint r_perm = (right.mData >> 5) & 31U;
  ymuint c_perm = comp_table[l_perm * 24 + r_perm];
  ymuint l_pols = left.mData & 31U;
  ymuint r_pols = right.mData & 31U;
  ymuint c_pols = l_pols ^ inv_nperm_table[r_pols * 24 + l_perm];
  return NpnXform(c_perm, c_pols);
}

// @brief 逆変換を求める．
NpnXform
inverse(const NpnXform& left)
{
  ymuint l_perm = (left.mData >> 5) & 31U;
  ymuint l_pols = left.mData & 31U;
  ymuint i_perm = inv_table[l_perm];
  ymuint i_pols = nperm_table[l_pols * 24 + l_perm];
  return NpnXform(i_perm, i_pols);
}

// @brief 入力の順列から順列番号を得る．
ymuint
NpnXform::perm_id(ymuint perm[])
{
  for (ymuint pid = 0; pid < 24; ++ pid) {
    if ( perm_table[pid][0] == perm[0] &&
	 perm_table[pid][1] == perm[1] &&
	 perm_table[pid][2] == perm[2] &&
	 perm_table[pid][3] == perm[3] ) {
      return pid;
    }
  }
  assert_not_reached(__FILE__, __LINE__);
  return 0;
}

END_NAMESPACE_YM
